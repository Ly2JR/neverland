import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c as u,d as n,f as s,a,w as o,e as t}from"./app-sZjF1f2d.js";const r={},k={href:"https://github.com/Ly2JR/wpf-samples/tree/main/src/update",target:"_blank",rel:"noopener noreferrer"},d={href:"https://learn.microsoft.com/zh-cn/archive/msdn-magazine/2014/april/async-programming-patterns-for-asynchronous-mvvm-applications-commands",target:"_blank",rel:"noopener noreferrer"},m=t('<figure><img src="https://nas.ilyl.life:8092/wpf/update.gif" alt="更新" tabindex="0" loading="lazy"><figcaption>更新</figcaption></figure><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 更新日志说明</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 显示进度条</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 显示文件大小</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 显示下载速度</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 显示下载时间</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 支持批量更新文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 支持文件下载重命名</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 支持文件下载后删除重名文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 支持相同文件重复下载自动重命名</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 更多功能扩展<code>update.xml</code>配置文件</label></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>Environment.Exit(0);</code> 用于退出程序</p><p><code>Process</code> 用于启动其他程序</p></div><p>虽说是更新，本质还是下载，更新又跟程序设计有关，例如：</p>',4),v=n("li",null,[n("p",null,"本身就一个exe程序"),n("p",null,"更新就是替换本身，先退出在启动新的程序")],-1),g=n("p",null,"主程序exe不动，而是直接更新替换dll文件",-1),b=n("li",null,[n("p",null,"启动器，程序及相关dll"),n("p",null,"同2类似，只是多个启动器，启动器不变，更新相关dll")],-1),h=t(`<p>更新首先要有一个信息源用来比对，需要更新哪些内容，这里以<code>IIS</code>的本身<code>80</code>端口服务器，用<code>xml</code>来做文件更新配置文件，相关更新文件放在<code>80</code>端口目录下</p><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p>配置文件按实际需求进行额外扩展。</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iisstart<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>htm<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iisstart<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>png<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exe<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logs</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>1.更新html文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>2.更新图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>3.更新主程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f=t(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Xml</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> UpdateUrl <span class="token operator">=</span> <span class="token string">&quot;http://localhost:80/update.xml&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> updateXml <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
updateXml<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>UpdateUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> logs <span class="token operator">=</span> updateXml<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span><span class="token string">&quot;update/logs/log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>logs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> log <span class="token keyword">in</span> logs<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> logTxt <span class="token operator">=</span> log<span class="token punctuation">.</span>InnerText<span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>logTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> files <span class="token operator">=</span> updateXml<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span><span class="token string">&quot;update/file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>files <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> file <span class="token keyword">in</span> files<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> name <span class="token operator">=</span> file<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">&quot;suffix&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suffix</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新本身" tabindex="-1"><a class="header-anchor" href="#更新本身"><span>更新本身</span></a></h2><p>对应场景一，就一个主程序。</p><figure><img src="https://nas.ilyl.life:8092/wpf/update1.gif" alt="更新自身" tabindex="0" loading="lazy"><figcaption>更新自身</figcaption></figure>`,4),y=n("code",null,"update",-1),w=n("code",null,"WindowsFormsApp1",-1),x={href:"https://github.com/Ly2JR/wpf-samples/tree/main/src/WindowsFormsApp1",target:"_blank",rel:"noopener noreferrer"},_=t(`<h3 id="调整配置文件" tabindex="-1"><a class="header-anchor" href="#调整配置文件"><span>调整配置文件</span></a></h3><ol><li>添加<code>delete</code>属性，用来判断当前下载的文件是覆盖还是累加。</li><li>添加<code>autorun</code>属性，用来判断下载的文件在全部下载完成之后是否自动启动，并退出下载器</li></ol><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WindowsFormsApp1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">delete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autorun</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logs</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>1.更新主程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调整下载器" tabindex="-1"><a class="header-anchor" href="#调整下载器"><span>调整下载器</span></a></h3><p>默认是手动点击执行的，需要扩展下，支持自动执行和实现自动启动及退出功能。</p><p>因为下载器是用WPF开发，所以需要在<code>App.xaml.cs</code>文件里，重写<code>OnStartup</code>方法，用来接受启动参数，这里为<code>adl</code>。</p><p>下载器用来接受参数部分</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStartup</span><span class="token punctuation">(</span><span class="token class-name">StartupEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Args <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Args<span class="token punctuation">.</span>Length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> args <span class="token operator">=</span> e<span class="token punctuation">.</span>Args<span class="token punctuation">;</span>
        Consts<span class="token punctuation">.</span>AutoDownLoad <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>Consts<span class="token punctuation">.</span>AutoDownloadArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnStartup</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MainWindowViewModel.cs</code>用于自动下载和自动启动并退出自身，额外声明了一个<code>FindishedList</code>属性用来存储已经下载完成的记录，用于判别文件是否全部下载完成，自动启动并退出自身需要在全部下载完成之后执行。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> FinishedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">MainWindowViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Operations <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span>CountUrlBytesViewModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    FinishedList<span class="token punctuation">.</span>CollectionChanged <span class="token operator">+=</span> FinishedList_CollectionChanged<span class="token punctuation">;</span>
    RunCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateComand</span><span class="token punctuation">(</span>Run<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Consts<span class="token punctuation">.</span>AutoDownLoad<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Task<span class="token punctuation">.</span>Factory<span class="token punctuation">.</span><span class="token function">StartNew</span><span class="token punctuation">(</span>Run<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当已经下载完成的记录等于需要下载的文件记录，则启动程序并退出自身</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FinishedList_CollectionChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Specialized<span class="token punctuation">.</span>NotifyCollectionChangedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Action <span class="token operator">==</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Specialized<span class="token punctuation">.</span>NotifyCollectionChangedAction<span class="token punctuation">.</span>Add<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>autoRun<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>FinishedList<span class="token punctuation">.</span>Count <span class="token operator">==</span> Operations<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProcessStartInfo</span>
            <span class="token punctuation">{</span>
                FileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span>BaseDirectory</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suffix</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            Process<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>

            Environment<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下载部分，新增了是删除文件还是重命名文件的判断，根据配置文件<code>delete</code>来区分</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">DownloadAndCountBytesAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> suffix<span class="token punctuation">,</span><span class="token class-name">CancellationToken</span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">bool</span></span> deleteOld<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token range operator">..</span><span class="token punctuation">.</span>
  <span class="token class-name"><span class="token keyword">var</span></span> savePath <span class="token operator">=</span> Environment<span class="token punctuation">.</span>CurrentDirectory<span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">var</span></span> saveFileName <span class="token operator">=</span> FileName<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>deleteOld<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> files <span class="token operator">=</span> Directory<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span>savePath<span class="token punctuation">,</span> searchPattern<span class="token punctuation">,</span> SearchOption<span class="token punctuation">.</span>TopDirectoryOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name"><span class="token keyword">var</span></span> hasFiles <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasFiles <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          saveFileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hasFiles</span><span class="token punctuation">}</span></span><span class="token string">).</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suffix</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
  <span class="token punctuation">{</span>
      File<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">savePath</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">FileName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  savePath <span class="token operator">+=</span> <span class="token interpolation-string"><span class="token string">$&quot;/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">saveFileName</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
  <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新模块化文件" tabindex="-1"><a class="header-anchor" href="#更新模块化文件"><span>更新模块化文件</span></a></h2>`,15),q={href:"https://github.com/Ly2JR/wpf-samples/tree/main/src/demo",target:"_blank",rel:"noopener noreferrer"},C=t('<figure><img src="https://nas.ilyl.life:8092/wpf/update2.gif" alt="更新模块化文件" tabindex="0" loading="lazy"><figcaption>更新模块化文件</figcaption></figure><p>因为Prism模块，在已经加载模块化文件后无法卸载，这是无解的。所以在程序启动时进行检查。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>正常来说主程序exe也可以更新，但是通常不这么做，如有可能还是用场景三的方式来更新。</p></div><h2 id="启动器-更新主程序及模块化文件" tabindex="-1"><a class="header-anchor" href="#启动器-更新主程序及模块化文件"><span>启动器，更新主程序及模块化文件</span></a></h2>',4),F=n("figure",null,[n("img",{src:"https://nas.ilyl.life:8092/wpf/update3.gif",alt:"VB调用.NET Core",tabindex:"0",loading:"lazy"}),n("figcaption",null,"VB调用.NET Core")],-1);function A(L,N){const e=l("RouteLink"),p=l("ExternalLinkIcon");return i(),u("div",null,[n("p",null,[s("之前一篇"),a(e,{to:"/cs/wpf/download.html"},{default:o(()=>[s("下载")]),_:1}),s("用控制台演示了下载的功能，而本次更新是在这基础上加了UI界面实现软件更新的功能，"),n("a",k,[s("源代码地址"),a(p)]),s("。")]),n("p",null,[s("受"),n("a",d,[s("异步编程"),a(p)]),s("启发，借用了大量代码。")]),m,n("ol",null,[v,n("li",null,[n("p",null,[s("主程序是一个exe程序，其他为dll文件，像"),a(e,{to:"/cs/wpf/plugin.html"},{default:o(()=>[s("模块化")]),_:1}),s("一样")]),g]),b]),h,n("p",null,[a(e,{to:"/tools/csharp/xml.html"},{default:o(()=>[s("读取XML文件")]),_:1}),s(":")]),f,n("p",null,[s("将"),y,s("项目文件拷贝到需要更新的程序目录下，这里为"),w,s("项目的Bin目录下。"),n("a",x,[s("源码地址"),a(p)])]),_,n("p",null,[s("对应场景二，主程序就是一个exe显示，其他业务逻辑或者资源文件分开，只更新这些文件即可。"),n("a",q,[s("源代码地址"),a(p)])]),C,n("p",null,[s("对应场景三，是场景二的升级版本,既更新了主程序也更新了其他文件，详情参考"),a(e,{to:"/tools/csharp/com.html"},{default:o(()=>[s("COM")]),_:1}),s("。")]),F])}const D=c(r,[["render",A],["__file","update.html.vue"]]),O=JSON.parse('{"path":"/cs/wpf/update.html","title":"软件更新","lang":"zh-CN","frontmatter":{"title":"软件更新","date":"2023-06-28T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["C#"],"tag":["WPF","异步编程"],"description":"之前一篇用控制台演示了下载的功能，而本次更新是在这基础上加了UI界面实现软件更新的功能，源代码地址。 受异步编程启发，借用了大量代码。 更新更新 更新日志说明 显示进度条 显示文件大小 显示下载速度 显示下载时间 支持批量更新文件 支持文件下载重命名 支持文件下载后删除重名文件 支持相同文件重复下载自动重命名 更多功能扩展update.xml配置文件 ...","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/wpf/update.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"软件更新"}],["meta",{"property":"og:description","content":"之前一篇用控制台演示了下载的功能，而本次更新是在这基础上加了UI界面实现软件更新的功能，源代码地址。 受异步编程启发，借用了大量代码。 更新更新 更新日志说明 显示进度条 显示文件大小 显示下载速度 显示下载时间 支持批量更新文件 支持文件下载重命名 支持文件下载后删除重名文件 支持相同文件重复下载自动重命名 更多功能扩展update.xml配置文件 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://nas.ilyl.life:8092/wpf/update.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-28T12:15:36.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:tag","content":"异步编程"}],["meta",{"property":"article:published_time","content":"2023-06-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-28T12:15:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"软件更新\\",\\"image\\":[\\"https://nas.ilyl.life:8092/wpf/update.gif\\",\\"https://nas.ilyl.life:8092/wpf/update1.gif\\",\\"https://nas.ilyl.life:8092/wpf/update2.gif\\",\\"https://nas.ilyl.life:8092/wpf/update3.gif\\"],\\"datePublished\\":\\"2023-06-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-28T12:15:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:ly2@ilyl.life\\"}]}"]]},"headers":[{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"更新本身","slug":"更新本身","link":"#更新本身","children":[{"level":3,"title":"调整配置文件","slug":"调整配置文件","link":"#调整配置文件","children":[]},{"level":3,"title":"调整下载器","slug":"调整下载器","link":"#调整下载器","children":[]}]},{"level":2,"title":"更新模块化文件","slug":"更新模块化文件","link":"#更新模块化文件","children":[]},{"level":2,"title":"启动器，更新主程序及模块化文件","slug":"启动器-更新主程序及模块化文件","link":"#启动器-更新主程序及模块化文件","children":[]}],"git":{"createdTime":1687943481000,"updatedTime":1711628136000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":15}]},"readingTime":{"minutes":4.15,"words":1244},"filePathRelative":"cs/wpf/update.md","localizedDate":"2023年6月28日","excerpt":"<p>之前一篇<a href=\\"/cs/wpf/download.html\\" target=\\"_blank\\">下载</a>用控制台演示了下载的功能，而本次更新是在这基础上加了UI界面实现软件更新的功能，<a href=\\"https://github.com/Ly2JR/wpf-samples/tree/main/src/update\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">源代码地址</a>。</p>\\n<p>受<a href=\\"https://learn.microsoft.com/zh-cn/archive/msdn-magazine/2014/april/async-programming-patterns-for-asynchronous-mvvm-applications-commands\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">异步编程</a>启发，借用了大量代码。</p>","autoDesc":true}');export{D as comp,O as data};
