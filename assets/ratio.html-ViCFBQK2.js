import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as l,d as s,e as n,f as t,b as e}from"./app-i-PjYzOs.js";const c={},u=e('<p>之前使用WPF配合FFMPEG进行转码显示海康视频，本次将转码的视频近一步处理，按指定比例显示。</p><h2 id="屏幕比" tabindex="-1"><a class="header-anchor" href="#屏幕比" aria-hidden="true">#</a> 屏幕比</h2><p>屏幕比例即屏幕的宽度和高度的比例。</p><p>常见的有:<code>4:3</code>,<code>16:9</code>。</p><p>这里需要用到它们的比值即：</p><p><code>4:3</code>: 4/3=1.33D</p><p><code>16:9</code>:16/9=1.77D</p><h2 id="转换方式" tabindex="-1"><a class="header-anchor" href="#转换方式" aria-hidden="true">#</a> 转换方式</h2><p>当视频源固定按指定屏幕比显示转换有两种方式：</p><ol><li>使用FFMPEG进行转换时同时更改输出大小</li><li>通过布局调整显示的大小</li></ol><p>优缺点各自取舍。</p><p>例如：当预览按指定屏幕比显示时，两种方式都没问题，当对预览的视频进行截图或者录像时就产生差异。</p>',12),r={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.image.stretch?view=windowsdesktop-7.0",target:"_blank",rel:"noopener noreferrer"},d={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.media.stretch?view=windowsdesktop-7.0#system-windows-media-stretch-uniform",target:"_blank",rel:"noopener noreferrer"},k=e('<p>上部分显示视频通过装饰器调整显示比例，下部分视频为原始视频大小,只调整了Stretch模式。</p><ol><li><p><code>Stretch=&quot;None&quot;</code>：Image比输出源区域小，不能完整的显示视频源大小</p><figure><img src="https://nas.ilyl.life:8092/wpf/none.gif" alt="Stretch=&quot;None&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch=&quot;None&quot;</figcaption></figure></li><li><p><code>Stretch=&quot;Fill&quot;</code>：Image能完整的显示视频源大小，但是区分不了屏幕比</p><figure><img src="https://nas.ilyl.life:8092/wpf/fill.gif" alt="Stretch=&quot;Fill&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch=&quot;Fill&quot;</figcaption></figure></li><li><p><code>Stretch=&quot;Uniform&quot;</code>：Image能完整的显示视频源大小，也能区分屏幕比，但是需要调整视频源大小</p><figure><img src="https://nas.ilyl.life:8092/wpf/uniform.gif" alt="Stretch=&quot;Uniform&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch=&quot;Uniform&quot;</figcaption></figure></li><li><p><code>Stretch=&quot;UniformToFill&quot;</code>：Image能完整的显示视频源大小，但是区分不了屏幕比</p><figure><img src="https://nas.ilyl.life:8092/wpf/uniformtofill.gif" alt="Stretch=&quot;UniformToFill&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch=&quot;UniformToFill&quot;</figcaption></figure></li></ol><p>这里通过布局的方式，完成最终屏蔽比显示</p><figure><img src="https://nas.ilyl.life:8092/wpf/ratio.gif" alt="屏幕比" width="420" height="200" tabindex="0" loading="lazy"><figcaption>屏幕比</figcaption></figure><h3 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h3><p>通过布局调整屏幕比显示效果，即视频的输出源不变、只改变显示的数据源大小。</p><p>以视频源的宽度<code>640</code>，高度<code>360</code>为例：</p><table><thead><tr><th style="text-align:left;">模式</th><th style="text-align:left;">屏幕比</th><th style="text-align:left;">宽度</th><th style="text-align:left;">高度</th></tr></thead><tbody><tr><td style="text-align:left;">横向拉伸</td><td style="text-align:left;"><code>16:9</code></td><td style="text-align:left;">640</td><td style="text-align:left;">360</td></tr><tr><td style="text-align:left;">横向拉伸</td><td style="text-align:left;"><code>4:3</code></td><td style="text-align:left;"><code>478</code></td><td style="text-align:left;">360</td></tr><tr><td style="text-align:left;">纵向拉伸</td><td style="text-align:left;"><code>16:9</code></td><td style="text-align:left;">640</td><td style="text-align:left;">360</td></tr><tr><td style="text-align:left;">纵向拉伸</td><td style="text-align:left;"><code>4:3</code></td><td style="text-align:left;">640</td><td style="text-align:left;"><code>480</code></td></tr></tbody></table><p>其中，黑色部分是显示的区域，绿色部分为视频输出显示的区域。</p><figure><img src="https://nas.ilyl.life:8092/wpf/ratio_layout.gif" alt="屏幕比布局" width="420" height="200" tabindex="0" loading="lazy"><figcaption>屏幕比布局</figcaption></figure>',10),v={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.decorator?view=windowsdesktop-7.0",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Grid_Container<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">theme:</span>RatioBox</span> <span class="token attr-name">Ratio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Ratio}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Green<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span>
                <span class="token attr-name">Panel.ZIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">RenderOptions.BitmapScalingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>HighQuality<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding VedioSource}<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">Stretch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Fill<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">UseLayoutRounding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>True<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">theme:</span>RatioBox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RatioBox</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Decorator</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">double</span></span> Ratio
     <span class="token punctuation">{</span>
         <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">GetValue</span><span class="token punctuation">(</span>RatioProperty<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
         <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token function">SetValue</span><span class="token punctuation">(</span>RatioProperty<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">DependencyProperty</span> RatioProperty <span class="token operator">=</span>
         DependencyProperty<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">&quot;Ratio&quot;</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">double</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">RatioBox</span><span class="token punctuation">)</span>
             <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FrameworkPropertyMetadata</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span>NaN<span class="token punctuation">,</span> 
                 FrameworkPropertyMetadataOptions<span class="token punctuation">.</span>AffectsMeasure <span class="token operator">|</span> FrameworkPropertyMetadataOptions<span class="token punctuation">.</span>AffectsArrange<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Size</span> <span class="token function">MeasureOverride</span><span class="token punctuation">(</span><span class="token class-name">Size</span> constraint<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span><span class="token function">IsNaN</span><span class="token punctuation">(</span>Ratio<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">{</span>
             <span class="token keyword">return</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">MeasureOverride</span><span class="token punctuation">(</span>constraint<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span>
         <span class="token punctuation">{</span>
             <span class="token class-name">UIElement</span> child <span class="token operator">=</span> Child<span class="token punctuation">;</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> h <span class="token operator">=</span> constraint<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> w <span class="token operator">=</span> h <span class="token operator">*</span> Ratio<span class="token punctuation">;</span>
                 <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&gt;</span> constraint<span class="token punctuation">.</span>Width<span class="token punctuation">)</span>
                 <span class="token punctuation">{</span>
                     w <span class="token operator">=</span> constraint<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
                     h <span class="token operator">=</span> w <span class="token operator">/</span> Ratio<span class="token punctuation">;</span>
                 <span class="token punctuation">}</span>
                 child<span class="token punctuation">.</span><span class="token function">Measure</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
             <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Size</span> <span class="token function">ArrangeOverride</span><span class="token punctuation">(</span><span class="token class-name">Size</span> arrangeSize<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span><span class="token function">IsNaN</span><span class="token punctuation">(</span>Ratio<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">{</span>
             <span class="token keyword">return</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ArrangeOverride</span><span class="token punctuation">(</span>arrangeSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span>
         <span class="token punctuation">{</span>
             <span class="token class-name">UIElement</span> child <span class="token operator">=</span> Child<span class="token punctuation">;</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> h <span class="token operator">=</span> arrangeSize<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> w <span class="token operator">=</span> h <span class="token operator">*</span> Ratio<span class="token punctuation">;</span>
                 <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&gt;</span> arrangeSize<span class="token punctuation">.</span>Width<span class="token punctuation">)</span>
                 <span class="token punctuation">{</span>
                     w <span class="token operator">=</span> arrangeSize<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
                     h <span class="token operator">=</span> w <span class="token operator">/</span> Ratio<span class="token punctuation">;</span>
                 <span class="token punctuation">}</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> x <span class="token operator">=</span> <span class="token punctuation">(</span>arrangeSize<span class="token punctuation">.</span>Width <span class="token operator">-</span> w<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> y <span class="token operator">=</span> <span class="token punctuation">(</span>arrangeSize<span class="token punctuation">.</span>Height <span class="token operator">-</span> h<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">var</span></span> cb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
                 child<span class="token punctuation">.</span><span class="token function">Arrange</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
             <span class="token keyword">return</span> arrangeSize<span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ffmpeg" tabindex="-1"><a class="header-anchor" href="#ffmpeg" aria-hidden="true">#</a> FFMPEG</h3><p>通过调整<code>AVFrame</code>类型的参数即可，改变输出源大小。</p>`,4);function g(m,b){const a=o("ExternalLinkIcon");return i(),l("div",null,[u,s("p",null,[n("这里又涉及到另外一个问题，"),s("a",r,[n("Image.Stretch"),t(a)]),n("属性，"),s("a",d,[n("Stretch枚举"),t(a)]),n("效果。")]),k,s("p",null,[n("关键在于"),s("a",v,[n("Decorator"),t(a)]),n("装饰器")]),h])}const w=p(c,[["render",g],["__file","ratio.html.vue"]]);export{w as default};
