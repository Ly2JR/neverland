import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c as p,d as a,e as n,f as t,b as c}from"./app-Qqrm6Jq9.js";const i={},r={class:"hint-container tip"},u=a("p",{class:"hint-container-title"},"提示",-1),d={href:"https://element-plus.org/zh-CN/guide/design.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/HandyOrg/HandyControl",target:"_blank",rel:"noopener noreferrer"},g=c(`<p>但是直接应用在项目中又有一些局限，所以重新实现。</p><p>一方面是学习总结，加深影响。</p><p>另外一方面是需要不断的提炼，使用，才能有一个好的产品。</p><h2 id="指南" tabindex="-1"><a class="header-anchor" href="#指南"><span>指南</span></a></h2><ol><li><p>引用<code>Neverland.Wpf.dll</code></p></li><li><p>App.xaml添加资源引用</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Application.Resources</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary.MergedDictionaries</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pack://application:,,,/Neverland.Wpf;component/Themes/Light.xaml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pack://application:,,,/Neverland.Wpf;component/Themes/Generic.xaml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ResourceDictionary.MergedDictionaries</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ResourceDictionary</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Application.Resources</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>MainWindow.xaml添加声明</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>xmlns:nl=&quot;http:ilyl.life&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol>`,5);function v(h,_){const s=o("ExternalLinkIcon");return l(),p("div",null,[a("div",r,[u,a("p",null,[n("仿照"),a("a",d,[n("element plus"),t(s)]),n("的一款wpf主题控件")])]),a("p",null,[n("免费开源的"),a("a",k,[n("MaterialDesignInXamlToolkit"),t(s)]),n("和"),a("a",m,[n("HandyControl"),t(s)]),n("以及其他的控件等等非常不错。")]),g])}const b=e(i,[["render",v],["__file","index.html.vue"]]);export{b as default};
