const t=JSON.parse('{"key":"v-aa13d6a6","path":"/cs/design-pattern/template-method.html","title":"模板方法","lang":"zh-CN","frontmatter":{"title":"模板方法","date":"2023-06-17T00:00:00.000Z","dir.order":22,"order":22,"editLink":false,"footer":false,"category":["设计模式"],"tag":["设计模式"],"description":"参与此模式的类和对象包括： AbstractClass(DataObject) 定义具体子类定义的抽象原始操作以实现算法的步骤。 实现定义算法骨架的模板方法。模板方法调用原始操作以及在AbstractClass中定义的操作或其他对象的操作。 ConcreteClass(CustomerDataObject) 实现元素操作以执行算法的子类特定步骤。","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/design-pattern/template-method.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"模板方法"}],["meta",{"property":"og:description","content":"参与此模式的类和对象包括： AbstractClass(DataObject) 定义具体子类定义的抽象原始操作以实现算法的步骤。 实现定义算法骨架的模板方法。模板方法调用原始操作以及在AbstractClass中定义的操作或其他对象的操作。 ConcreteClass(CustomerDataObject) 实现元素操作以执行算法的子类特定步骤。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T07:17:50.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-21T07:17:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模板方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-21T07:17:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1687005402000,"updatedTime":1689923870000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":2}]},"readingTime":{"minutes":1.69,"words":508},"filePathRelative":"cs/design-pattern/template-method.md","localizedDate":"2023年6月17日","excerpt":"<p>参与此模式的类和对象包括：</p>\\n<ul>\\n<li>\\n<p>AbstractClass(<code>DataObject</code>)</p>\\n<ul>\\n<li>定义具体子类定义的抽象原始操作以实现算法的步骤。</li>\\n<li>实现定义算法骨架的模板方法。模板方法调用原始操作以及在AbstractClass中定义的操作或其他对象的操作。</li>\\n</ul>\\n</li>\\n<li>\\n<p>ConcreteClass(<code>CustomerDataObject</code>)</p>\\n<ul>\\n<li>实现元素操作以执行算法的子类特定步骤。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
