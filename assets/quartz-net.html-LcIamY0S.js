const n=JSON.parse('{"key":"v-754a8506","path":"/cs/wpf/quartz-net.html","title":"Quartz.net","lang":"zh-CN","frontmatter":{"title":"Quartz.net","date":"2023-11-07T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["C#"],"tag":["quartz.net","Prism"],"description":"在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入IContainerExtension。 此时需要自己实现IJobFactory接口即可。 以定时生成CSV文件的Job为例 实现IJobFactory public class CsvJobFactory:IJobFactory { private readonly IContainerExtension _container; public CsvJobFactory(IContainerExtension container) { _container=container; } public IJob NewJob(TriggerFiredBundle bundle，IScheduler scheduler) { return container.Resolve(bundle.JobDetail.JobType) as IJob; } public void ReturnJob(IJob job) { var disposable = job as IDisposable; if (disposable != nul1){ disposable.Dispose() } } }","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/wpf/quartz-net.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"Quartz.net"}],["meta",{"property":"og:description","content":"在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入IContainerExtension。 此时需要自己实现IJobFactory接口即可。 以定时生成CSV文件的Job为例 实现IJobFactory public class CsvJobFactory:IJobFactory { private readonly IContainerExtension _container; public CsvJobFactory(IContainerExtension container) { _container=container; } public IJob NewJob(TriggerFiredBundle bundle，IScheduler scheduler) { return container.Resolve(bundle.JobDetail.JobType) as IJob; } public void ReturnJob(IJob job) { var disposable = job as IDisposable; if (disposable != nul1){ disposable.Dispose() } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-07T07:43:07.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"quartz.net"}],["meta",{"property":"article:tag","content":"Prism"}],["meta",{"property":"article:published_time","content":"2023-11-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-07T07:43:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quartz.net\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-07T07:43:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"实现IJobFactory","slug":"实现ijobfactory","link":"#实现ijobfactory","children":[]},{"level":2,"title":"注入自定义JobFactory","slug":"注入自定义jobfactory","link":"#注入自定义jobfactory","children":[]},{"level":2,"title":"定时作业","slug":"定时作业","link":"#定时作业","children":[]}],"git":{"createdTime":1699342987000,"updatedTime":1699342987000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":1}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"cs/wpf/quartz-net.md","localizedDate":"2023年11月7日","excerpt":"<p>在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入<code>IContainerExtension</code>。</p>\\n<p>此时需要自己实现<code>IJobFactory</code>接口即可。</p>\\n<p>以定时生成CSV文件的Job为例</p>\\n<h2>实现IJobFactory</h2>\\n<div class=\\"language-csharp line-numbers-mode\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CsvJobFactory</span><span class=\\"token punctuation\\">:</span><span class=\\"token type-list\\"><span class=\\"token class-name\\">IJobFactory</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">readonly</span> <span class=\\"token class-name\\">IContainerExtension</span> _container<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">CsvJobFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IContainerExtension</span> container<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        _container<span class=\\"token operator\\">=</span>container<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">IJob</span> <span class=\\"token function\\">NewJob</span><span class=\\"token punctuation\\">(</span>TriggerFiredBundle bundle，<span class=\\"token class-name\\">IScheduler</span> scheduler<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> container<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Resolve</span><span class=\\"token punctuation\\">(</span>bundle<span class=\\"token punctuation\\">.</span>JobDetail<span class=\\"token punctuation\\">.</span>JobType<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token class-name\\">IJob</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">ReturnJob</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IJob</span> job<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> disposable <span class=\\"token operator\\">=</span> job <span class=\\"token keyword\\">as</span> <span class=\\"token class-name\\">IDisposable</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>disposable <span class=\\"token operator\\">!=</span> nul1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            disposable<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Dispose</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
