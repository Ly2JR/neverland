import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as e,c as t,f as p,d as o,b as c}from"./app-NRS92Mcx.js";const i={},l=o("p",null,"使用Prism时，一个最常见的问题就是登录与主页面切换，启用只有一个Shell，如何切换到另外一个Shell。",-1),u=c(`<h2 id="application-current-mainwindow" tabindex="-1"><a class="header-anchor" href="#application-current-mainwindow" aria-hidden="true">#</a> Application.Current.MainWindow</h2><p>通过Application.Current.MainWindow切换登录和主页面</p><p><code>LoginView</code>为登录页面</p><p><code>ShellView</code>为主页面</p><ol><li><p>在Bootstrapper里设置登录页面启动</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">DependencyObject</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>LoginView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>登录成功后</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>代码高亮处缺少时，无法使用IRegionManager中的导航功能</p></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> shellView <span class="token operator">=</span> _container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ShellView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
RegionManager<span class="token punctuation">.</span><span class="token function">SetRegionManager</span><span class="token punctuation">(</span>shellView<span class="token punctuation">,</span> _regionManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
RegionManager<span class="token punctuation">.</span><span class="token function">UpdateRegions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Application<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>MainWindow<span class="token punctuation">.</span><span class="token function">Hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Application<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>MainWindow <span class="token operator">=</span> shellView<span class="token punctuation">;</span>
shellView<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="region" tabindex="-1"><a class="header-anchor" href="#region" aria-hidden="true">#</a> Region</h2><p>通过Region添加LoginView和MainView</p><p><code>LoginView</code>为登录布局</p><p><code>MainView</code>为主页面布局</p><p><code>ShellView</code>为主页面</p><ol><li><p>在Bootstrapper里设置Shell页面启动</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">DependencyObject</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ShellView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>ShellView页面</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Window</span> <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Regions.Views.MainWindow<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.microsoft.com/winfx/2006/xaml/presentation<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.microsoft.com/winfx/2006/xaml<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">xmlns:</span>prism</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://prismlibrary.com/<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Shell<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>525<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>350<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentControl</span> <span class="token attr-name"><span class="token namespace">prism:</span>RegionManager.RegionName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ContentRegion<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Window</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>登录成功后</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>无法在VM构造函数里直接使用<code>_regionManager.Regions[&quot;ContentRegion&quot;]</code></p><p>可以替换为<code>_regionManager.RegisterViewWithRegion(&quot;ContentRegion&quot;, typeof(MainView))</code></p></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> hasView <span class="token operator">=</span> region<span class="token punctuation">.</span><span class="token function">GetView</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>MainView<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> mainView<span class="token operator">=</span>_region<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MainView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>hasView <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    region<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mainView<span class="token punctuation">,</span> <span class="token keyword">nameof</span><span class="token punctuation">(</span>MainView<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    region<span class="token punctuation">.</span><span class="token function">Activate</span><span class="token punctuation">(</span>hasView<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>一个潜在的问题在于，登录布局页面与主页面布局大小可能不一致。但是启动时的Shell大小已定。</p><p>这里可以使用<code>IEventAggregator</code>，让Shell来调整页面大小。</p><h2 id="initializeshell" tabindex="-1"><a class="header-anchor" href="#initializeshell" aria-hidden="true">#</a> InitializeShell</h2><p><code>LoginView</code>为登录页面</p><p><code>ShellView</code>为主页面</p><ol><li><p>在Bootstrapper里设置Shell页面启动</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">DependencyObject</span> <span class="token function">CreateShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ShellView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>Bootstrapper</code>里初始化Shell,设置登录页启动</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitializeShell</span><span class="token punctuation">(</span><span class="token class-name">DependencyObject</span> shell<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> login <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoginView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>login<span class="token punctuation">.</span>DataContext <span class="token keyword">is</span> <span class="token class-name">LoginViewModel</span> ctx<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>LoginResult <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> ret<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">InitializeShell</span><span class="token punctuation">(</span>shell<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>login<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Application<span class="token punctuation">.</span>Current<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="自定义窗体" tabindex="-1"><a class="header-anchor" href="#自定义窗体" aria-hidden="true">#</a> 自定义窗体</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>需要安装预览版的Prism</p></div><p><code>LoginWindowView</code>:登录窗体载体</p><p><code>LoginView</code>:登录窗体内的用户控件</p><p><code>ShellWindowView</code>:主窗体</p><h3 id="登录窗体" tabindex="-1"><a class="header-anchor" href="#登录窗体" aria-hidden="true">#</a> 登录窗体</h3><p>登录窗体为一个空白的窗体。</p><p>在启动项重写<code>RegisterTypes</code>方法，注入登录窗体和登录用户控件。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterDialogWindow</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>LoginWindowView<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterDialog</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>LoginView<span class="token punctuation">,</span> LoginViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要在<code>LoginWindowView.xaml.cs</code>继承<code>IDialogWindow</code>接口</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">LoginWindowView</span><span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IDialogWindow</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IDialogResult</span> Result <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span> <span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">LoginWindowView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了实现<code>LoginWindowView</code>里的导航功能，也需要更新<code>RegionManger</code></p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">LoginWindowView</span><span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IDialogWindow</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">IDialogResult</span> Result <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span> <span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">LoginWindowView</span><span class="token punctuation">(</span><span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        RegionManager<span class="token punctuation">.</span><span class="token function">SetRegionManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> regionManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
        RegionManager<span class="token punctuation">.</span><span class="token function">UpdateRegions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注入需要的导航用户控件</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动登录窗体" tabindex="-1"><a class="header-anchor" href="#启动登录窗体" aria-hidden="true">#</a> 启动登录窗体</h3><p>在启动项<code>PrismApplication</code>里重写<code>OnInitialized</code>方法</p><p>这里设置了<code>OK</code>代表登录成功,<code>None</code>或者<code>Cancel</code>代表退出登录窗体</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnInitialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> dialogService <span class="token operator">=</span> Container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IDialogService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> dialogService<span class="token punctuation">.</span><span class="token function">ShowDialogAsync</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>LoginView<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> ButtonResult<span class="token punctuation">.</span>OK<span class="token punctuation">:</span>
            <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnInitialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> ButtonResult<span class="token punctuation">.</span>None<span class="token punctuation">:</span>
        <span class="token keyword">case</span> ButtonResult<span class="token punctuation">.</span>Cancel<span class="token punctuation">:</span>
            Environment<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="登录用户控件" tabindex="-1"><a class="header-anchor" href="#登录用户控件" aria-hidden="true">#</a> 登录用户控件</h3><p>最后在登录用户控件<code>LoginView</code>的VM里继承<code>BindableBase</code>和<code>IDialogAware</code></p><p>一些通用的对话框代码如下</p><p>在<code>CloseDialog</code>方法里添加自己的登录逻辑处理结果</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BindableBase</span><span class="token punctuation">,</span> <span class="token class-name">IDialogAware</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IRegionManager</span> _regionManager<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">LoginViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">,</span>
        <span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">,</span>
        <span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _eventAggregator <span class="token operator">=</span> eventAggregator<span class="token punctuation">;</span>
        _regionManager <span class="token operator">=</span> regionManager<span class="token punctuation">;</span>
        _container <span class="token operator">=</span> container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _title <span class="token operator">=</span> <span class="token string">&quot;登录&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _title<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token function">SetProperty</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _title<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">DialogCloseListener</span> RequestClose <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CloseDialog</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> ret<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ButtonResult</span> result <span class="token operator">=</span> ButtonResult<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">{</span>
            result<span class="token operator">=</span>ButtonResult<span class="token punctuation">.</span>Ok<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            result<span class="token operator">=</span>ButtonResult<span class="token punctuation">.</span>Ignore<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">RaiseRequestClose</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DialogResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RaiseRequestClose</span><span class="token punctuation">(</span><span class="token class-name">IDialogResult</span> dialogResult<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        RequestClose<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>dialogResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanCloseDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDialogClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDialogOpened</span><span class="token punctuation">(</span><span class="token class-name">IDialogParameters</span> parameters<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41);function r(d,k){const n=a("Mermaid");return e(),t("div",null,[l,p(n,{id:"mermaid-3",code:"eJzT1dXlKsksyUm1UnjZvOJpR9vTCeufdq14uXDX0139XCDZtJz88uSMxKISBZ8gLi7/vOASILu0QFfXLig1PbO4JLUopLIgtZiLC4ULlHYuSk0sSQ3OSM3J4eJC4gClPPMySzITczKrYNJoAkAl/nkIsRSQvUhcsLRrRWYJFxcAphNIIg=="}),u])}const g=s(i,[["render",r],["__file","prismshell.html.vue"]]);export{g as default};
