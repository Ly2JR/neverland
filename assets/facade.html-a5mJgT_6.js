const e=JSON.parse('{"key":"v-78ca7297","path":"/cs/design-pattern/facade.html","title":"外观模式","lang":"zh-CN","frontmatter":{"title":"外观模式","date":"2023-06-17T00:00:00.000Z","dir.order":9,"order":9,"editLink":false,"footer":false,"category":["设计模式"],"tag":["设计模式"],"description":"参与此模式的类和对象包括： Facade(MortgageApplication) 知道哪些子系统类负责请求。 将客户端请求委托给适当的子系统对象。 Subsystem classes(Bank,Credit,Loan) 实现子系统功能。 处理由Facade对象分配的工作。 对外观一无所知，也不对其进行参考。","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/design-pattern/facade.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"外观模式"}],["meta",{"property":"og:description","content":"参与此模式的类和对象包括： Facade(MortgageApplication) 知道哪些子系统类负责请求。 将客户端请求委托给适当的子系统对象。 Subsystem classes(Bank,Credit,Loan) 实现子系统功能。 处理由Facade对象分配的工作。 对外观一无所知，也不对其进行参考。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T07:17:50.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-21T07:17:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"外观模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-21T07:17:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1687005402000,"updatedTime":1689923870000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":2}]},"readingTime":{"minutes":1.61,"words":482},"filePathRelative":"cs/design-pattern/facade.md","localizedDate":"2023年6月17日","excerpt":"<p>参与此模式的类和对象包括：</p>\\n<ul>\\n<li>\\n<p>Facade(<code>MortgageApplication</code>)</p>\\n<ul>\\n<li>知道哪些子系统类负责请求。</li>\\n<li>将客户端请求委托给适当的子系统对象。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Subsystem classes(<code>Bank</code>,<code>Credit</code>,<code>Loan</code>)</p>\\n<ul>\\n<li>实现子系统功能。</li>\\n<li>处理由Facade对象分配的工作。</li>\\n<li>对外观一无所知，也不对其进行参考。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
