const e=JSON.parse('{"key":"v-f063e734","path":"/cs/design-pattern/decorator.html","title":"装饰模式","lang":"zh-CN","frontmatter":{"title":"装饰模式","date":"2023-06-17T00:00:00.000Z","dir.order":8,"order":8,"editLink":false,"footer":false,"category":["设计模式"],"tag":["设计模式"],"description":"参与此模式的类和对象包括： Component(LibraryItem) 定义对象的接口，这些对象可以动态地向其添加职责。 ConcreteComponent(Book,Video) 定义可附加其他职责的对象。 Decorator(Decorator) 维护对组件对象的引用，并定义符合Component接口的接口。 ConcreteDecorator(Borrowable) 向组件添加职责。","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/design-pattern/decorator.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"装饰模式"}],["meta",{"property":"og:description","content":"参与此模式的类和对象包括： Component(LibraryItem) 定义对象的接口，这些对象可以动态地向其添加职责。 ConcreteComponent(Book,Video) 定义可附加其他职责的对象。 Decorator(Decorator) 维护对组件对象的引用，并定义符合Component接口的接口。 ConcreteDecorator(Borrowable) 向组件添加职责。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T07:17:50.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-21T07:17:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"装饰模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-21T07:17:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1687005402000,"updatedTime":1689923870000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":2}]},"readingTime":{"minutes":1.79,"words":537},"filePathRelative":"cs/design-pattern/decorator.md","localizedDate":"2023年6月17日","excerpt":"<p>参与此模式的类和对象包括：</p>\\n<ul>\\n<li>\\n<p>Component(<code>LibraryItem</code>)</p>\\n<ul>\\n<li>定义对象的接口，这些对象可以动态地向其添加职责。</li>\\n</ul>\\n</li>\\n<li>\\n<p>ConcreteComponent(<code>Book</code>,<code>Video</code>)</p>\\n<ul>\\n<li>定义可附加其他职责的对象。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Decorator(<code>Decorator</code>)</p>\\n<ul>\\n<li>维护对组件对象的引用，并定义符合Component接口的接口。</li>\\n</ul>\\n</li>\\n<li>\\n<p>ConcreteDecorator(<code>Borrowable</code>)</p>\\n<ul>\\n<li>向组件添加职责。</li>\\n</ul>\\n</li>\\n</ul>","copyright":{"author":"乌龙茶","license":"MIT"},"autoDesc":true}');export{e as data};
