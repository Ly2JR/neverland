import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as r,d as a,f as n,a as s,e as c}from"./app-CSbVlL_b.js";const l={},i={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.intptr?view=net-7.0",target:"_blank",rel:"noopener noreferrer"},u={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/unsafe-code",target:"_blank",rel:"noopener noreferrer"},m={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.runtime.interopservices.marshal.allochglobal?view=net-6.0",target:"_blank",rel:"noopener noreferrer"},d={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.runtime.interopservices.marshal.freehglobal?view=net-6.0#system-runtime-interopservices-marshal-freehglobal(system-intptr)",target:"_blank",rel:"noopener noreferrer"},k=c(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>注意勾选项目属性里的<code>不安全代码</code></p></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">int</span></span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">unsafe</span>
<span class="token punctuation">{</span>
    <span class="token class-name">IntPtr</span> a_ptr <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>a <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">byte</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token operator">*</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token operator">*</span><span class="token punctuation">)</span>a_ptr<span class="token punctuation">.</span><span class="token function">ToPointer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">*</span>c <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    Marshal<span class="token punctuation">.</span><span class="token function">FreeHGlobal</span><span class="token punctuation">(</span>a_ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token operator">*</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//输出</span>
<span class="token comment">//1</span>
<span class="token comment">//2</span>
<span class="token comment">//1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function h(v,f){const e=o("ExternalLinkIcon");return p(),r("div",null,[a("p",null,[a("a",i,[n("Intptr"),s(e)]),n("与"),a("a",u,[n("指针"),s(e)]),n("转换，涉及两个方法"),a("a",m,[n("Marshal.AllocHGlobal"),s(e)]),n("和"),a("a",d,[n("Marshal.FreeHGlobal"),s(e)]),n("，他们成对出现。")]),k])}const g=t(l,[["render",h],["__file","intptr-and-pointer.html.vue"]]),_=JSON.parse('{"path":"/tools/csharp/intptr-and-pointer.html","title":"托管指针转换指针","lang":"zh-CN","frontmatter":{"title":"托管指针转换指针","date":"2023-06-15T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["工具箱"],"tag":["C#","C++"],"description":"Intptr与指针转换，涉及两个方法Marshal.AllocHGlobal和Marshal.FreeHGlobal，他们成对出现。 提示 注意勾选项目属性里的不安全代码","head":[["meta",{"property":"og:url","content":"https://ilyl.life/tools/csharp/intptr-and-pointer.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"托管指针转换指针"}],["meta",{"property":"og:description","content":"Intptr与指针转换，涉及两个方法Marshal.AllocHGlobal和Marshal.FreeHGlobal，他们成对出现。 提示 注意勾选项目属性里的不安全代码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T09:04:30.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:published_time","content":"2023-06-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T09:04:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"托管指针转换指针\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-28T09:04:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1686822897000,"updatedTime":1709111070000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":1}]},"readingTime":{"minutes":0.42,"words":126},"filePathRelative":"tools/csharp/intptr-and-pointer.md","localizedDate":"2023年6月15日","excerpt":"<p><a href=\\"https://learn.microsoft.com/zh-cn/dotnet/api/system.intptr?view=net-7.0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Intptr</a>与<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/unsafe-code\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">指针</a>转换，涉及两个方法<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/api/system.runtime.interopservices.marshal.allochglobal?view=net-6.0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Marshal.AllocHGlobal</a>和<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/api/system.runtime.interopservices.marshal.freehglobal?view=net-6.0#system-runtime-interopservices-marshal-freehglobal(system-intptr)\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Marshal.FreeHGlobal</a>，他们成对出现。</p>","autoDesc":true}');export{g as comp,_ as data};
