import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,b as t}from"./app-rrT2_l5z.js";const e={},p=t(`<ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> TabControl如何添加Tab页?</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> TabControl如何删除Tab页?</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> IsNavigationTarget的用途？</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 如何关闭全部Tab页?</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 多个Tab页如何同时接收消息?</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 如何指定Tab页接收消息？</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 关闭Tab页后消息为何还能接收？</label></li></ul><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol.gif" alt="TabControl" width="420" height="200" tabindex="0" loading="lazy"><figcaption>TabControl</figcaption></figure><h2 id="tabcontrol如何添加tab页" tabindex="-1"><a class="header-anchor" href="#tabcontrol如何添加tab页" aria-hidden="true">#</a> TabControl如何添加Tab页</h2><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol1.gif" alt="添加" width="420" height="200" tabindex="0" loading="lazy"><figcaption>添加</figcaption></figure><p>实现TabControl动态添加，需要用到Prism的区域管理</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TabControl</span>
    <span class="token attr-name"><span class="token namespace">prism:</span>RegionManager.RegionName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ContentRegion<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">ItemContainerStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{StaticResource CloseTabStyle}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在TabControl里重新设置<code>ItemContainerStyle</code>实现关闭功能和Header显示</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CloseTabStyle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{x:Type TabItem}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Template<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{x:Type TabItem}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Horizontal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DataContext.Title}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DataContext.CloseTabCommand}<span class="token punctuation">&quot;</span></span>
                             <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding}<span class="token punctuation">&quot;</span></span>
                             <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>关闭<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>PrismApplication</code>类注册需要导航的用户控件,VM中需要继承<code>INavigationAware</code></p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">,</span> ViewAViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewB<span class="token punctuation">,</span> ViewBViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过<code>IRegionManager</code>接口的<code>RequestNavigate</code>方法进行TabItem添加</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Navigate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> navigatePath<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>navigatePath <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
     <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
     _regionManager<span class="token punctuation">.</span><span class="token function">RequestNavigate</span><span class="token punctuation">(</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">,</span> navigatePath<span class="token punctuation">,</span> NavigationComplete<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">NavigationComplete</span><span class="token punctuation">(</span><span class="token class-name">NavigationResult</span> result<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;Navigation to {0} complete. &quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>Context<span class="token punctuation">.</span>Uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tabcontrol如何删除tab页" tabindex="-1"><a class="header-anchor" href="#tabcontrol如何删除tab页" aria-hidden="true">#</a> TabControl如何删除Tab页</h2><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol2.gif" alt="删除" width="420" height="200" tabindex="0" loading="lazy"><figcaption>删除</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在ItemContainerStyle设置关闭和在用户控件里添加关闭有什么区别?</p><p>ItemContainerStyle中的<code>CommandParameter=&quot;{Binding}&quot;</code>为当前页面<code>View</code></p><p>而用户控件里的<code>CommandParameter=&quot;{Binding}&quot;</code>为当前页面的<code>ViewModel</code></p></div><p>在重写样式<code>ItemContainerStyle</code>设置了<code>CloseTabCommand</code>方法</p><p>在VM中如下实现</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CloseTab</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManger<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    region<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="isnavigationtarget的用途" tabindex="-1"><a class="header-anchor" href="#isnavigationtarget的用途" aria-hidden="true">#</a> IsNavigationTarget的用途</h2><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol3.gif" alt="IsNavigationTarget" width="420" height="200" tabindex="0" loading="lazy"><figcaption>IsNavigationTarget</figcaption></figure><p>当IsNavigationTarget为<code>True</code>时，无论请求导航多少次,View和ViewModel始终为同一个实例。</p><p>当IsNavigationTarget为<code>False</code>时，请求导航多少次,View和ViewModel就有多少个。</p><h2 id="如何关闭全部tab页" tabindex="-1"><a class="header-anchor" href="#如何关闭全部tab页" aria-hidden="true">#</a> 如何关闭全部Tab页</h2><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol4.gif" alt="全部关闭" width="420" height="200" tabindex="0" loading="lazy"><figcaption>全部关闭</figcaption></figure><p><code>IRegion</code>接口提供<code>RemoveAll</code>方法</p><p>通过<code>IEventAggregator</code>将关闭所有Tab页的消息分发</p><p>当多个Tab页时，可以提取为功能基类进行消息处理</p><p>VM基类:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">BaseViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">,</span> <span class="token class-name">IRegionManager</span> regionManger<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PubSubEvent<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span>TabControlHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TabControlHandler</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManger<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    region<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tab页VM子类:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token function">ViewAViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">,</span> <span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>eventAggregator<span class="token punctuation">,</span>regionManager<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多个tab页同时接收消息" tabindex="-1"><a class="header-anchor" href="#多个tab页同时接收消息" aria-hidden="true">#</a> 多个Tab页同时接收消息</h2><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol5.gif" alt="同时接收消息" width="420" height="200" tabindex="0" loading="lazy"><figcaption>同时接收消息</figcaption></figure><p>如全部关闭Tab页类型，提取为公共基类，通过<code>IEventAggregator</code>订阅公共消息。</p><h2 id="指定tab页接收消息" tabindex="-1"><a class="header-anchor" href="#指定tab页接收消息" aria-hidden="true">#</a> 指定Tab页接收消息</h2><figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol6.gif" alt="指定接收消息" width="420" height="200" tabindex="0" loading="lazy"><figcaption>指定接收消息</figcaption></figure><p>如果没有提取公共类，那么通过<code>IEventAggregator</code>的<code>Subscribe</code>和<code>Unsubscribe</code>即可。</p><p>如果提取了公共类，<code>Subscribe</code>重载方法进行消息过滤即可。</p><p>消息载体:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Message</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">///  空值:全部接收</span>
    <span class="token doc-comment comment">///  否则,指定接收</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Receiver <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">//内容</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Content <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>消息订阅:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">BaseViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PubSubEvent<span class="token punctuation">&lt;</span>Message<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span>Receive<span class="token punctuation">,</span> Filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>Receiver<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> msg<span class="token punctuation">.</span>Receiver <span class="token operator">==</span> me<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>关闭Tab页后取消订阅</li></ul><p>在关闭事件中添加<code>Unsubscribe</code>方法取消订阅</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CloseTab</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PubSubEvent<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unsubscribe</span><span class="token punctuation">(</span>TabControlHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManger<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">&quot;ContentRegion&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    region<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),o=[p];function c(i,l){return a(),s("div",null,o)}const k=n(e,[["render",c],["__file","TabControl.html.vue"]]);export{k as default};
