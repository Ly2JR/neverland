import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,e as a}from"./app-BaXx2_6M.js";const t={},o=a(`<p>Vue部署到Docker有两种模式</p><h2 id="docker部署" tabindex="-1"><a class="header-anchor" href="#docker部署"><span>Docker部署</span></a></h2><p>先将Web项目<code>Build</code>之后，生成的部署文件在<code>dist</code>目录下拷贝到Docker中进行部署</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token comment"># node 构建</span>
<span class="token instruction"><span class="token keyword">FROM</span> node:22.0.0-alpine <span class="token keyword">as</span> build-stage</span>
<span class="token comment"># 署名</span>
<span class="token instruction"><span class="token keyword">LABEL</span> maintainer=<span class="token string">&quot;乌龙茶有点甜 &lt;982474256@qq.com&gt;&quot;</span></span>
<span class="token comment"># 指定目录</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /web</span>
<span class="token comment"># 将当前所有目录拷贝到工作目录</span>
<span class="token instruction"><span class="token keyword">COPY</span> . /web</span>
<span class="token comment"># nginx 部署</span>
<span class="token instruction"><span class="token keyword">FROM</span> nginx:1.25.5-alpine <span class="token keyword">as</span> production-stage</span>
<span class="token comment"># 拷贝编译后的文件</span>
<span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">build-stage</span></span> /web /usr/share/nginx/html</span>
<span class="token comment"># 提供服务端口</span>
<span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span>
<span class="token instruction"><span class="token keyword">RUN</span> echo <span class="token string">&quot;🎉 架 🎉 设 🎉 成 🎉 功 🎉&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker编译部署" tabindex="-1"><a class="header-anchor" href="#docker编译部署"><span>Docker编译部署</span></a></h2><p>将整个Web项目拷贝到Docker中，在Docker中进行编译部署，具体参考本博客<a href="https://github.com/Ly2JR/neverland/blob/main/Dockerfile" target="_blank" rel="noopener noreferrer">Dockerfile</a>文件</p>`,6),c=[o];function p(i,r){return s(),e("div",null,c)}const k=n(t,[["render",p],["__file","vue-deploy.html.vue"]]),m=JSON.parse('{"path":"/web/vue/vue-deploy.html","title":"Vue部署","lang":"zh-CN","frontmatter":{"title":"Vue部署","date":"2024-04-28T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["Web"],"description":"Vue部署到Docker有两种模式 Docker部署 先将Web项目Build之后，生成的部署文件在dist目录下拷贝到Docker中进行部署 Docker编译部署 将整个Web项目拷贝到Docker中，在Docker中进行编译部署，具体参考本博客Dockerfile文件","head":[["meta",{"property":"og:url","content":"https://ilyl.life/web/vue/vue-deploy.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"Vue部署"}],["meta",{"property":"og:description","content":"Vue部署到Docker有两种模式 Docker部署 先将Web项目Build之后，生成的部署文件在dist目录下拷贝到Docker中进行部署 Docker编译部署 将整个Web项目拷贝到Docker中，在Docker中进行编译部署，具体参考本博客Dockerfile文件"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T11:36:03.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:published_time","content":"2024-04-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T11:36:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue部署\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-28T11:36:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:ly2@ilyl.life\\"}]}"]]},"headers":[{"level":2,"title":"Docker部署","slug":"docker部署","link":"#docker部署","children":[]},{"level":2,"title":"Docker编译部署","slug":"docker编译部署","link":"#docker编译部署","children":[]}],"git":{"createdTime":1714304163000,"updatedTime":1714304163000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":1}]},"readingTime":{"minutes":0.59,"words":178},"filePathRelative":"web/vue/vue-deploy.md","localizedDate":"2024年4月28日","excerpt":"<p>Vue部署到Docker有两种模式</p>\\n<h2>Docker部署</h2>\\n<p>先将Web项目<code>Build</code>之后，生成的部署文件在<code>dist</code>目录下拷贝到Docker中进行部署</p>\\n<div class=\\"language-docker\\" data-ext=\\"docker\\" data-title=\\"docker\\"><pre class=\\"language-docker\\"><code><span class=\\"token comment\\"># node 构建</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> node:22.0.0-alpine <span class=\\"token keyword\\">as</span> build-stage</span>\\n<span class=\\"token comment\\"># 署名</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">LABEL</span> maintainer=<span class=\\"token string\\">\\"乌龙茶有点甜 &lt;982474256@qq.com&gt;\\"</span></span>\\n<span class=\\"token comment\\"># 指定目录</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">WORKDIR</span> /web</span>\\n<span class=\\"token comment\\"># 将当前所有目录拷贝到工作目录</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> . /web</span>\\n<span class=\\"token comment\\"># nginx 部署</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> nginx:1.25.5-alpine <span class=\\"token keyword\\">as</span> production-stage</span>\\n<span class=\\"token comment\\"># 拷贝编译后的文件</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> <span class=\\"token options\\"><span class=\\"token property\\">--from</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">build-stage</span></span> /web /usr/share/nginx/html</span>\\n<span class=\\"token comment\\"># 提供服务端口</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">EXPOSE</span> 80</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">RUN</span> echo <span class=\\"token string\\">\\"🎉 架 🎉 设 🎉 成 🎉 功 🎉\\"</span></span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,m as data};
