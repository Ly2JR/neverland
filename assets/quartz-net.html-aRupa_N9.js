import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,b as e}from"./app-bFSiu6VH.js";const t={},p=e(`<p>在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入<code>IContainerExtension</code>。</p><p>此时需要自己实现<code>IJobFactory</code>接口即可。</p><p>以定时生成CSV文件的Job为例</p><h2 id="实现ijobfactory" tabindex="-1"><a class="header-anchor" href="#实现ijobfactory" aria-hidden="true">#</a> 实现IJobFactory</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsvJobFactory</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">IJobFactory</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">CsvJobFactory</span><span class="token punctuation">(</span><span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _container<span class="token operator">=</span>container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">IJob</span> <span class="token function">NewJob</span><span class="token punctuation">(</span>TriggerFiredBundle bundle，<span class="token class-name">IScheduler</span> scheduler<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> container<span class="token punctuation">.</span><span class="token function">Resolve</span><span class="token punctuation">(</span>bundle<span class="token punctuation">.</span>JobDetail<span class="token punctuation">.</span>JobType<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">IJob</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ReturnJob</span><span class="token punctuation">(</span><span class="token class-name">IJob</span> job<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> disposable <span class="token operator">=</span> job <span class="token keyword">as</span> <span class="token class-name">IDisposable</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>disposable <span class="token operator">!=</span> nul1<span class="token punctuation">)</span><span class="token punctuation">{</span>
            disposable<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注入自定义jobfactory" tabindex="-1"><a class="header-anchor" href="#注入自定义jobfactory" aria-hidden="true">#</a> 注入自定义JobFactory</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Registersingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IJobFactory<span class="token punctuation">,</span>CsvJobFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISchedulerFactory， StdSchedulerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CsVExportJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定时作业" tabindex="-1"><a class="header-anchor" href="#定时作业" aria-hidden="true">#</a> 定时作业</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsvExportJob</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IJob</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">CsvExportJob</span><span class="token punctuation">(</span><span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _container <span class="token operator">=</span> container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name">IJobExecutionContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","quartz-net.html.vue"]]);export{d as default};
