import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as c,c as i,d as s,e as n,f as e,w as u,b as t}from"./app-KL1VpW2S.js";const d={},r=t('<p>应用程序中常用权限，又如何设计权限。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>仅供参考，实际根据生产坏境进行调整。</p><p>例如在大型生产系统中，对菜单库、功能库、数据库分离。</p><p>菜单库可能上千个，每个页面的功能权限上百个。</p><p>将每个用户的具体权限存储到缓存表中。</p><p>权限不应是经常变更的数据。</p></div><p>常用的权限有<code>菜单权限</code>、<code>功能权限</code>以及<code>数据权限</code></p><h2 id="菜单权限" tabindex="-1"><a class="header-anchor" href="#菜单权限" aria-hidden="true">#</a> 菜单权限</h2><p>菜单权限比较好实现，其一，菜单不会很多，其二当页面展示时就基本不会在变，相对固定。</p><p>多级菜单时只要确认最末级的菜单权限ID即可。</p><ul><li>菜单表</li></ul><table><thead><tr><th style="text-align:left;">权限ID</th><th style="text-align:left;">菜单名称</th></tr></thead><tbody><tr><td style="text-align:left;">M1</td><td style="text-align:left;">菜单1</td></tr><tr><td style="text-align:left;">M2</td><td style="text-align:left;">菜单2</td></tr><tr><td style="text-align:left;">...</td><td style="text-align:left;">...</td></tr></tbody></table><ul><li>用户表</li></ul><table><thead><tr><th style="text-align:left;">用户ID</th><th style="text-align:left;">用户名</th></tr></thead><tbody><tr><td style="text-align:left;">U1</td><td style="text-align:left;">用户1</td></tr><tr><td style="text-align:left;">U2</td><td style="text-align:left;">用户2</td></tr><tr><td style="text-align:left;">...</td><td style="text-align:left;">...</td></tr></tbody></table><ul><li>用户菜单权限表</li></ul><table><thead><tr><th style="text-align:left;">用户ID</th><th style="text-align:left;">菜单ID</th></tr></thead><tbody><tr><td style="text-align:left;">U1</td><td style="text-align:left;">M1</td></tr><tr><td style="text-align:left;">U1</td><td style="text-align:left;">M2</td></tr><tr><td style="text-align:left;">U2</td><td style="text-align:left;">M1</td></tr></tbody></table><p>通过<code>菜单表</code>、<code>用户表</code>、<code>用户菜单权限表</code>内联，得到当前用户的菜单。</p><h3 id="多级菜单" tabindex="-1"><a class="header-anchor" href="#多级菜单" aria-hidden="true">#</a> 多级菜单</h3>',14),k=t(`<p>多级菜单相对单级菜单复杂，如果是固定的多级菜单就简单多了。</p><p>不确定的多级菜单需要进行好的设计，通过迭代生成。</p><p>关键在于<code>迭代</code>,为了使表设计满足迭代，表结构需要满足一定的要求，如下所示</p><ul><li>多级菜单表</li></ul><table><thead><tr><th style="text-align:left;">权限ID</th><th style="text-align:left;">菜单级别</th><th style="text-align:left;">菜单名称</th><th style="text-align:left;">是否末级</th></tr></thead><tbody><tr><td style="text-align:left;">M1</td><td style="text-align:left;">1</td><td style="text-align:left;">菜单1</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">M2</td><td style="text-align:left;">1</td><td style="text-align:left;">菜单2</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">M101</td><td style="text-align:left;">2</td><td style="text-align:left;">菜单3</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">M10101</td><td style="text-align:left;">3</td><td style="text-align:left;">菜单4</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">M201</td><td style="text-align:left;">2</td><td style="text-align:left;">菜单5</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">M102</td><td style="text-align:left;">2</td><td style="text-align:left;">菜单6</td><td style="text-align:left;">1</td></tr></tbody></table><p>这里多添加一个<code>菜单级别字段</code>和调整<code>权限ID</code>约束实现</p><ul><li>菜单级别显示当前菜单的层次</li><li>每层菜单级别数对应长度为<code>2</code>的菜单ID</li><li>每层的权限ID能反应出上层菜单权限ID</li></ul><p>最终展示的菜单如下</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>|--菜单1
|----菜单3
|------菜单4
|----菜单6
|--菜单2
|----菜单5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>::: tips</p><p>当菜单非常多时，可以将所有的1级菜单统计到单独表，进行归类。</p><p>当菜单深度很深时，只显示顶层菜单，点击时在加载子菜单。 :::</p><h2 id="功能权限" tabindex="-1"><a class="header-anchor" href="#功能权限" aria-hidden="true">#</a> 功能权限</h2><p>功能权限常用在页面上，如<code>新增</code>、<code>修改</code>、<code>删除</code>、<code>查询</code>、<code>导入</code>、<code>导出</code>等</p><ul><li>功能权限表</li></ul><table><thead><tr><th style="text-align:left;">权限ID</th><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">新增</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">修改</td></tr></tbody></table><ul><li>菜单功能权限表</li></ul><table><thead><tr><th style="text-align:left;">菜单ID</th><th style="text-align:left;">功能权限ID</th></tr></thead><tbody><tr><td style="text-align:left;">M10101</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">M10101</td><td style="text-align:left;">2</td></tr></tbody></table><ul><li>用户功能权限表</li></ul><table><thead><tr><th style="text-align:left;">用户ID</th><th style="text-align:left;">功能权限ID</th></tr></thead><tbody><tr><td style="text-align:left;">U1</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">U2</td><td style="text-align:left;">2</td></tr></tbody></table><p>通过<code>功能权限表</code>、<code>菜单功能权限表</code>、<code>用户功能权限表</code>、<code>用户表</code>关联，即得到该用户当前菜单下的功能权限</p><h2 id="数据权限" tabindex="-1"><a class="header-anchor" href="#数据权限" aria-hidden="true">#</a> 数据权限</h2><p>数据权限就是用户能看到什么数据，这个只要对表字段进行权限控制，动态生成即可。</p><ul><li>数据表</li></ul><table><thead><tr><th style="text-align:left;">字段名</th><th style="text-align:left;">字段描述</th></tr></thead><tbody><tr><td style="text-align:left;">Name</td><td style="text-align:left;">姓名</td></tr><tr><td style="text-align:left;">Address</td><td style="text-align:left;">地址</td></tr><tr><td style="text-align:left;">Phone</td><td style="text-align:left;">电话</td></tr></tbody></table><ul><li>数据权限表</li></ul><table><thead><tr><th style="text-align:left;">ID</th><th style="text-align:left;">字段</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">Name</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Address</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Phone</td></tr></tbody></table><ul><li>用户数据权限表</li></ul><table><thead><tr><th style="text-align:left;">用户ID</th><th style="text-align:left;">数据权限ID</th></tr></thead><tbody><tr><td style="text-align:left;">U1</td><td style="text-align:left;">1</td></tr><tr><td style="text-align:left;">U1</td><td style="text-align:left;">2</td></tr></tbody></table><p>通过<code>数据表</code>、<code>数据权限表</code>和<code>用户权限表</code>关联，即能查询出当前用户的可见数据，并且可以扩展显示顺序、别名等功能。</p><h2 id="更多" tabindex="-1"><a class="header-anchor" href="#更多" aria-hidden="true">#</a> 更多</h2><p>用户与角色或用户与用户组，是在基础用户权限上细分出来，通过三范式进行划分，多表关联即可。</p><p>以上设计全部通过数据库表配置，得出用户相应权限，通过显示与否进行权限隔离，满足了大部分的权限需求。</p><p>实际情况还需要部分代码进行更细化的处理。</p><p>例如：</p><ul><li>菜单打开过，其他人不允许在打开</li><li>菜单1打开，菜单2不能打开</li><li>新增和保存同一时间应存在一个可用</li></ul><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3>`,37),m=s("code",null,"CRUD",-1),g={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.flagsattribute?view=net-7.0",target:"_blank",rel:"noopener noreferrer"},v=t(`<figure><img src="https://nas.ilyl.life:8092/dotnet/flags.png" alt="权限" width="420" height="200" tabindex="0" loading="lazy"><figcaption>权限</figcaption></figure><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">AuthFlag</span> menu <span class="token operator">=</span> AuthFlag<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> suc <span class="token operator">=</span> <span class="token function">HasAuth</span><span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;检查新增权限:1,检查结果:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suc</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;添加新增权限:1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">AddAuth</span><span class="token punctuation">(</span><span class="token keyword">ref</span> menu<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
suc <span class="token operator">=</span> <span class="token function">HasAuth</span><span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;检查新增权限:1,检查结果:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suc</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;移除新增权限:1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">RemoveAuth</span><span class="token punctuation">(</span><span class="token keyword">ref</span> menu<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
suc <span class="token operator">=</span> <span class="token function">HasAuth</span><span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;检查新增权限:1,检查结果:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suc</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">AuthFlag</span> allMenu <span class="token operator">=</span> AuthFlag<span class="token punctuation">.</span>Query<span class="token operator">|</span> AuthFlag<span class="token punctuation">.</span>Add<span class="token operator">|</span>AuthFlag<span class="token punctuation">.</span>Update<span class="token operator">|</span>AuthFlag<span class="token punctuation">.</span>Delete<span class="token operator">|</span> AuthFlag<span class="token punctuation">.</span>Output<span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;所有权限值:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>allMenu</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> flag <span class="token operator">=</span> <span class="token function">InitAuth</span><span class="token punctuation">(</span><span class="token string">&quot;31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;初始化权限:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">flag</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token return-type class-name">AuthFlag</span> <span class="token function">InitAuth</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> auth<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Enum<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">TryParse</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AuthFlag<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>auth<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">AuthFlag</span> flag<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> AuthFlag<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddAuth</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">AuthFlag</span> source<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> auth<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Enum<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">TryParse</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AuthFlag<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>auth<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">AuthFlag</span> flag<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        source<span class="token operator">|=</span>flag<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RemoveAuth</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name">AuthFlag</span> source<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> auth<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Enum<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">TryParse</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AuthFlag<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>auth<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">AuthFlag</span> flag<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        source <span class="token operator">^=</span> flag<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">HasAuth</span><span class="token punctuation">(</span><span class="token class-name">AuthFlag</span> source<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> auth<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>Enum<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">TryParse</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AuthFlag<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>auth<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">AuthFlag</span> flag<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> source<span class="token punctuation">.</span><span class="token function">HasFlag</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Flags</span></span><span class="token punctuation">]</span>
<span class="token keyword">enum</span> <span class="token class-name">AuthFlag</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 新增</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    None <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 查询</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    Query<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 新增</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    Add<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 更新</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    Update<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 删除</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    Delete<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 输出</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    Output<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function h(y,f){const l=a("RouterLink"),p=a("ExternalLinkIcon");return c(),i("div",null,[r,s("p",null,[n("相关代码参考"),e(l,{to:"/cs/wpf/plugin.html"},{default:u(()=>[n("WPF插件")]),_:1})]),k,s("p",null,[n("以功能权限"),m,n("为例,通过"),s("a",g,[n("Flags"),e(p)]),n("实现")]),v])}const A=o(d,[["render",h],["__file","auth.html.vue"]]);export{A as default};
