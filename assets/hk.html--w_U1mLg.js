import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as u,c as m,d as n,e,f as s,w as t,b as o}from"./app-rSeson_6.js";const h={},k=n("p",null,"默认都是最新的版本",-1),g={href:"https://visualstudio.microsoft.com/zh-hans/downloads/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://dotnet.microsoft.com/zh-cn/download/dotnet-framework/net48",target:"_blank",rel:"noopener noreferrer"},f={href:"https://dotnet.microsoft.com/zh-cn/download/dotnet/7.0",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"为什么会出现两个.NET框架？.NET Framework 4.8是为UI准备，并且是通过PictureBox的方式使用。使用第二种方式可以全部改为.NET 7",-1),w=n("h2",{id:"软件包",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#软件包","aria-hidden":"true"},"#"),e(" 软件包")],-1),b=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"提示"),n("p",null,[n("code",null,"海康SDK"),e("必须")]),n("p",null,"集成到Winform：海康SDK提供的demo就是Winform"),n("p",null,"集成到WPF：也可以使用Winform的方式，但是不推荐，现在使用另外一种方式，需要使用FFMPEG，ReactiveUI可选，但是既然上了WPF，那么就装上它。")],-1),x={href:"https://open.hikvision.com/download/5cda567cf47ae80dd41a54b3?type=10",target:"_blank",rel:"noopener noreferrer"},F={href:"https://ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.reactiveui.net/",target:"_blank",rel:"noopener noreferrer"},y=o('<h2 id="集成到winform" tabindex="-1"><a class="header-anchor" href="#集成到winform" aria-hidden="true">#</a> 集成到Winform</h2><p>海康本身提供了Winfrom的示例，注意的是将<code>头文件</code>文件夹下的所有文件拷贝到项目目录下，记得项目和拷贝的文件分<code>x86</code>和<code>x64</code></p><h2 id="集成到wpf" tabindex="-1"><a class="header-anchor" href="#集成到wpf" aria-hidden="true">#</a> 集成到WPF</h2><h3 id="picturebox方式" tabindex="-1"><a class="header-anchor" href="#picturebox方式" aria-hidden="true">#</a> PictureBox方式</h3>',4),P={class:"hint-container tip"},B=n("p",{class:"hint-container-title"},"提示",-1),q={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.integration?view=windowsdesktop-6.0",target:"_blank",rel:"noopener noreferrer"},I={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.integration.elementhost?view=windowsdesktop-6.0",target:"_blank",rel:"noopener noreferrer"},E={href:"https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/introduction-to-wpf?view=netframeworkdesktop-4.8",target:"_blank",rel:"noopener noreferrer"},S={href:"https://learn.microsoft.com/zh-cn/dotnet/desktop/winforms/?view=netframeworkdesktop-4.8",target:"_blank",rel:"noopener noreferrer"},z=o(`<li><p>引用程序集<code>System.Windows.Forms</code>和<code>WindowsFormsIntegration</code></p><div class="language-xaml line-numbers-mode" data-ext="xaml"><pre class="language-xaml"><code>xmlns:wf=&quot;clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms&quot;
xmlns:wfi=&quot;clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),C=n("p",null,[e("Nuget包添加"),n("code",null,"Microsoft.Xaml.Behaviors.Wpf")],-1),N={href:"https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml?view=netframeworkdesktop-4.8",target:"_blank",rel:"noopener noreferrer"},T=n("div",{class:"language-xaml line-numbers-mode","data-ext":"xaml"},[n("pre",{class:"language-xaml"},[n("code",null,`xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),A=o(`<li><p>添加<code>PictureBox</code>控件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">wfi:</span>WindowsFormsHost</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">wf:</span>PictureBox</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>videoPictureBox<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">wfi:</span>WindowsFormsHost</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>播放</p><p>这里使用Wpf中的<code>behaviors</code>,将<code>PictureBox</code>控件本身当作参数传递即可。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>句柄预览<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>Interaction.Triggers</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>EventTrigger</span> <span class="token attr-name">EventName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Click<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>InvokeCommandAction</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding PlayCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding ElementName=videoPictureBox}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>Interaction.Triggers</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),V=o('<h3 id="image方式" tabindex="-1"><a class="header-anchor" href="#image方式" aria-hidden="true">#</a> Image方式</h3><figure><img src="https://nas.ilyl.life:8092/wpf/hk_p2.gif" alt="WPF无句柄预览" width="420" height="200" tabindex="0" loading="lazy"><figcaption>WPF无句柄预览</figcaption></figure><h4 id="关键点" tabindex="-1"><a class="header-anchor" href="#关键点" aria-hidden="true">#</a> 关键点</h4><ul><li>FFMPEG</li><li>视频格式</li></ul><p>FFMPEG很强大，但相关资料非常少。</p>',5),G=n("code",null,"FFmpeg.AutoGen",-1),M={href:"https://github.com/Ruslan-B/FFmpeg.AutoGen/tree/master/FFmpeg.AutoGen.Example",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://stackoverflow.com/",target:"_blank",rel:"noopener noreferrer"},U={class:"hint-container tip"},D=n("p",{class:"hint-container-title"},"提示",-1),H={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.threading.dispatcher.checkaccess?view=windowsdesktop-7.0",target:"_blank",rel:"noopener noreferrer"},K={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.control.invokerequired?view=windowsdesktop-7.0&viewFallbackFrom=net-7.0",target:"_blank",rel:"noopener noreferrer"},O={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.media.imaging.writeablebitmap?view=windowsdesktop-6.0",target:"_blank",rel:"noopener noreferrer"},Q=n("div",{class:"language-xaml line-numbers-mode","data-ext":"xaml"},[n("pre",{class:"language-xaml"},[n("code",null,`<Image
      RenderOptions.BitmapScalingMode="HighQuality"
      Source="{Binding VedioSource}"
      Stretch="Fill"
      UseLayoutRounding="True" />
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token keyword"},"private"),e(),n("span",{class:"token class-name"},"ImageSource"),e(" _vedioSource "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},"ImageSource"),e(` VedioSource
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"get"),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"return"),e(" _vedioSource"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token keyword"},"set"),e(`
    `),n("span",{class:"token punctuation"},"{"),e(`
        _vedioSource `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"value"),n("span",{class:"token punctuation"},";"),e(`
        PropertyChanged`),n("span",{class:"token punctuation"},"?."),n("span",{class:"token function"},"Invoke"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"PropertyChangedEventArgs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),e("VedioSource"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"注意"),n("ul",null,[n("li",null,[n("p",null,"WriteableBitmap需要在UI线程上声明")]),n("li",null,[n("p",null,"在写入WriteableBitmap时需要判断线程")])])],-1),J=n("li",null,[n("p",null,"使用海康回调模式，自己解码")],-1),Y=n("p",null,[e("通过FFmpeg提供的"),n("code",null,"sws_scale"),e("进行转换")],-1),Z={class:"hint-container warning"},$=n("p",{class:"hint-container-title"},"注意",-1),nn=n("code",null,"FFmpeg.AutoGen",-1),en=n("p",null,"别忘了释放指针，否则 💣",-1),sn=n("h2",{id:"总结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),e(" 总结")],-1),an=n("p",null,"如果只是单纯的展示，那么PictureBox是一种不错的方式。",-1),tn={href:"https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/wpf-and-windows-forms-interoperation?view=netframeworkdesktop-4.8#layout-support",target:"_blank",rel:"noopener noreferrer"},on=o('<ol><li><p>放大缩小窗体时，出现白色闪烁问题。</p><figure><img src="https://nas.ilyl.life:8092/wpf/hk_p1.gif" alt="WPF句柄预览缩放问题" width="420" height="200" tabindex="0" loading="lazy"><figcaption>WPF句柄预览缩放问题</figcaption></figure></li><li><p>使用WPF控件无法放在PictureBox顶层。</p><figure><img src="https://nas.ilyl.life:8092/wpf/hk_issue2.png" alt="WPF句柄预览叠加问题" width="420" height="200" tabindex="0" loading="lazy"><figcaption>WPF句柄预览叠加问题</figcaption></figure></li></ol><p>为了解决这两个问题，使用Image方式是一种更好的方法。</p><p>但这里没有贴更多的代码及具体实现，但是过程及注意事项如上所示。</p><p>其一视频是个很深的学问;</p><p>其二代码由原来的几百行缩减到几十行，当然是托了<code>FFMPEG</code>的福;</p><p>其三这里只是简单的预览视频，更多的操作及问题，后续遇见在写 😄</p>',6),ln={href:"https://github.com/unosquare/ffmediaelement",target:"_blank",rel:"noopener noreferrer"};function cn(rn,pn){const a=c("ExternalLinkIcon"),r=c("Tabs"),p=c("RouterLink");return u(),m("div",null,[k,n("ul",null,[n("li",null,[n("p",null,[n("a",g,[e("Visual Studio 2022"),s(a)])])]),n("li",null,[n("p",null,[n("a",_,[e(".NET Framework 4.8"),s(a)])])]),n("li",null,[n("p",null,[n("a",f,[e(".NET 7"),s(a)])])])]),v,w,b,n("ol",null,[n("li",null,[n("a",x,[e("海康SDK"),s(a)])]),n("li",null,[n("a",F,[e("FFMPEG"),s(a)])]),n("li",null,[n("a",W,[e("ReactiveUI"),s(a)])])]),y,n("div",P,[B,n("p",null,[e("WPF控件没有句柄,通过"),n("a",q,[e("WindowsFormsIntegration"),s(a)]),e("实现WPF与Winform互操作")]),n("p",null,[e("反之通过"),n("a",I,[e("ElementHost"),s(a)]),e("托管WPF控件")])]),n("p",null,[e("通过PictureBox就是用的传统Winform方式，但是毕竟"),n("a",E,[e("WPF"),s(a)]),e("和"),n("a",S,[e("Winform"),s(a)]),e("是两种不同的程序方式，需要适配下。")]),n("ol",null,[z,n("li",null,[C,n("p",null,[e("添加行为"),n("a",N,[e("命名空间"),s(a)])]),T]),A]),V,n("p",null,[e("从NuGet上下载"),G,e("，如果能跑通提供的"),n("a",M,[e("官方示例"),s(a)]),e("，问题已经解决了60%，在了解相关视频格式问题，已经完成了30%，剩下10%通过"),n("a",R,[e("github"),s(a)]),e("和"),n("a",L,[e("stackoverflow"),s(a)]),e("找相关问题或者案例。")]),n("div",U,[D,n("p",null,[e("WPF通过"),n("a",H,[e("Application.Current.Dispatcher.CheckAccess"),s(a)]),e("来判断线程")]),n("p",null,[e("Winform则通过"),n("a",K,[e("Control.InvokeRequired"),s(a)])])]),n("ol",null,[n("li",null,[n("p",null,[e("使用"),n("a",O,[e("WriteableBitmap"),s(a)]),e("作为Image的数据源")]),s(r,{id:"149",data:[{id:"Views"},{id:"ViewModels"}]},{title0:t(({value:i,isActive:l})=>[e("Views")]),title1:t(({value:i,isActive:l})=>[e("ViewModels")]),tab0:t(({value:i,isActive:l})=>[Q]),tab1:t(({value:i,isActive:l})=>[X]),_:1}),j]),J,n("li",null,[Y,n("div",Z,[$,n("p",null,[e("虽然"),nn,e("提供了C#版本，但是FFmpeg参数问题还需要自己处理，例如常见的"),s(p,{to:"/tools/csharp/intptr-to-pointer.html"},{default:t(()=>[e("Intptr与指针转换")]),_:1})]),en])])]),sn,an,n("p",null,[e("更近一步的话，会发现两个常见小问题，更多问题见"),n("a",tn,[e("官方文档"),s(a)]),e(":")]),on,n("p",null,[e("推荐一个"),n("a",ln,[e("WPF视频播放器示例"),s(a)])])])}const mn=d(h,[["render",cn],["__file","hk.html.vue"]]);export{mn as default};
