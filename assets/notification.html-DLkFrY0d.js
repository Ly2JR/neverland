import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-CS2vecMX.js";const o={},p=t(`<h2 id="基础用法" tabindex="-1"><a class="header-anchor" href="#基础用法"><span>基础用法</span></a></h2><p>在最简单的情况下，你可以通过设置<code>Title</code> 和<code>Message</code> 属性来设置通知的标题和正文内容。 默认情况下，通知在4500毫秒后自动关闭，但你可以通过设置 <code>Duration</code> 属性来自定义通知的展示时间。 如果你将它设置为 0，那么通知将不会自动关闭。 需要注意的是 <code>Duration</code> 接收一个 Int，单位为毫秒。</p><figure><img src="https://nas.ilyl.life:8092/wpf-theme/notification/notification.gif" alt="notification" tabindex="0" loading="lazy"><figcaption>notification</figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Open1Command}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>closes automatically<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Open2Command}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Won&#39;t close automatically<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
 <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         Title<span class="token operator">=</span><span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
         Message<span class="token operator">=</span> <span class="token string">&quot;This is a reminder&quot;</span><span class="token punctuation">,</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
 <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Open2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         Title <span class="token operator">=</span> <span class="token string">&quot;Prompt&quot;</span><span class="token punctuation">,</span>
         Message <span class="token operator">=</span> <span class="token string">&quot;This is a message that does not automatically close&quot;</span><span class="token punctuation">,</span>
         Duration<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="不同类型的通知" tabindex="-1"><a class="header-anchor" href="#不同类型的通知"><span>不同类型的通知</span></a></h2><p>我们提供了四种不同类型的提醒框：success、warning、info 和error。</p><figure><img src="https://nas.ilyl.life:8092/wpf-theme/notification/notification-type.gif" alt="type" tabindex="0" loading="lazy"><figcaption>type</figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding SuccessCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Success<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding WarningCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Warning<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding InfoCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Info<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding ErrorCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Error<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Success</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Success&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;This is success message&quot;</span><span class="token punctuation">,</span>
        Type <span class="token operator">=</span> NotificationEnum<span class="token punctuation">.</span>Success<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Warning</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Warning&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;This is Warning message&quot;</span><span class="token punctuation">,</span>
        Type <span class="token operator">=</span> NotificationEnum<span class="token punctuation">.</span>Warning<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Info&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;This is Info message&quot;</span><span class="token punctuation">,</span>
        Type <span class="token operator">=</span> NotificationEnum<span class="token punctuation">.</span>Info<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;This is Error message&quot;</span><span class="token punctuation">,</span>
        Type <span class="token operator">=</span> NotificationEnum<span class="token punctuation">.</span>Error<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义消息弹出的位置" tabindex="-1"><a class="header-anchor" href="#自定义消息弹出的位置"><span>自定义消息弹出的位置</span></a></h2><p>可以让<code>Notification</code> 从屏幕四角中的任意一角弹出</p><p>使用<code>Position</code> 属性设置 Notification 的弹出位置， 支持四个选项：top-right、top-left、bottom-right 和 bottom-left， 默认为 top-right。</p><figure><img src="https://nas.ilyl.life:8092/wpf-theme/notification/notification-position.gif" alt="position" tabindex="0" loading="lazy"><figcaption>position</figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding TopRightCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TopRight<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding BottomRightCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BottomRight<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding BottomLeftCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BottomLeft<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding TopLeftCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TopLeft<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TopRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Custom Position&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;I&#39;m at the top right corner&quot;</span><span class="token punctuation">,</span>
        Position<span class="token operator">=</span> NotificationPositionEnum<span class="token punctuation">.</span>TopRight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BottomRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Custom Position&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;I&#39;m at the bottom right corner&quot;</span><span class="token punctuation">,</span>
        Position <span class="token operator">=</span> NotificationPositionEnum<span class="token punctuation">.</span>BottomRight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BottomLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Custom Position&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;I&#39;m at the bottom left corner&quot;</span><span class="token punctuation">,</span>
        Position <span class="token operator">=</span> NotificationPositionEnum<span class="token punctuation">.</span>BottomLeft<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TopLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Custom Position&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;I&#39;m at the top left corner&quot;</span><span class="token punctuation">,</span>
        Position <span class="token operator">=</span> NotificationPositionEnum<span class="token punctuation">.</span>TopLeft<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="有位置偏移的通知栏" tabindex="-1"><a class="header-anchor" href="#有位置偏移的通知栏"><span>有位置偏移的通知栏</span></a></h2><p>能够设置偏移量来使 Notification 偏移默认位置。</p><p>Notification 提供设置偏移量的功能，通过设置 <code>Offset</code> 字段，可以使弹出的消息距屏幕边缘偏移一段距离。 注意在同一时刻，每一个的 Notification 实例应当具有一个相同的偏移量。</p><figure><img src="https://nas.ilyl.life:8092/wpf-theme/notification/notification-offset.gif" alt="offset" tabindex="0" loading="lazy"><figcaption>offset</figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding OffsetCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Notification with offset<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Success&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;This is a success message&quot;</span><span class="token punctuation">,</span>
        Offset<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="隐藏关闭按钮" tabindex="-1"><a class="header-anchor" href="#隐藏关闭按钮"><span>隐藏关闭按钮</span></a></h2><p>通知的关闭按钮可以被设置为隐藏。</p><p>将<code>ShowClose</code> 属性设置为 false 即可隐藏关闭按钮</p><figure><img src="https://nas.ilyl.life:8092/wpf-theme/notification/notification-showclose.gif" alt="showclose" tabindex="0" loading="lazy"><figcaption>showclose</figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding HiddenCloseButtonCommand}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hide close button<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RelayCommand</span></span><span class="token punctuation">]</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">HiddenCloseButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    NlNotification<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NlNotificationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Title <span class="token operator">=</span> <span class="token string">&quot;Info&quot;</span><span class="token punctuation">,</span>
        Message <span class="token operator">=</span> <span class="token string">&quot;This is a message without close button&quot;</span><span class="token punctuation">,</span>
        ShowClose<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),e=[p];function i(c,l){return s(),a("div",null,e)}const k=n(o,[["render",i],["__file","notification.html.vue"]]),d=JSON.parse('{"path":"/cs/wpf-theme/notification.html","title":"Notification 通知","lang":"zh-CN","frontmatter":{"title":"Notification 通知","date":"2024-05-06T00:00:00.000Z","star":4,"editLink":false,"footer":false,"isOriginal":true,"category":["C#"],"tag":["WPF","WPF主题控件"],"description":"基础用法 在最简单的情况下，你可以通过设置Title 和Message 属性来设置通知的标题和正文内容。 默认情况下，通知在4500毫秒后自动关闭，但你可以通过设置 Duration 属性来自定义通知的展示时间。 如果你将它设置为 0，那么通知将不会自动关闭。 需要注意的是 Duration 接收一个 Int，单位为毫秒。 notificationno...","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/wpf-theme/notification.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"Notification 通知"}],["meta",{"property":"og:description","content":"基础用法 在最简单的情况下，你可以通过设置Title 和Message 属性来设置通知的标题和正文内容。 默认情况下，通知在4500毫秒后自动关闭，但你可以通过设置 Duration 属性来自定义通知的展示时间。 如果你将它设置为 0，那么通知将不会自动关闭。 需要注意的是 Duration 接收一个 Int，单位为毫秒。 notificationno..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://nas.ilyl.life:8092/wpf-theme/notification/notification.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T03:10:42.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:tag","content":"WPF主题控件"}],["meta",{"property":"article:published_time","content":"2024-05-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-06T03:10:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Notification 通知\\",\\"image\\":[\\"https://nas.ilyl.life:8092/wpf-theme/notification/notification.gif\\",\\"https://nas.ilyl.life:8092/wpf-theme/notification/notification-type.gif\\",\\"https://nas.ilyl.life:8092/wpf-theme/notification/notification-position.gif\\",\\"https://nas.ilyl.life:8092/wpf-theme/notification/notification-offset.gif\\",\\"https://nas.ilyl.life:8092/wpf-theme/notification/notification-showclose.gif\\"],\\"datePublished\\":\\"2024-05-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-06T03:10:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:ly2@ilyl.life\\"}]}"]]},"headers":[{"level":2,"title":"基础用法","slug":"基础用法","link":"#基础用法","children":[]},{"level":2,"title":"不同类型的通知","slug":"不同类型的通知","link":"#不同类型的通知","children":[]},{"level":2,"title":"自定义消息弹出的位置","slug":"自定义消息弹出的位置","link":"#自定义消息弹出的位置","children":[]},{"level":2,"title":"有位置偏移的通知栏","slug":"有位置偏移的通知栏","link":"#有位置偏移的通知栏","children":[]},{"level":2,"title":"隐藏关闭按钮","slug":"隐藏关闭按钮","link":"#隐藏关闭按钮","children":[]}],"git":{"createdTime":1714965042000,"updatedTime":1714965042000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":1}]},"readingTime":{"minutes":2.32,"words":695},"filePathRelative":"cs/wpf-theme/notification.md","localizedDate":"2024年5月6日","excerpt":"<h2>基础用法</h2>\\n<p>在最简单的情况下，你可以通过设置<code>Title</code> 和<code>Message</code> 属性来设置通知的标题和正文内容。 默认情况下，通知在4500毫秒后自动关闭，但你可以通过设置 <code>Duration</code> 属性来自定义通知的展示时间。 如果你将它设置为 0，那么通知将不会自动关闭。 需要注意的是 <code>Duration</code> 接收一个 Int，单位为毫秒。</p>\\n<figure><img src=\\"https://nas.ilyl.life:8092/wpf-theme/notification/notification.gif\\" alt=\\"notification\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>notification</figcaption></figure>","autoDesc":true}');export{k as comp,d as data};
