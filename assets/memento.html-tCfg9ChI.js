const e=JSON.parse('{"key":"v-cc4035b0","path":"/cs/design-pattern/memento.html","title":"备忘录模式","lang":"zh-CN","frontmatter":{"title":"备忘录模式","date":"2023-06-17T00:00:00.000Z","dir.order":15,"order":15,"editLink":false,"footer":false,"category":["设计模式"],"tag":["设计模式"],"description":"参与此模式的类和对象包括： Memento(Memento) 存储Originator对象的内部状态。Memento可以根据其发起者的判断，尽可能多地或尽可能少地存储发起者的内部状态。 防止发起者以外的对象访问。Mementos实际上有两个接口。Caretaker看到了Memento的狭窄接口---它只能将Memento传递给其他对象。相比之下，originator看到了一个广泛的界面，它可以访问所有必要的数据以将自己恢复到之前的状态。理想情况下，只有产生备忘录的始发者才被允许访问备忘录的内部状态。 Originator(SalesProspect) 创建一个包含其当前内部状态快照的Memento。 使用Memento恢复其内部状态。 Caretaker(Caretaker) 负责Memento的保管。 从不操作或检测Memento的内容。","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/design-pattern/memento.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"备忘录模式"}],["meta",{"property":"og:description","content":"参与此模式的类和对象包括： Memento(Memento) 存储Originator对象的内部状态。Memento可以根据其发起者的判断，尽可能多地或尽可能少地存储发起者的内部状态。 防止发起者以外的对象访问。Mementos实际上有两个接口。Caretaker看到了Memento的狭窄接口---它只能将Memento传递给其他对象。相比之下，originator看到了一个广泛的界面，它可以访问所有必要的数据以将自己恢复到之前的状态。理想情况下，只有产生备忘录的始发者才被允许访问备忘录的内部状态。 Originator(SalesProspect) 创建一个包含其当前内部状态快照的Memento。 使用Memento恢复其内部状态。 Caretaker(Caretaker) 负责Memento的保管。 从不操作或检测Memento的内容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T07:17:50.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-21T07:17:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"备忘录模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-21T07:17:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1687005402000,"updatedTime":1689923870000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":2}]},"readingTime":{"minutes":1.96,"words":589},"filePathRelative":"cs/design-pattern/memento.md","localizedDate":"2023年6月17日","excerpt":"<p>参与此模式的类和对象包括：</p>\\n<ul>\\n<li>\\n<p>Memento(<code>Memento</code>)</p>\\n<ul>\\n<li>存储Originator对象的内部状态。Memento可以根据其发起者的判断，尽可能多地或尽可能少地存储发起者的内部状态。</li>\\n<li>防止发起者以外的对象访问。Mementos实际上有两个接口。Caretaker看到了Memento的狭窄接口---它只能将Memento传递给其他对象。相比之下，originator看到了一个广泛的界面，它可以访问所有必要的数据以将自己恢复到之前的状态。理想情况下，只有产生备忘录的始发者才被允许访问备忘录的内部状态。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Originator(<code>SalesProspect</code>)</p>\\n<ul>\\n<li>创建一个包含其当前内部状态快照的Memento。</li>\\n<li>使用Memento恢复其内部状态。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Caretaker(<code>Caretaker</code>)</p>\\n<ul>\\n<li>负责Memento的保管。</li>\\n<li>从不操作或检测Memento的内容。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
