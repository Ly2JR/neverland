import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-CL1bqG43.js";const e={},p=t(`<p>在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入<code>IContainerExtension</code>。</p><p>此时需要自己实现<code>IJobFactory</code>接口即可。</p><p>以定时生成CSV文件的Job为例</p><h2 id="实现ijobfactory" tabindex="-1"><a class="header-anchor" href="#实现ijobfactory"><span>实现IJobFactory</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsvJobFactory</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">IJobFactory</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">CsvJobFactory</span><span class="token punctuation">(</span><span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _container<span class="token operator">=</span>container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">IJob</span> <span class="token function">NewJob</span><span class="token punctuation">(</span>TriggerFiredBundle bundle，<span class="token class-name">IScheduler</span> scheduler<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> container<span class="token punctuation">.</span><span class="token function">Resolve</span><span class="token punctuation">(</span>bundle<span class="token punctuation">.</span>JobDetail<span class="token punctuation">.</span>JobType<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">IJob</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ReturnJob</span><span class="token punctuation">(</span><span class="token class-name">IJob</span> job<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> disposable <span class="token operator">=</span> job <span class="token keyword">as</span> <span class="token class-name">IDisposable</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>disposable <span class="token operator">!=</span> nul1<span class="token punctuation">)</span><span class="token punctuation">{</span>
            disposable<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注入自定义jobfactory" tabindex="-1"><a class="header-anchor" href="#注入自定义jobfactory"><span>注入自定义JobFactory</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Registersingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IJobFactory<span class="token punctuation">,</span>CsvJobFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISchedulerFactory， StdSchedulerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CsVExportJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定时作业" tabindex="-1"><a class="header-anchor" href="#定时作业"><span>定时作业</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsvExportJob</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IJob</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">CsvExportJob</span><span class="token punctuation">(</span><span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _container <span class="token operator">=</span> container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name">IJobExecutionContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","quartz-net.html.vue"]]),d=JSON.parse('{"path":"/cs/wpf/quartz-net.html","title":"Quartz.net","lang":"zh-CN","frontmatter":{"title":"Quartz.net","date":"2023-11-07T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["C#"],"tag":["quartz.net","Prism"],"description":"在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入IContainerExtension。 此时需要自己实现IJobFactory接口即可。 以定时生成CSV文件的Job为例 实现IJobFactory 注入自定义JobFactory 定时作业","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/wpf/quartz-net.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"Quartz.net"}],["meta",{"property":"og:description","content":"在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入IContainerExtension。 此时需要自己实现IJobFactory接口即可。 以定时生成CSV文件的Job为例 实现IJobFactory 注入自定义JobFactory 定时作业"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-07T07:43:07.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"quartz.net"}],["meta",{"property":"article:tag","content":"Prism"}],["meta",{"property":"article:published_time","content":"2023-11-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-07T07:43:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quartz.net\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-07T07:43:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:ly2@ilyl.life\\"}]}"]]},"headers":[{"level":2,"title":"实现IJobFactory","slug":"实现ijobfactory","link":"#实现ijobfactory","children":[]},{"level":2,"title":"注入自定义JobFactory","slug":"注入自定义jobfactory","link":"#注入自定义jobfactory","children":[]},{"level":2,"title":"定时作业","slug":"定时作业","link":"#定时作业","children":[]}],"git":{"createdTime":1699342987000,"updatedTime":1699342987000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":1}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"cs/wpf/quartz-net.md","localizedDate":"2023年11月7日","excerpt":"<p>在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入<code>IContainerExtension</code>。</p>\\n<p>此时需要自己实现<code>IJobFactory</code>接口即可。</p>\\n<p>以定时生成CSV文件的Job为例</p>\\n<h2>实现IJobFactory</h2>\\n<div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CsvJobFactory</span><span class=\\"token punctuation\\">:</span><span class=\\"token type-list\\"><span class=\\"token class-name\\">IJobFactory</span></span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">readonly</span> <span class=\\"token class-name\\">IContainerExtension</span> _container<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">CsvJobFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IContainerExtension</span> container<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        _container<span class=\\"token operator\\">=</span>container<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\">IJob</span> <span class=\\"token function\\">NewJob</span><span class=\\"token punctuation\\">(</span>TriggerFiredBundle bundle，<span class=\\"token class-name\\">IScheduler</span> scheduler<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> container<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Resolve</span><span class=\\"token punctuation\\">(</span>bundle<span class=\\"token punctuation\\">.</span>JobDetail<span class=\\"token punctuation\\">.</span>JobType<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token class-name\\">IJob</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">ReturnJob</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">IJob</span> job<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> disposable <span class=\\"token operator\\">=</span> job <span class=\\"token keyword\\">as</span> <span class=\\"token class-name\\">IDisposable</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>disposable <span class=\\"token operator\\">!=</span> nul1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            disposable<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Dispose</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
