import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as c,c as i,d as s,f as n,a,w as l,e as u}from"./app-BrPA7grg.js";const r={},k=s("h2",{id:"winform使用ioc",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#winform使用ioc"},[s("span",null,"Winform使用IOC")])],-1),d={href:"https://learn.microsoft.com/zh-cn/dotnet/core/extensions/dependency-injection-usage",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.donet5.com/Home/Doc",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.quartz-scheduler.net/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://serilog.net/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.sqlite.org/index.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/Ly2JR/wpf-samples/tree/main/src/WindowsFormsApp1",target:"_blank",rel:"noopener noreferrer"},h=u(`<h3 id="orm" tabindex="-1"><a class="header-anchor" href="#orm"><span>ORM</span></a></h3><p>以Sqlite作为数据库及日志数据库，在Nuget安装<code>Sqlite</code>和<code>SqlSugar</code></p><p><code>DbManager</code>类用于创建表、初始化数据库，使用<code>SqlSugar</code>提供的ORM，CodeFirst优先。为了简便，动态见表及初始化。</p><p>将所有表结构实体放在单独类库中，新建用户类:</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarTable</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Login&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户表&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarIndex</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;index_login_name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">nameof</span><span class="token punctuation">(</span>Login<span class="token punctuation">.</span>Code<span class="token punctuation">)</span><span class="token punctuation">,</span> OrderByType<span class="token punctuation">.</span>Desc<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Login</span>
<span class="token punctuation">{</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsPrimaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Length <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Code <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Length <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>DbManager</code>类中，初始化新建表如下,<code>XXXXXX</code>为表结构的类库文件</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token comment">//初始化表</span>
<span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> types <span class="token operator">=</span> Assembly
<span class="token punctuation">.</span><span class="token function">LoadFrom</span><span class="token punctuation">(</span><span class="token string">&quot;XXXXXX&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">GetTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ISqlSugarClient<span class="token punctuation">.</span>CodeFirst<span class="token punctuation">.</span><span class="token function">InitTables</span><span class="token punctuation">(</span>types<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>AnyAsync</code>检查表数据是否存在，不存在则添加默认数据，为了提高查询时间使用了<code>Task.WhenAny</code></p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//表数据是否存在</span>
<span class="token class-name"><span class="token keyword">var</span></span> queryLogin <span class="token operator">=</span> ISqlSugarClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Queryable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Login<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AnyAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> queryTasks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> queryLogin<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>queryTasks<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> query <span class="token operator">=</span> <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">WhenAny</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>queryTasks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token boolean">false</span><span class="token punctuation">:</span>
            <span class="token comment">//不存在则默认添加</span>
            <span class="token keyword">await</span> _dbClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Insertable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Login<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>Logins<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommandAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    queryTasks<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注入SqlSugar实体：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">SqlSugarScope</span> sqlSugar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlSugarScope</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ConnectionConfig<span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ConfigId<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
        DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
        ConnectionString <span class="token operator">=</span> <span class="token string">&quot;DataSource=&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>DbPath<span class="token punctuation">,</span>
        IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ConfigId<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
        DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
        ConnectionString <span class="token operator">=</span> <span class="token string">&quot;DataSource=&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>LogPath<span class="token punctuation">,</span>
        IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    db <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        db<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>OnLogExecuting <span class="token operator">=</span> <span class="token punctuation">(</span>sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> cmd <span class="token operator">=</span> UtilMethods<span class="token punctuation">.</span><span class="token function">GetSqlString</span><span class="token punctuation">(</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISqlSugarClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>sqlSugar<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>使用自定义配置文件<code>appsettings.json</code>，需要将文件右击属性设置为<code>始终复制</code>和<code>内容</code>。</p><p><code>AppServiceOptions</code>类就是<code>appsettings.json</code>的实体类，节点一一对应。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//配置文件</span>
<span class="token class-name">IConfigurationBuilder</span> configbuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetBasePath</span><span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">optional</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">reloadOnChange</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> configuration <span class="token operator">=</span> configbuilder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//配置文件的实体类</span>
<span class="token class-name"><span class="token keyword">var</span></span> section <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>AppServiceOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppServiceOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
section<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IConfiguration<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token function">AddOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="quartz" tabindex="-1"><a class="header-anchor" href="#quartz"><span>Quartz</span></a></h3><p>自定义一个类<code>TimeJob</code>实现<code>IJob</code>接口，在IOC中注入</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TimeJob</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IJob</span><span class="token punctuation">,</span> <span class="token class-name">IDisposable</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ILogger</span> _logger<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">TimeJob</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token punctuation">}</span></span><span class="token string">执行完同步作业&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name">IJobExecutionContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> Task<span class="token punctuation">.</span>CompletedTask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//注册Quartz</span>
IServiceCollection<span class="token punctuation">.</span><span class="token function">AddQuartz</span><span class="token punctuation">(</span>q <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    q<span class="token punctuation">.</span>SchedulerId <span class="token operator">=</span> <span class="token string">&quot;Scheduler-Core&quot;</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token function">UseMicrosoftDependencyInjectionJobFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ScheduleJob</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>trigger <span class="token operator">=&gt;</span> trigger
    <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;TimeJobTrigger&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">StartNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithDailyTimeIntervalSchedule</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">WithInterval</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>JobTimeInterval<span class="token punctuation">,</span> IntervalUnit<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token function">AddQuartzHostedService</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    o<span class="token punctuation">.</span>WaitForJobsToComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    o<span class="token punctuation">.</span>StartDelay <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serilog" tabindex="-1"><a class="header-anchor" href="#serilog"><span>Serilog</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//注册Logger</span>
LogProvider<span class="token punctuation">.</span>IsDisabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> providers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerProviderCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Log<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>MinimumLevel<span class="token punctuation">.</span><span class="token function">Information</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">SQLite</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>LogPath<span class="token punctuation">)</span>
        <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Providers</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddLogging</span><span class="token punctuation">(</span>loggingBuilder <span class="token operator">=&gt;</span> loggingBuilder<span class="token punctuation">.</span><span class="token function">AddSerilog</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">dispose</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关键注入" tabindex="-1"><a class="header-anchor" href="#关键注入"><span>关键注入</span></a></h3><p>核心部分在于IOC，定义一个扩展方法<code>BuildWinform</code>，完整代码如下</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ConfigService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IServiceProvider</span> <span class="token function">BuildWinform</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//注册登录页面</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FrmLogin<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册单例</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DBManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册Quartz作业</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//配置文件</span>
        <span class="token class-name">IConfigurationBuilder</span> configbuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">SetBasePath</span><span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">optional</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">reloadOnChange</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> configuration <span class="token operator">=</span> configbuilder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//配置文件的实体类</span>
        <span class="token class-name"><span class="token keyword">var</span></span> section <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>AppServiceOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppServiceOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        section<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IConfiguration<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//注册Logger,写入Sqlite数据库</span>
        LogProvider<span class="token punctuation">.</span>IsDisabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> providers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerProviderCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span>MinimumLevel<span class="token punctuation">.</span><span class="token function">Information</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">SQLite</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>LogPath<span class="token punctuation">)</span>
                <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Providers</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddLogging</span><span class="token punctuation">(</span>loggingBuilder <span class="token operator">=&gt;</span> loggingBuilder<span class="token punctuation">.</span><span class="token function">AddSerilog</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">dispose</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//注册Quartz</span>
        services<span class="token punctuation">.</span><span class="token function">AddQuartz</span><span class="token punctuation">(</span>q <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            q<span class="token punctuation">.</span>SchedulerId <span class="token operator">=</span> <span class="token string">&quot;Scheduler-Core&quot;</span><span class="token punctuation">;</span>
            q<span class="token punctuation">.</span><span class="token function">UseMicrosoftDependencyInjectionJobFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            q<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ScheduleJob</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>trigger <span class="token operator">=&gt;</span> trigger
            <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;TimeJobTrigger&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">StartNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">WithDailyTimeIntervalSchedule</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">WithInterval</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>JobTimeInterval<span class="token punctuation">,</span> IntervalUnit<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddQuartzHostedService</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span>WaitForJobsToComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            o<span class="token punctuation">.</span>StartDelay <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册SugarSql</span>
        <span class="token class-name">SqlSugarScope</span> sqlSugar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlSugarScope</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ConnectionConfig<span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ConfigId<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
                DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
                ConnectionString <span class="token operator">=</span> <span class="token string">&quot;DataSource=&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>DbPath<span class="token punctuation">,</span>
                IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ConfigId<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
                ConnectionString <span class="token operator">=</span> <span class="token string">&quot;DataSource=&quot;</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>LogPath<span class="token punctuation">,</span>
                IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        db <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            db<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>OnLogExecuting <span class="token operator">=</span> <span class="token punctuation">(</span>sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> cmd <span class="token operator">=</span> UtilMethods<span class="token punctuation">.</span><span class="token function">GetSqlString</span><span class="token punctuation">(</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span><span class="token punctuation">;</span>
                Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISqlSugarClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>sqlSugar<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> serviceProvider <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token function">BuildServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> serviceProvider<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>Program.cs</code>文件里</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Mutex</span> mutex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Mutex</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ProductName<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">bool</span></span> createNew<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>createNew<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">IServiceCollection</span> services <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServiceCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> serviceProvider <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token function">BuildWinform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> frmLogin <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FrmLogin<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> schedulerFactory <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISchedulerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> scheduler <span class="token operator">=</span> schedulerFactory<span class="token punctuation">.</span><span class="token function">GetScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scheduler<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DBManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            db<span class="token punctuation">.</span><span class="token function">InitDataBaseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>frmLogin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>Message<span class="token punctuation">,</span> <span class="token string">&quot;提示&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">CloseAndFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;应用程序已经在运行中...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wpf使用ioc" tabindex="-1"><a class="header-anchor" href="#wpf使用ioc"><span>WPF使用IOC</span></a></h2>`,27),y=s("code",null,"Prism",-1);function S(w,q){const t=p("ExternalLinkIcon"),e=p("RouteLink");return c(),i("div",null,[k,s("p",null,[n("在Winfrom里使用"),s("a",d,[n("Microsoft.Extensions.DependencyInjection"),a(t)]),n("、"),s("a",v,[n("SqlSugar"),a(t)]),n("、"),s("a",m,[n("Quartz"),a(t)]),n("、"),s("a",g,[n("Serilog"),a(t)]),n("、"),s("a",b,[n("Sqlite"),a(t)]),n("。"),s("a",f,[n("源代码地址"),a(t)]),n("。")]),h,s("p",null,[n("WPF使用IOC，一般配合"),y,n("或者其他框架，基本都带IOC。PWF使用Prism的IOC示例，查看"),a(e,{to:"/cs/wpf/plugin.html"},{default:l(()=>[n("模块")]),_:1})])])}const T=o(r,[["render",S],["__file","ioc.html.vue"]]),L=JSON.parse('{"path":"/tools/csharp/ioc.html","title":"IOC","lang":"zh-CN","frontmatter":{"title":"IOC","date":"2023-07-4","editLink":false,"footer":false,"isOriginal":true,"category":["工具箱"],"tag":["C#"],"description":"Winform使用IOC 在Winfrom里使用Microsoft.Extensions.DependencyInjection、SqlSugar、Quartz、Serilog、Sqlite。源代码地址。 ORM 以Sqlite作为数据库及日志数据库，在Nuget安装Sqlite和SqlSugar DbManager类用于创建表、初始化数据库，使用Sq...","head":[["meta",{"property":"og:url","content":"https://ilyl.life/tools/csharp/ioc.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"IOC"}],["meta",{"property":"og:description","content":"Winform使用IOC 在Winfrom里使用Microsoft.Extensions.DependencyInjection、SqlSugar、Quartz、Serilog、Sqlite。源代码地址。 ORM 以Sqlite作为数据库及日志数据库，在Nuget安装Sqlite和SqlSugar DbManager类用于创建表、初始化数据库，使用Sq..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-07T07:29:54.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:published_time","content":"2023-07-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-07T07:29:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IOC\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-07T07:29:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"Winform使用IOC","slug":"winform使用ioc","link":"#winform使用ioc","children":[{"level":3,"title":"ORM","slug":"orm","link":"#orm","children":[]},{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":3,"title":"Quartz","slug":"quartz","link":"#quartz","children":[]},{"level":3,"title":"Serilog","slug":"serilog","link":"#serilog","children":[]},{"level":3,"title":"关键注入","slug":"关键注入","link":"#关键注入","children":[]}]},{"level":2,"title":"WPF使用IOC","slug":"wpf使用ioc","link":"#wpf使用ioc","children":[]}],"git":{"createdTime":1688459333000,"updatedTime":1699342194000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":3}]},"readingTime":{"minutes":2.98,"words":894},"filePathRelative":"tools/csharp/ioc.md","localizedDate":"2023年7月4日","excerpt":"<h2>Winform使用IOC</h2>\\n<p>在Winfrom里使用<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/core/extensions/dependency-injection-usage\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Microsoft.Extensions.DependencyInjection</a>、<a href=\\"https://www.donet5.com/Home/Doc\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SqlSugar</a>、<a href=\\"https://www.quartz-scheduler.net/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Quartz</a>、<a href=\\"https://serilog.net/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Serilog</a>、<a href=\\"https://www.sqlite.org/index.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Sqlite</a>。<a href=\\"https://github.com/Ly2JR/wpf-samples/tree/main/src/WindowsFormsApp1\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">源代码地址</a>。</p>","autoDesc":true}');export{T as comp,L as data};
