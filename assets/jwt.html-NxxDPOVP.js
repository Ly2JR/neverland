import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as e,c as o,d as s,e as n,f as c,b as i}from"./app-2Xs9Fhdv.js";const l={},u={href:"https://learn.microsoft.com/zh-cn/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-7.0",target:"_blank",rel:"noopener noreferrer"},r=i(`<p>添加JwtBearer包<code>Microsoft.AspNetCore.Authentication.JwtBearer</code></p><h2 id="设置jwt选项配置" tabindex="-1"><a class="header-anchor" href="#设置jwt选项配置" aria-hidden="true">#</a> 设置Jwt选项配置</h2><p>在<code>appsettings.json</code>添加新节点</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;JwtOption&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token property">&quot;Secret&quot;</span><span class="token operator">:</span><span class="token string">&quot;ijurkbdlhmklqacwqzdxmkkhvqowlyqa&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;Issuer&quot;</span><span class="token operator">:</span><span class="token string">&quot;ilyl.life&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;Audience&quot;</span><span class="token operator">:</span><span class="token string">&quot;WebApi&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;AccessExpiration&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建<code>JwtOption</code>模型，映射配置选项</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtOption</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 密钥 长度不少于16位</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Secret <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 发行人</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Issuer <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 观众</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Audience <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 访问过期</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> AccessExpiration <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>Program.cs</code>中添加绑定</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JwtOption<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>JwtOption<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加认证中间件" tabindex="-1"><a class="header-anchor" href="#添加认证中间件" aria-hidden="true">#</a> 添加认证中间件</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> jwtOption <span class="token operator">=</span> builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>JwtOption<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JwtOption<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    it<span class="token punctuation">.</span>DefaultAuthenticateScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>DefaultChallengeScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>DefaultScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddJwtBearer</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    it<span class="token punctuation">.</span>RequireHttpsMetadata <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>SaveToken <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>TokenValidationParameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenValidationParameters</span>
    <span class="token punctuation">{</span>
        IssuerSigningKey<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>jwtOption<span class="token punctuation">.</span>Secret<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        ValidIssuer<span class="token operator">=</span>jwtOption<span class="token punctuation">.</span>Issuer<span class="token punctuation">,</span>
        ValidAudience<span class="token operator">=</span>jwtOption<span class="token punctuation">.</span>Audience<span class="token punctuation">,</span>
        ValidateIssuer<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
        ValidateAudience<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
        ValidateLifetime<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>
        ValidateIssuerSigningKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddEndpointsApiExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用认证、授权" tabindex="-1"><a class="header-anchor" href="#使用认证、授权" aria-hidden="true">#</a> 使用认证、授权</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加登录服务" tabindex="-1"><a class="header-anchor" href="#添加登录服务" aria-hidden="true">#</a> 添加登录服务</h2><p>用户登录账号和密码</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginInput</span>
 <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户信息</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDto</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Address <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Gender <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Wx <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>登录服务接口</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserService</span>
 <span class="token punctuation">{</span>
     <span class="token return-type class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>登录服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IUserService</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">List<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> _users<span class="token punctuation">;</span>
     <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">JwtOption</span> _jwtOption<span class="token punctuation">;</span>
     <span class="token keyword">public</span> <span class="token function">UserService</span><span class="token punctuation">(</span><span class="token class-name">IOptions<span class="token punctuation">&lt;</span>JwtOption<span class="token punctuation">&gt;</span></span> option<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         _jwtOption <span class="token operator">=</span> option<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
         _users<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">{</span>
             <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 Id<span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>UserName<span class="token operator">=</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span>Address<span class="token operator">=</span><span class="token string">&quot;A1&quot;</span><span class="token punctuation">,</span>Email<span class="token operator">=</span><span class="token string">&quot;AAAAA@mail.cn&quot;</span><span class="token punctuation">,</span>Gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">&quot;A123456&quot;</span><span class="token punctuation">,</span>Wx<span class="token operator">=</span><span class="token string">&quot;AAA1111AAAA&quot;</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span><span class="token punctuation">,</span>
             <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 Id<span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>UserName<span class="token operator">=</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span>Address<span class="token operator">=</span><span class="token string">&quot;B1&quot;</span><span class="token punctuation">,</span>Email<span class="token operator">=</span><span class="token string">&quot;BBBBB@mail.cn&quot;</span><span class="token punctuation">,</span>Gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">&quot;B123456&quot;</span><span class="token punctuation">,</span>Wx<span class="token operator">=</span><span class="token string">&quot;BBB1111BBBB&quot;</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span><span class="token punctuation">,</span>
             <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 Id<span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span>UserName<span class="token operator">=</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span>Address<span class="token operator">=</span><span class="token string">&quot;C1&quot;</span><span class="token punctuation">,</span>Email<span class="token operator">=</span><span class="token string">&quot;CCCCC@mail.cn&quot;</span><span class="token punctuation">,</span>Gender<span class="token operator">=</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">&quot;C123456&quot;</span><span class="token punctuation">,</span>Wx<span class="token operator">=</span><span class="token string">&quot;CCC1111CCCC&quot;</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token return-type class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
        <span class="token range operator">..</span><span class="token punctuation">.</span>     
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现<code>GetUser</code>方法</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> user<span class="token operator">=</span> _users<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>UserName <span class="token operator">==</span> input<span class="token punctuation">.</span>UserName<span class="token operator">&amp;&amp;</span>it<span class="token punctuation">.</span>Password<span class="token operator">==</span>input<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span>ErrCode <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span>ErrMsg <span class="token operator">=</span> <span class="token string">&quot;用户名或密码错误&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>Bearer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Expires <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">AddMinutes</span><span class="token punctuation">(</span>_jwtOption<span class="token punctuation">.</span>AccessExpiration<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>Data <span class="token operator">=</span> user<span class="token punctuation">;</span>
    
    <span class="token class-name"><span class="token keyword">var</span></span> issuer <span class="token operator">=</span> _jwtOption<span class="token punctuation">.</span>Issuer<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> audience <span class="token operator">=</span> _jwtOption<span class="token punctuation">.</span>Audience<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> securityKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>_jwtOption<span class="token punctuation">.</span>Secret<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> jwtTokenHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JwtSecurityTokenHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>ASCII<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>_jwtOption<span class="token punctuation">.</span>Secret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> tokenDescriptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SecurityTokenDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ClaimsIdentity</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>NameIdentifier<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>user<span class="token punctuation">.</span>UserName<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Email<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Email<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Gender<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Gender<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>StreetAddress<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;wx&quot;</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span>Wx<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtRegisteredClaimNames<span class="token punctuation">.</span>Jti<span class="token punctuation">,</span>Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Expires <span class="token operator">=</span> result<span class="token punctuation">.</span>Bearer<span class="token punctuation">.</span>Expires<span class="token punctuation">,</span>
        Audience <span class="token operator">=</span> audience<span class="token punctuation">,</span>
        Issuer <span class="token operator">=</span> issuer<span class="token punctuation">,</span>
        SigningCredentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SigningCredentials</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> SecurityAlgorithms<span class="token punctuation">.</span>HmacSha512Signature<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> token <span class="token operator">=</span> jwtTokenHandler<span class="token punctuation">.</span><span class="token function">CreateToken</span><span class="token punctuation">(</span>tokenDescriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> jwtToken <span class="token operator">=</span> jwtTokenHandler<span class="token punctuation">.</span><span class="token function">WriteToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>Bearer<span class="token punctuation">.</span>Token <span class="token operator">=</span> jwtToken<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注入用户服务" tabindex="-1"><a class="header-anchor" href="#注入用户服务" aria-hidden="true">#</a> 注入用户服务</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IUserService<span class="token punctuation">,</span> UserService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加用户登录api" tabindex="-1"><a class="header-anchor" href="#添加用户登录api" aria-hidden="true">#</a> 添加用户登录API</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">MapPost</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AllowAnonymous</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">IUserService</span> srv<span class="token punctuation">,</span> <span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> ret<span class="token operator">=</span> srv<span class="token punctuation">.</span><span class="token function">GetUser</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加授权" tabindex="-1"><a class="header-anchor" href="#添加授权" aria-hidden="true">#</a> 添加授权</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">&quot;/weatherforecast&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Authorize</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> forecast <span class="token operator">=</span> Enumerable<span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>index <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WeatherForecast</span>
        <span class="token punctuation">(</span>
            DateOnly<span class="token punctuation">.</span><span class="token function">FromDateTime</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddDays</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            Random<span class="token punctuation">.</span>Shared<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            summaries<span class="token punctuation">[</span>Random<span class="token punctuation">.</span>Shared<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>summaries<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> forecast<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="优化返回序列化" tabindex="-1"><a class="header-anchor" href="#优化返回序列化" aria-hidden="true">#</a> 优化返回序列化</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">ConfigureHttpJsonOptions</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>SerializerOptions<span class="token punctuation">.</span>WriteIndented <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>SerializerOptions<span class="token punctuation">.</span>IncludeFields <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>SerializerOptions<span class="token punctuation">.</span>DefaultIgnoreCondition <span class="token operator">=</span> JsonIgnoreCondition<span class="token punctuation">.</span>WhenWritingNull<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h2><figure><img src="https://nas.ilyl.life:8092/dotnet/jwt1.gif" alt="登录认证" width="420" height="200" tabindex="0" loading="lazy"><figcaption>登录认证</figcaption></figure><figure><img src="https://nas.ilyl.life:8092/dotnet/jwt2.gif" alt="数据授权" width="420" height="200" tabindex="0" loading="lazy"><figcaption>数据授权</figcaption></figure>`,34);function k(d,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[s("p",null,[n("基于.NET 7"),s("a",u,[n("最小API"),c(a)]),n("创建的一个JWT项目。")]),r])}const g=t(l,[["render",k],["__file","jwt.html.vue"]]);export{g as default};
