import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-CjYUTdo8.js";const e={},p=t(`<p>测试表<code>Test</code>,结构及数据如下:</p><table><thead><tr><th style="text-align:left;">ID</th><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">1111</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">2222</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">3333</td></tr></tbody></table><h2 id="in参数化查询" tabindex="-1"><a class="header-anchor" href="#in参数化查询"><span>In参数化查询</span></a></h2><p>替换成自己的数据库连接字符串。</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> connString <span class="token operator">=</span> <span class="token string">&quot;server=...;Port=...;Database=..;Uid=r..oot;Pwd=...;&quot;</span><span class="token punctuation">;</span>

 <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MySqlConnection</span><span class="token punctuation">(</span>connString<span class="token punctuation">)</span><span class="token punctuation">;</span>
 conn<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token class-name"><span class="token keyword">var</span></span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MySqlCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> idList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> idParameterList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> idList<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token class-name"><span class="token keyword">var</span></span> paramName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;@idParam</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">i</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
     idParameterList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>paramName<span class="token punctuation">)</span><span class="token punctuation">;</span>
     cmd<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token function">AddWithValue</span><span class="token punctuation">(</span>paramName<span class="token punctuation">,</span> idList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 cmd<span class="token punctuation">.</span>Connection <span class="token operator">=</span> conn<span class="token punctuation">;</span>
 cmd<span class="token punctuation">.</span>CommandText <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;select name from test where id in (</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> idParameterList<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> sda <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MySqlDataAdapter</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
 sda<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span>
 conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataRow</span> dr <span class="token keyword">in</span> dt<span class="token punctuation">.</span>Rows<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>dr<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","paramaters.html.vue"]]),k=JSON.parse('{"path":"/tools/databases/paramaters.html","title":"参数化查询","lang":"zh-CN","frontmatter":{"title":"参数化查询","date":"2023-08-23T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["工具箱"],"tag":["参数化查询"],"description":"测试表Test,结构及数据如下: In参数化查询 替换成自己的数据库连接字符串。","head":[["meta",{"property":"og:url","content":"https://ilyl.life/tools/databases/paramaters.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"参数化查询"}],["meta",{"property":"og:description","content":"测试表Test,结构及数据如下: In参数化查询 替换成自己的数据库连接字符串。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-23T09:12:23.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"参数化查询"}],["meta",{"property":"article:published_time","content":"2023-08-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-23T09:12:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"参数化查询\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-23T09:12:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"In参数化查询","slug":"in参数化查询","link":"#in参数化查询","children":[]}],"git":{"createdTime":1692781943000,"updatedTime":1692781943000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":1}]},"readingTime":{"minutes":0.51,"words":152},"filePathRelative":"tools/databases/paramaters.md","localizedDate":"2023年8月23日","excerpt":"<p>测试表<code>Test</code>,结构及数据如下:</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">ID</th>\\n<th style=\\"text-align:left\\">Name</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">1</td>\\n<td style=\\"text-align:left\\">1111</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">2</td>\\n<td style=\\"text-align:left\\">2222</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">3</td>\\n<td style=\\"text-align:left\\">3333</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{d as comp,k as data};
