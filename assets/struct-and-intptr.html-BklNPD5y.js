import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,d as t,f as n,a,e as r}from"./app-Cx-AGKAB.js";const i={},l={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.intptr?view=net-7.0",target:"_blank",rel:"noopener noreferrer"},u={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.runtime.interopservices.structlayoutattribute?view=net-6.0",target:"_blank",rel:"noopener noreferrer"},k=r(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>InteropServices</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IntPtr</span> <span class="token generic-method"><span class="token function">StructToIntPtr</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">T</span> info<span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">struct</span></span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">int</span></span> size <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">SizeOf</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntPtr</span> intPtr <span class="token operator">=</span> Marshal<span class="token punctuation">.</span><span class="token function">AllocHGlobal</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Marshal<span class="token punctuation">.</span><span class="token function">StructureToPtr</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> intPtr<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> intPtr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">T</span> <span class="token generic-method"><span class="token function">IntptrToStruct</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">IntPtr</span> intPtr<span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">struct</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span>Marshal<span class="token punctuation">.</span><span class="token function">PtrToStructure</span><span class="token punctuation">(</span>intPtr<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">T</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function d(m,h){const s=p("ExternalLinkIcon");return o(),c("div",null,[t("p",null,[t("a",l,[n("Intptr"),a(s)]),n("与"),t("a",u,[n("StructLayout"),a(s)]),n("转换")]),k])}const v=e(i,[["render",d],["__file","struct-and-intptr.html.vue"]]),g=JSON.parse('{"path":"/tools/csharp/struct-and-intptr.html","title":"结构和托管指针转换","lang":"zh-CN","frontmatter":{"title":"结构和托管指针转换","date":"2023-06-08T00:00:00.000Z","editLink":false,"footer":false,"isOriginal":true,"category":["工具箱"],"tag":["C#","C++"],"description":"Intptr与StructLayout转换","head":[["meta",{"property":"og:url","content":"https://ilyl.life/tools/csharp/struct-and-intptr.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"结构和托管指针转换"}],["meta",{"property":"og:description","content":"Intptr与StructLayout转换"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T09:04:30.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:published_time","content":"2023-06-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T09:04:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"结构和托管指针转换\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-28T09:04:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1686294226000,"updatedTime":1709111070000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":4}]},"readingTime":{"minutes":0.29,"words":87},"filePathRelative":"tools/csharp/struct-and-intptr.md","localizedDate":"2023年6月8日","excerpt":"<p><a href=\\"https://learn.microsoft.com/zh-cn/dotnet/api/system.intptr?view=net-7.0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Intptr</a>与<a href=\\"https://learn.microsoft.com/zh-cn/dotnet/api/system.runtime.interopservices.structlayoutattribute?view=net-6.0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">StructLayout</a>转换</p>","autoDesc":true}');export{v as comp,g as data};
