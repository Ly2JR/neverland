const e=JSON.parse('{"key":"v-2967e956","path":"/cs/design-pattern/command.html","title":"命令模式","lang":"zh-CN","frontmatter":{"title":"命令模式","date":"2023-06-17T00:00:00.000Z","dir.order":6,"order":6,"editLink":false,"footer":false,"category":["设计模式"],"tag":["设计模式"],"description":"参与此模式的类和对象包括： Command(Command) 声明一个用于执行操作的接口 ConcreteCommand(CalculatorCommand) 定义Receiver对象和动作之间的绑定 通过调用Receiver上的相应操作来实现Execute Client(CommandApp) 创建一个ConcreteCommand对象并设置它的接收者。 Invoker(User) 要求命令执行请求 Receiver(Calculator) 知道如何执行与执行请求相关的操作。","head":[["meta",{"property":"og:url","content":"https://ilyl.life/cs/design-pattern/command.html"}],["meta",{"property":"og:site_name","content":"乌龙茶有点甜"}],["meta",{"property":"og:title","content":"命令模式"}],["meta",{"property":"og:description","content":"参与此模式的类和对象包括： Command(Command) 声明一个用于执行操作的接口 ConcreteCommand(CalculatorCommand) 定义Receiver对象和动作之间的绑定 通过调用Receiver上的相应操作来实现Execute Client(CommandApp) 创建一个ConcreteCommand对象并设置它的接收者。 Invoker(User) 要求命令执行请求 Receiver(Calculator) 知道如何执行与执行请求相关的操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T07:17:50.000Z"}],["meta",{"property":"article:author","content":"乌龙茶"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-21T07:17:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命令模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-21T07:17:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"乌龙茶\\",\\"url\\":\\"https://ilyl.life\\",\\"email\\":\\"mailto:982474256@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1687005402000,"updatedTime":1689923870000,"contributors":[{"name":"乌龙茶","email":"982474256@qq.com","commits":2}]},"readingTime":{"minutes":2.08,"words":624},"filePathRelative":"cs/design-pattern/command.md","localizedDate":"2023年6月17日","excerpt":"<p>参与此模式的类和对象包括：</p>\\n<ul>\\n<li>\\n<p>Command(<code>Command</code>)</p>\\n<ul>\\n<li>声明一个用于执行操作的接口</li>\\n</ul>\\n</li>\\n<li>\\n<p>ConcreteCommand(<code>CalculatorCommand</code>)</p>\\n<ul>\\n<li>定义Receiver对象和动作之间的绑定</li>\\n<li>通过调用Receiver上的相应操作来实现Execute</li>\\n</ul>\\n</li>\\n<li>\\n<p>Client(<code>CommandApp</code>)</p>\\n<ul>\\n<li>创建一个ConcreteCommand对象并设置它的接收者。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Invoker(<code>User</code>)</p>\\n<ul>\\n<li>要求命令执行请求</li>\\n</ul>\\n</li>\\n<li>\\n<p>Receiver(<code>Calculator</code>)</p>\\n<ul>\\n<li>知道如何执行与执行请求相关的操作。</li>\\n</ul>\\n</li>\\n</ul>","copyright":{"author":"乌龙茶","license":"MIT"},"autoDesc":true}');export{e as data};
