import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as k,c as d,d as n,e as s,f as a,w as e,b as l}from"./app-Q32ETLnO.js";const m={},v=n("a",{href:"chenhw2/aliyun-ddns-cli:latest"},"chenhw2/aliyun-ddns-cli:latest",-1),b={href:"https://github.com/Ly2JR/aliyun.ddns",target:"_blank",rel:"noopener noreferrer"},g=l('<p>已升级到.NET 8,AOT对Web开发很好,本机AOT限制很多....</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> .NET 8</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 获取公网地址</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 获取环境变量参数</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 阿里云解析记录</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 强签名</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 支持Docker部署</label></li></ul><h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料" aria-hidden="true">#</a> 资料</h2>',3),y={href:"https://docs.docker.com/language/dotnet/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://next.api.aliyun.com/api-tools/sdk/Alidns?version=2015-01-09&language=csharp-tea&tab=primer-doc",target:"_blank",rel:"noopener noreferrer"},w={href:"https://dotnet.microsoft.com/zh-cn/learn/aspnet/microservice-tutorial/intro",target:"_blank",rel:"noopener noreferrer"},_={href:"https://learn.microsoft.com/zh-cn/dotnet/core/docker/introduction",target:"_blank",rel:"noopener noreferrer"},A={href:"https://mcr.microsoft.com/en-us/catalog?page=1",target:"_blank",rel:"noopener noreferrer"},R=l(`<h2 id="docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#docker-compose-yml" aria-hidden="true">#</a> docker-compose.yml</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.4&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">neverland.aliyun.ddns</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>DOCKER_REGISTRY<span class="token punctuation">-</span><span class="token punctuation">}</span>ali.ddns<span class="token punctuation">:</span>1.0.0
    <span class="token key atrule">build</span><span class="token punctuation">:</span>
      <span class="token key atrule">context</span><span class="token punctuation">:</span> .
      <span class="token key atrule">dockerfile</span><span class="token punctuation">:</span> Dockerfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-compose-override-yml" tabindex="-1"><a class="header-anchor" href="#docker-compose-override-yml" aria-hidden="true">#</a> docker-compose.override.yml</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.8&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">neverland.aliyun.ddns</span><span class="token punctuation">:</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ALIYUN<span class="token punctuation">-</span>DDNS
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> product<span class="token punctuation">-</span>network
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ALIKID=
      <span class="token punctuation">-</span> ALIKSCT=
      <span class="token punctuation">-</span> ALIDOMAIN=ilyl.life
      <span class="token punctuation">-</span> ALITTL=600
<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">product-network</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>最简单的方式是使用VS2022，添加Docker支持，自动生成</p></div><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token comment">#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/runtime:8.0 <span class="token keyword">AS</span> base</span>
<span class="token instruction"><span class="token keyword">USER</span> app</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/sdk:8.0 <span class="token keyword">AS</span> build</span>
<span class="token comment"># Install clang/zlib1g-dev dependencies for publishing to native</span>
<span class="token instruction"><span class="token keyword">RUN</span> apt-get update <span class="token operator">\\</span>
    &amp;&amp; apt-get install -y --no-install-recommends <span class="token operator">\\</span>
    clang zlib1g-dev</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /src</span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">&quot;neverland.aliyun.ddns.csproj&quot;</span>, <span class="token string">&quot;.&quot;</span>]</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet restore <span class="token string">&quot;./././neverland.aliyun.ddns.csproj&quot;</span></span>
<span class="token instruction"><span class="token keyword">COPY</span> . .</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token string">&quot;/src/.&quot;</span></span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet build <span class="token string">&quot;./neverland.aliyun.ddns.csproj&quot;</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/build</span>

<span class="token instruction"><span class="token keyword">FROM</span> build <span class="token keyword">AS</span> publish</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet publish <span class="token string">&quot;./neverland.aliyun.ddns.csproj&quot;</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/publish /p:UseAppHost=true</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/runtime-deps:8.0 <span class="token keyword">AS</span> final</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">publish</span></span> /app/publish .</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;./neverland.aliyun.ddns&quot;</span>]</span>

<span class="token instruction"><span class="token keyword">LABEL</span> MAINTAINER=乌龙茶有点甜&lt;982474256@qq.com&gt;</span>

<span class="token instruction"><span class="token keyword">ENV</span> ALIKID= <span class="token operator">\\</span>
    ALIKSCT= <span class="token operator">\\</span>
    ALIDOMAIN=ilyl.life <span class="token operator">\\</span>
    ALITTL=600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="公网ip" tabindex="-1"><a class="header-anchor" href="#公网ip" aria-hidden="true">#</a> 公网IP</h2>`,8),f={href:"https://ip-api.com/",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,[s("利用"),n("code",null,"http://ip-api.com/json/?lang=zh-CN&fields=status,query"),s("获取到公网地址。")],-1),D={href:"http://ip-api.com/json/?lang=zh-CN&fields=status,query",target:"_blank",rel:"noopener noreferrer"},I=l(`<div class="hint-container warning"><p class="hint-container-title">注意</p><p>.NET 8 开启AOT时，<code>ReadFromJsonAsync</code>方法警告,JSON序列化受限</p><p>因此需要禁用</p></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    client<span class="token punctuation">.</span>BaseAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_URL<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//不使用这个是因为有使用限制,https://ip-api.com/docs/api:json</span>
    <span class="token comment">//var query = await client.GetFromJsonAsync&lt;IPModelResult&gt;(Contracts.QUERY_IPADDRESS_RESOURCE, cancelllationToken)</span>
    <span class="token comment">//     .ConfigureAwait(false);</span>

    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span>Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_RESOURCE<span class="token punctuation">,</span> cancelllationToken<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">EnsureSuccessStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WriteRequestToConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//检查受限情况</span>
        <span class="token class-name"><span class="token keyword">var</span></span> ri <span class="token operator">=</span> response<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Key <span class="token operator">==</span> Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_HEADER_RI<span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ri <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ri<span class="token punctuation">.</span><span class="token function">ElementAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> ttl <span class="token operator">=</span> response<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Key <span class="token operator">==</span> Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_HEADER_TTL<span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Contracts<span class="token punctuation">.</span>TITLE</span><span class="token punctuation">}</span></span><span class="token string">ip地址查询受限,等待</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ttl<span class="token punctuation">.</span><span class="token function">ElementAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">秒后重试&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name"><span class="token keyword">var</span></span> jsonResponse <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ReadFromJsonAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IPModelResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jsonResponse <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jsonResponse<span class="token punctuation">.</span>Status <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> jsonResponse<span class="token punctuation">.</span>Status <span class="token operator">==</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> networkIp <span class="token operator">=</span> jsonResponse<span class="token punctuation">.</span>Query<span class="token operator">!</span><span class="token punctuation">;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;公网IP:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">networkIp</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> networkIp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TaskCanceledException</span> ex<span class="token punctuation">)</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>ex<span class="token punctuation">.</span>InnerException <span class="token keyword">is</span> <span class="token class-name">TimeoutException</span> tex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Timed out: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">tex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HttpRequestException</span> ex<span class="token punctuation">)</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>ex <span class="token keyword">is</span> <span class="token punctuation">{</span> StatusCode<span class="token punctuation">:</span> HttpStatusCode<span class="token punctuation">.</span>NotFound <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Not found: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HttpRequestException</span> ex<span class="token punctuation">)</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>ex <span class="token keyword">is</span> <span class="token punctuation">{</span> StatusCode<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;网络连接失败: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2>`,3),x={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.environment.getenvironmentvariable?view=net-6.0",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,"一是因为账号安全问题",-1),C=n("p",null,"二是Docker运行配置",-1),L={class:"hint-container tip"},S=n("p",{class:"hint-container-title"},"提示",-1),q=n("li",null,[s("项目"),n("code",null,"属性"),s("，"),n("code",null,"调试"),s("，打开"),n("code",null,"调试启动配置文件UI")],-1),U={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.environment.setenvironmentvariable?view=net-7.0",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"#if DEBUG",-1),O=n("h2",{id:"云解析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#云解析","aria-hidden":"true"},"#"),s(" 云解析")],-1),B=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token return-type class-name"},"Client"),s(),n("span",{class:"token function"},"CreateClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" accessKey"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" accessKeySecret"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"Config"),s(" config "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"Config"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 必填，您的 AccessKey ID"),s(`
        AccessKeyId `),n("span",{class:"token operator"},"="),s(" accessKey"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token comment"},"// 必填，您的 AccessKey Secret"),s(`
        AccessKeySecret `),n("span",{class:"token operator"},"="),s(" accessKeySecret"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// Endpoint 请参考 https://api.aliyun.com/product/Alidns"),s(`
    config`),n("span",{class:"token punctuation"},"."),s("Endpoint "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_ENDPOINT"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"Client"),n("span",{class:"token punctuation"},"("),s("config"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token return-type class-name"},[s("DescribeDomainRecordsResponse"),n("span",{class:"token punctuation"},"?")]),s(),n("span",{class:"token function"},"QueryDns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Client"),s(" client"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" domain "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEBUG_ALIBABA_DOMAIN"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" type "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_REQUEST_TYPE_4"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"DescribeDomainRecordsRequest"),s(" describeDomainRecordsRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"DescribeDomainRecordsRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        DomainName `),n("span",{class:"token operator"},"="),s(" domain"),n("span",{class:"token punctuation"},","),s(`
        Type `),n("span",{class:"token operator"},"="),s(` type
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"RuntimeOptions"),s(" runtime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"RuntimeOptions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"try"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 复制代码运行请自行打印 API 的返回值"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"DescribeDomainRecordsWithOptions"),n("span",{class:"token punctuation"},"("),s("describeDomainRecordsRequest"),n("span",{class:"token punctuation"},","),s(" runtime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" response"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TeaException"),s(" error"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 如有需要，请打印 error"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" msg "),n("span",{class:"token operator"},"="),s(" Common"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AssertAsString"),n("span",{class:"token punctuation"},"("),s("error"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("Contracts"),n("span",{class:"token punctuation"},"."),s("TITLE")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"查询云解析失败,"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"msg"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" _error"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"TeaException"),s(" error "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"TeaException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("Dictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(`
                `),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),s(" _error"),n("span",{class:"token punctuation"},"."),s("Message "),n("span",{class:"token punctuation"},"}"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 如有需要，请打印 error"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" msg "),n("span",{class:"token operator"},"="),s(" Common"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AssertAsString"),n("span",{class:"token punctuation"},"("),s("error"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("Contracts"),n("span",{class:"token punctuation"},"."),s("TITLE")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"查询云解析失败,"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"msg"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token return-type class-name"},[s("AddDomainRecordResponse"),n("span",{class:"token punctuation"},"?")]),s(),n("span",{class:"token function"},"AddDns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Client"),s(" client"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" newIp"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" domain "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEBUG_ALIBABA_DOMAIN"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"int")]),s(" ttl "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_REQUEST_TTL"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//参数"),s(`
    `),n("span",{class:"token class-name"},"AddDomainRecordRequest"),s(" addDomainRecordRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"AddDomainRecordRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        DomainName `),n("span",{class:"token operator"},"="),s(" domain"),n("span",{class:"token punctuation"},","),n("span",{class:"token comment"},"//域名名称"),s(`
        RR `),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_REQUEST_RR"),n("span",{class:"token punctuation"},","),n("span",{class:"token comment"},"//主机记录"),s(`
        Type `),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_REQUEST_TYPE_4"),n("span",{class:"token punctuation"},","),n("span",{class:"token comment"},"//解析记录类型"),s(`
        Value `),n("span",{class:"token operator"},"="),s(" newIp"),n("span",{class:"token punctuation"},","),n("span",{class:"token comment"},"//记录值"),s(`
        TTL `),n("span",{class:"token operator"},"="),s(` ttl
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//运行时高级配置"),s(`
    `),n("span",{class:"token class-name"},"RuntimeOptions"),s(" runtime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"RuntimeOptions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"try"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 复制代码运行请自行打印 API 的返回值"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddDomainRecordWithOptions"),n("span",{class:"token punctuation"},"("),s("addDomainRecordRequest"),n("span",{class:"token punctuation"},","),s(" runtime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" response"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TeaException"),s(" error"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 如有需要，请打印 error"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" msg "),n("span",{class:"token operator"},"="),s(" Common"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AssertAsString"),n("span",{class:"token punctuation"},"("),s("error"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("Contracts"),n("span",{class:"token punctuation"},"."),s("TITLE")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"新增云解析失败,"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"msg"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" _error"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"TeaException"),s(" error "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"TeaException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("Dictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(`
                `),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),s(" _error"),n("span",{class:"token punctuation"},"."),s("Message "),n("span",{class:"token punctuation"},"}"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 如有需要，请打印 error"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" msg "),n("span",{class:"token operator"},"="),s(" Common"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AssertAsString"),n("span",{class:"token punctuation"},"("),s("error"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("Contracts"),n("span",{class:"token punctuation"},"."),s("TITLE")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"新增云解析失败,"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"msg"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{class:"language-csharp"},[n("code",null,[n("span",{class:"token return-type class-name"},[s("UpdateDomainRecordResponse"),n("span",{class:"token punctuation"},"?")]),s(),n("span",{class:"token function"},"UpdateDns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Client"),s(" client"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" recordId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" newIp"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" RR "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_REQUEST_RR"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),s(" type "),n("span",{class:"token operator"},"="),s(" Contracts"),n("span",{class:"token punctuation"},"."),s("DEFAULT_ALIBABA_REQUEST_TYPE_4"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"UpdateDomainRecordRequest"),s(" updateDomainRecordRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"UpdateDomainRecordRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        RecordId `),n("span",{class:"token operator"},"="),s(" recordId"),n("span",{class:"token punctuation"},","),s(`
        RR `),n("span",{class:"token operator"},"="),s(" RR"),n("span",{class:"token punctuation"},","),s(`
        Type `),n("span",{class:"token operator"},"="),s(" type"),n("span",{class:"token punctuation"},","),s(`
        Value `),n("span",{class:"token operator"},"="),s(" newIp"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"RuntimeOptions"),s(" runtime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"RuntimeOptions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"try"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 复制代码运行请自行打印 API 的返回值"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" response "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"UpdateDomainRecordWithOptions"),n("span",{class:"token punctuation"},"("),s("updateDomainRecordRequest"),n("span",{class:"token punctuation"},","),s(" runtime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" response"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TeaException"),s(" error"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 如有需要，请打印 error"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" msg "),n("span",{class:"token operator"},"="),s(" Common"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AssertAsString"),n("span",{class:"token punctuation"},"("),s("error"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("Contracts"),n("span",{class:"token punctuation"},"."),s("TITLE")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"修改云解析失败,"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"msg"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" _error"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"TeaException"),s(" error "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},"TeaException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token constructor-invocation class-name"},[s("Dictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),s(`
                `),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token string"},'"message"'),n("span",{class:"token punctuation"},","),s(" _error"),n("span",{class:"token punctuation"},"."),s("Message "),n("span",{class:"token punctuation"},"}"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 如有需要，请打印 error"),s(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),s(" msg "),n("span",{class:"token operator"},"="),s(" Common"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AssertAsString"),n("span",{class:"token punctuation"},"("),s("error"),n("span",{class:"token punctuation"},"."),s("Message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        Console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"WriteLine"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("Contracts"),n("span",{class:"token punctuation"},"."),s("TITLE")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"修改云解析失败,"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"msg"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function W(K,j){const i=p("RouterLink"),t=p("ExternalLinkIcon"),u=p("Tabs");return k(),d("div",null,[n("p",null,[s("在"),a(i,{to:"/tools/nas/cloud.html#%E7%A7%81%E6%9C%89%E4%BA%91%E5%8A%A8%E6%80%81ip%E9%97%AE%E9%A2%98"},{default:e(()=>[s("NAS自动同步DDNS")]),_:1}),s("上使用的是"),v,s("，使用的是Go。")]),n("p",null,[s("作为一名普通的C#开发者，有必要自己来实现，以及顺便学习下Docker，"),n("a",b,[s("原代码地址"),a(t)]),s("。")]),g,n("ul",null,[n("li",null,[n("p",null,[n("a",y,[s("Dokcer"),a(t)])])]),n("li",null,[n("p",null,[n("a",h,[s("阿里云OPENAPI"),a(t)])])]),n("li",null,[n("p",null,[n("a",w,[s(".NET 微服务"),a(t)])])]),n("li",null,[n("p",null,[n("a",_,[s("Docker与.NET Core"),a(t)])])]),n("li",null,[n("p",null,[n("a",A,[s(".NET 官方镜像"),a(t)])])])]),R,n("p",null,[s("有很多种获取外网IP的方式，这里选用"),n("a",f,[s("ip-api"),a(t)]),s("，个人够用。")]),E,n("p",null,[n("a",D,[s("测试当前公网IP"),a(t)])]),I,n("p",null,[s("使用"),n("a",x,[s("Environment.GetEnvironmentVariable"),a(t)]),s("获取环境变量")]),T,C,n("div",L,[S,n("ol",null,[q,n("li",null,[s("通过"),n("a",U,[s("Environment.SetEnvironmentVariable"),a(t)]),s("配合"),N,s("条件编译设置环境变量")])])]),O,a(u,{id:"138",data:[{id:"客户端"},{id:"查询云解析记录"},{id:"新增云解析记录"},{id:"更新云解析记录"}]},{title0:e(({value:o,isActive:c})=>[s("客户端")]),title1:e(({value:o,isActive:c})=>[s("查询云解析记录")]),title2:e(({value:o,isActive:c})=>[s("新增云解析记录")]),title3:e(({value:o,isActive:c})=>[s("更新云解析记录")]),tab0:e(({value:o,isActive:c})=>[B]),tab1:e(({value:o,isActive:c})=>[M]),tab2:e(({value:o,isActive:c})=>[P]),tab3:e(({value:o,isActive:c})=>[F]),_:1})])}const $=r(m,[["render",W],["__file","aliyun-ddns.html.vue"]]);export{$ as default};
