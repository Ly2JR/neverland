<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://ilyl.life/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://ilyl.life/rss.xml" rel="self" type="application/rss+xml"/>
    <title>乌龙茶有点甜</title>
    <link>https://ilyl.life/</link>
    <description>乌龙茶有点甜的博客</description>
    <language>zh-CN</language>
    <pubDate>Sun, 04 Feb 2024 03:28:43 GMT</pubDate>
    <lastBuildDate>Sun, 04 Feb 2024 03:28:43 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>C#</category>
    <category>工具箱</category>
    <category>Signalr</category>
    <category>Task</category>
    <category>Web</category>
    <category>日志记录</category>
    <category>JWT</category>
    <category>打包</category>
    <category>讯飞</category>
    <category>DOCKER</category>
    <category>VB</category>
    <category>书籍</category>
    <category>用友</category>
    <item>
      <title>Border 边框</title>
      <link>https://ilyl.life/cs/wpf-theme/border.html</link>
      <guid>https://ilyl.life/cs/wpf-theme/border.html</guid>
      <source url="https://ilyl.life/rss.xml">Border 边框</source>
      <description>圆角 我们提供了以下几种圆角样式，以供选择。 RadiusRadius 另外提供AutoRoundRadius选择，根据高度自动计算 AutoRoundAutoRound 虚拟边框 使用BorderColor更改虚拟边框颜色 DashDash 阴影 提供了以下几种投影样式，以供选择。 ShadowShadow </description>
      <category>C#</category>
      <pubDate>Fri, 02 Feb 2024 05:05:17 GMT</pubDate>
      <content:encoded><![CDATA[<h2>圆角</h2>
<p>我们提供了以下几种圆角样式，以供选择。</p>
<table>
<thead>
<tr>
<th style="text-align:left">Radius</th>
<th style="text-align:left">Value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">No Radius</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">Small Radius</td>
<td style="text-align:left">2</td>
</tr>
<tr>
<td style="text-align:left">Large Radius</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">Round Radius</td>
<td style="text-align:left">20</td>
</tr>
</tbody>
</table>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/border/border-radius.png" alt="Radius" width="800" height="50" tabindex="0" loading="lazy"><figcaption>Radius</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>None<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Radius=None<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SmallRadius<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Radius=Small<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LargeRadius<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Radius=Large<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RoundRadius<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Radius=Round<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>另外提供<code>AutoRoundRadius</code>选择，根据高度自动计算</p>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/border/border-auto-radius.png" alt="AutoRound" width="200" height="80" tabindex="0" loading="lazy"><figcaption>AutoRound</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AutoRoundRadius<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
            <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
            <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Radius=AutoRound<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2>虚拟边框</h2>
<p>使用<code>BorderColor</code>更改虚拟边框颜色</p>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/border/border-dash.png" alt="Dash" width="400" height="50" tabindex="0" loading="lazy"><figcaption>Dash</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.IsDashed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsDashed=True<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.BorderColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.IsDashed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BorderColor=Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2>阴影</h2>
<p>提供了以下几种投影样式，以供选择。</p>
<table>
<thead>
<tr>
<th style="text-align:left">Shadow</th>
<th style="text-align:left">Value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Basic Shadow</td>
<td style="text-align:left">Basic</td>
</tr>
<tr>
<td style="text-align:left">Light  Shadow</td>
<td style="text-align:left">Light</td>
</tr>
<tr>
<td style="text-align:left">Lighter  Shadow</td>
<td style="text-align:left">Lighter</td>
</tr>
<tr>
<td style="text-align:left">Dark  Shadow</td>
<td style="text-align:left">Dark</td>
</tr>
</tbody>
</table>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/border/border-shadow.png" alt="Shadow" width="800" height="50" tabindex="0" loading="lazy"><figcaption>Shadow</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Shadow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Basic<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Shadow=Basic<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Shadow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Light<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Shadow=Light<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Shadow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Lighter<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Shadow=Lighter<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>BorderElementAttached.Shadow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Dark<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource BorderDefaultStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Shadow=Dark<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf-theme/border/border-radius.png =800x50" type="image/"/>
    </item>
    <item>
      <title>Binding</title>
      <link>https://ilyl.life/cs/wpf/binding.html</link>
      <guid>https://ilyl.life/cs/wpf/binding.html</guid>
      <source url="https://ilyl.life/rss.xml">Binding</source>
      <description>WPF中Binding随处可见,简化代码量，整理一些常用的示例供参考。 绑定控件 绑定控件值绑定控件值 TextBlock和TextBox的Text属性Binding到Slider控件的Value属性。Slider值变动，TextBlock和TextBox的值跟着变动。 更改TextBox的值,Slider控件值并没有跟着变动。 双向绑定控件值双向绑定...</description>
      <category>C#</category>
      <pubDate>Wed, 31 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>WPF中<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/data/?view=netdesktop-8.0" target="_blank" rel="noopener noreferrer">Binding</a>随处可见,简化代码量，整理一些常用的示例供参考。</p>
<h2>绑定控件</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Slider</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Slider<span class="token punctuation">"</span></span>
    <span class="token attr-name">Maximum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Minimum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Slider, Path=Value}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBox</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Slider, Path=Value}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding1.gif" alt="绑定控件值" width="200" height="200" tabindex="0" loading="lazy"><figcaption>绑定控件值</figcaption></figure>
<p><code>TextBlock</code>和<code>TextBox</code>的<code>Text</code>属性<code>Binding</code>到<code>Slider</code>控件的<code>Value</code>属性。<code>Slider</code>值变动，<code>TextBlock</code>和<code>TextBox</code>的值跟着变动。</p>
<p>更改<code>TextBox</code>的值,<code>Slider</code>控件值并没有跟着变动。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Slider</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Slider<span class="token punctuation">"</span></span>
    <span class="token attr-name">Maximum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Minimum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Slider, Path=Value}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBox</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Slider, Path=Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding2.gif" alt="双向绑定控件值" width="200" height="200" tabindex="0" loading="lazy"><figcaption>双向绑定控件值</figcaption></figure>
<p>当添加<code>Binding</code>的<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.binding.mode?view=windowsdesktop-8.0#system-windows-data-binding-mode" target="_blank" rel="noopener noreferrer">Mode</a>和<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.binding.updatesourcetrigger?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">UpdateSourceTrigger</a>属性时,实现了双向<code>Binding</code></p>
<h2>静态绑定</h2>
<div class="language-tip" data-ext="tip" data-title="tip"><pre class="language-tip"><code>xmlns:sys="clr-namespace:System;assembly=mscorlib"
</code></pre></div><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">sys:</span>String</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>测试数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">sys:</span>String</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span>
         <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ItemDemo<span class="token punctuation">"</span></span>
         <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span>
         <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>456<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertical<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Source={StaticResource demo}}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Source={StaticResource ItemDemo}, Path=Key}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Source={StaticResource ItemDemo}, Path=Value}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding3.png" alt="静态绑定" width="600" height="200" tabindex="0" loading="lazy"><figcaption>静态绑定</figcaption></figure>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.binding.source?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">Source</a>属性提供对象的绑定,一般用在静态,<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.binding.path?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">Path</a>绑定需要的对象属性值</p>
<h2>查找绑定</h2>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.relativesource?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">RelativeSource</a>用于没有设置<code>x:Name</code>的控件，常用于自定义模板。</p>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.relativesourcemode?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">FindAncestor</a>用于查找父元素，常与<code>AncestoryType</code>、<code>AncestorLevel</code>配合。</p>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/relativesource-markupextension?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">AncestorType</a>用于查找父元素类型</p>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.relativesource.ancestorlevel?view=windowsdesktop-8.0#system-windows-data-relativesource-ancestorlevel" target="_blank" rel="noopener noreferrer">AncestorLevel</a>当父元素存在多个相同的元素时，指定具体哪一个，默认0，从当前元素往上查找。</p>
<h3>绑定自身</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding4.png" alt="绑定自身" width="200" height="200" tabindex="0" loading="lazy"><figcaption>绑定自身</figcaption></figure>
<h3>绑定父元素</h3>
<p>查找绑定常用自定义控件，自定义模板常用套娃示例</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
     <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
     <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span>
     <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
         <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>140<span class="token punctuation">"</span></span>
         <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>140<span class="token punctuation">"</span></span>
         <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
             <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>
             <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>
             <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertical<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=Background}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}, Path=Background}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}, AncestorLevel=2}, Path=Background}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}, AncestorLevel=3}, Path=Background}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding5.png" alt="绑定父元素" width="200" height="200" tabindex="0" loading="lazy"><figcaption>绑定父元素</figcaption></figure>
<p><code>4行高亮</code>：查找的是<code>Button</code>所以值为<code>Orange</code>(<code>#FFFFA500</code>)</p>
<p><code>5行高亮</code>：查找的是<code>Border</code>,应该是<code>Red</code>(<code>#FFFF0000</code>),但实际值为<code>#FFFFA500</code>，分析<code>Button</code>控件样式，发现内置<code>Border</code></p>
<p><code>6行高亮</code>：查找的是<code>Button</code>，<code>AncestorLevel</code>为<code>2</code>,所以值为<code>Red</code>(<code>#FFFF0000</code>)</p>
<p><code>7行高亮</code>：查找的是<code>Button</code>，<code>AncestorLevel</code>为<code>3</code>,所以值为<code>Purple</code>(<code>#FF800080</code>)</p>
<h2>查找上一个数据</h2>
<p>还没有遇到使用场景...</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Array</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span> <span class="token attr-name">Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type vm:KeyValueItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>444<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>222<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>555<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>333<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>666<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>Array</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemsControl</span> <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource demo}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemsControl.ItemTemplate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertical<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Foreground</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Foreground</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=PreviousData}, Path=Key}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemsControl.ItemTemplate</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemsControl</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding6.png" alt="绑定上一个数据" width="200" height="200" tabindex="0" loading="lazy"><figcaption>绑定上一个数据</figcaption></figure>
<h2>绑定模板</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span>
    <span class="token attr-name">HorizontalContentAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
    <span class="token attr-name">VerticalContentAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
    <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>示例文本<span class="token punctuation">"</span></span>
    <span class="token attr-name">Foreground</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label.Style</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type Label}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type Label}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
                            <span class="token attr-name">Padding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
                            <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AliceBlue<span class="token punctuation">"</span></span>
                            <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Label}}, Path=BorderThickness}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding BorderBrush}<span class="token punctuation">"</span></span> <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding BorderThickness}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPresenter</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HorizontalContentAlignment}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Label.Style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Label</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding7.png" alt="模板绑定" width="200" height="200" tabindex="0" loading="lazy"><figcaption>模板绑定</figcaption></figure>
<p><code>第4行高亮</code>：设置了左右居中，重写了模板，20行处使用查找绑定<code>TemplatedParent</code>进行关联</p>
<p><code>第5行高亮</code>：设置了上下居中，重写了模板，但是没有任何关联，因此失效</p>
<p><code>第6、7行高亮</code>：设置<code>Label</code>的边框颜色和宽度,并使用<code>TemplateBinding</code>应用到了新模板上，18行代码处</p>
<p><code>第18行高亮</code>：使用使用查找绑定边框宽度，与<code>TemplateBinding</code>相比代码量高了很多</p>
<p><code>第19行高亮</code>：使用使用<code>TemplateBinding</code>绑定边框宽度，与<code>FindAncestor</code>相比代码少了很多</p>
<p><code>第20行高亮</code>：使用使用<code>TemplatedParent</code>绑定边框宽度，与<code>TemplateBinding</code>相比代码量多了一些，但是这才是原型，简化后就是<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/templatebinding-markup-extension?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">TemplateBinding</a></p>
<h2><a class="header-anchor" href="#converter"><span></span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/data/how-to-convert-bound-data?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">Converter</a></h2>
<p>能直接<code>bingding</code>数据的地方不多，除了重写模板，大部分都需要<code>Converter</code>进行数据转换处理。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Array</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span> <span class="token attr-name">Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type vm:KeyValueItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>Array</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertical<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Colors, Path=SelectedItem.Value}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListBox</span>
        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Colors<span class="token punctuation">"</span></span>
        <span class="token attr-name">DisplayMemberPath</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Key<span class="token punctuation">"</span></span>
        <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource demo}<span class="token punctuation">"</span></span>
        <span class="token attr-name">SelectedValuePath</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Value<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding8.gif" alt="转换器" width="200" height="200" tabindex="0" loading="lazy"><figcaption>转换器</figcaption></figure>
<p>这里直接能用<code>Red</code>来显示具体颜色，是系统自动做了处理，将颜色值改为数字,并添加转换器。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">converter:</span>ColorConverter</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ColorConverter<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Array</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span> <span class="token attr-name">Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type vm:KeyValueItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Unknow<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>000<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>222<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">vm:</span>KeyValueItem</span> <span class="token attr-name">Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>333<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>Array</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertical<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Colors, Path=SelectedItem.Value, Converter={StaticResource ColorConverter}}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=Colors, Path=SelectedItem.Value}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListBox</span>
         <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Colors<span class="token punctuation">"</span></span>
         <span class="token attr-name">DisplayMemberPath</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Key<span class="token punctuation">"</span></span>
         <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource demo}<span class="token punctuation">"</span></span>
         <span class="token attr-name">SelectedValuePath</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Value<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ColorConverter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IValueConverter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">Convert</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name">Type</span> targetType<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> parameter<span class="token punctuation">,</span> <span class="token class-name">CultureInfo</span> culture<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">string</span></span> color<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>color<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token string">"111"</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> Brushes<span class="token punctuation">.</span>Red<span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"222"</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> Brushes<span class="token punctuation">.</span>Orange<span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"333"</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> Brushes<span class="token punctuation">.</span>Purple<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Brushes<span class="token punctuation">.</span>Black<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">ConvertBack</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name">Type</span> targetType<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> parameter<span class="token punctuation">,</span> <span class="token class-name">CultureInfo</span> culture<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/binding/binding9.gif" alt="自定义转换器" width="200" height="200" tabindex="0" loading="lazy"><figcaption>自定义转换器</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>自定义转换器需要添加到<code>xmlns</code>声明上，才能在<code>XAML</code>里使用</p>
</div>
<p><code>第11行代码</code>：在绑定后加了一个<code>Converter</code>，将自定义转换器绑定上,根据选中的<code>Value</code>值转换成具体的颜色</p>
<p><code>第12行代码</code>：显示了选中的具体<code>Value</code>值，是无法显示颜色的，因此加上转换器进行转换。</p>
<h2><a class="header-anchor" href="#multibinding"><span></span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.multibinding?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">MultiBinding</a></h2>
<p>多重绑定常与转换器结合使用，将多个值转换为目标单一值。</p>
<p>具体示例可以参考<a href="/cs/wpf/static-button-auth.html" target="_blank">按钮权限</a></p>
<h2><a class="header-anchor" href="#imultivalueconverter"><span></span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.imultivalueconverter?view=windowsdesktop-8.0&amp;viewFallbackFrom=net-8.0" target="_blank" rel="noopener noreferrer">IMultiValueConverter</a></h2>
<p>存在<code>Binding</code>、<code>MultiBinding</code>、<code>IValueConverter</code>，那么肯定也存在<code>IMultiValueConverter</code>。</p>
<p>具体示例可以参考<a href="/cs/wpf/static-button-auth.html" target="_blank">按钮权限</a></p>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/binding/binding1.gif =200x200" type="image/"/>
    </item>
    <item>
      <title>旋转动画</title>
      <link>https://ilyl.life/cs/wpf/angle-animation.html</link>
      <guid>https://ilyl.life/cs/wpf/angle-animation.html</guid>
      <source url="https://ilyl.life/rss.xml">旋转动画</source>
      <description>在做主题控件时，涉及到了Loading加载控件，无从下手，本着学习的目的，参考了HandryOrg。 发现HC的Loading是通过代码方式实现，为了学习以及简化的目的，通过XAML方式一步一步梳理。 LoadingLoading 添加Canvas ClipToBounds裁剪多余的部分 添加圆点 如何让这个点进行圆形运动，并且各个点运动轨迹有重力感？...</description>
      <category>C#</category>
      <pubDate>Thu, 25 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在做主题控件时，涉及到了<code>Loading</code>加载控件，无从下手，本着学习的目的，参考了<a href="https://handyorg.github.io/handycontrol/extend_controls/loading/index.html" target="_blank" rel="noopener noreferrer">HandryOrg</a>。</p>
<p>发现HC的Loading是通过代码方式实现，为了学习以及简化的目的，通过XAML方式一步一步梳理。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-animation.gif" alt="Loading" width="200" height="200" tabindex="0" loading="lazy"><figcaption>Loading</figcaption></figure>
<h2><a class="header-anchor" href="#添加canvas"><span>添加</span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/controls/canvas?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">Canvas</a></h2>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.uielement.cliptobounds?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">ClipToBounds</a>裁剪多余的部分</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Canvas</span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span>
    <span class="token attr-name">ClipToBounds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Canvas</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2>添加圆点</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
    <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>如何让这个点进行圆形运动，并且各个点运动轨迹有重力感？</p>
<p>除了利用<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/graphics-multimedia/how-to-animate-an-object-along-a-path-double-animation?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">路径运动</a>。</p>
<p><code>HC</code>使用了<code>旋转</code>的方式，圆点不管怎么旋转还是圆点。</p>
<p>因此，在圆点外包装一层<code>Border</code>，设置<code>Border</code>大小与<code>Canvas</code>一致，设置<code>Ellipse</code>在<code>Border</code>中下方。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step1.png" alt="基本元素" width="200" height="200" tabindex="0" loading="lazy"><figcaption>基本元素</figcaption></figure>
<p>通过<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.uielement.rendertransformorigin?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">RenderTransformOrigin</a>属性设置旋转的中心点。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
     <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span>
     <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
         <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
         <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
         <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
         <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
         <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>通过<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/graphics-multimedia/transforms-overview?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">RenderTransform</a>属性设置旋转角度</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
     <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span>
     <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
         <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
         <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
         <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
         <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
         <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step2.png" alt="旋转30°" width="200" height="200" tabindex="0" loading="lazy"><figcaption>旋转30°</figcaption></figure>
<p>通过改变<code>Angle</code>的值,产生了让圆点按圆形运动的效果，并且WPF支持动画。</p>
<h2>匀速运动</h2>
<p>通过动画更改<code>Angle</code>的值，产生圆点运动的效果。</p>
<p>这里用到<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/graphics-multimedia/storyboards-overview?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">Storyboard</a>和<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/graphics-multimedia/how-to-animate-a-double-by-using-key-frames?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">DoubleAnimationUsingKeyFrames</a></p>
<p>因为要让圆点能产生重力感，就需要对关键帧的进行精确的控制。</p>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.media.animation.lineardoublekeyframe?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">LinearDoubleKeyFrame</a>让圆点按线性运动</p>
<p><code>Storyboard.TargetName="PART_Dot1"</code>：附加属性设置需要动画的目标元素</p>
<p><code>Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"</code>：附加属性设置目标元素下的具体属性</p>
<p><code>&lt;LinearDoubleKeyFrame KeyTime="0" Value="0" /&gt;</code>：设置在<code>0</code>秒时,圆点的<code>Angle</code>的角度为<code>0</code></p>
<p><code>&lt;LinearDoubleKeyFrame KeyTime="00:00:4" Value="720" /&gt;</code>：设置在<code>4</code>秒时,圆点的<code>Angle</code>的角度为<code>720</code></p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step3.gif" alt="旋转动画" width="200" height="200" tabindex="0" loading="lazy"><figcaption>旋转动画</figcaption></figure>
<p>按照第一个点，在添加其他4个点，并且设置每个点的初始角度。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Purple<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot2<span class="token punctuation">"</span></span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Blue<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-20<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot3<span class="token punctuation">"</span></span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Green<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-40<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Yellow<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot4<span class="token punctuation">"</span></span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orange<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-60<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Green<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot5<span class="token punctuation">"</span></span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-80<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Blue<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step4.png" alt="其余圆点" width="200" height="200" tabindex="0" loading="lazy"><figcaption>其余圆点</figcaption></figure>
<p>按上面步骤设置每个点的动画。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step5.gif" alt="圆点运动" width="200" height="200" tabindex="0" loading="lazy"><figcaption>圆点运动</figcaption></figure>
<h3>初具成效</h3>
<p>移除每个<code>Border</code>的边框及颜色，设置<code>Canvas</code>的<code>ClipToBounds</code>为<code>True</code></p>
<p>因此要对每个圆点的动画进行微调，设置每个圆点动画在零时的角度与初始角度一致</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot2<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-20<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot3<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-40<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot4<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-60<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot5<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-80<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step6.gif" alt="初具效果" width="200" height="200" tabindex="0" loading="lazy"><figcaption>初具效果</figcaption></figure>
<p>发现在运动一段时间后，圆点重叠了，虽然每个点的动画在起时时角度不一样，但是在终止时间4秒的角度都是<code>720</code>度。</p>
<p>因此需要调整每个圆点在<code>4</code>秒时的角度，设置<code>RepeatBehavior</code>为<code>Forever</code>,这样动画开始点与结束点形成完整闭环并重复运行</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot2<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-20<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>700<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot3<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-40<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>680<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot4<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-60<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>660<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot5<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-80<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>640<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step7.gif" alt="优化后" width="200" height="200" tabindex="0" loading="lazy"><figcaption>优化后</figcaption></figure>
<h2>加减速运动</h2>
<p>在初期动画中，设置了圆点动画在<code>4秒</code>的时间线性转动<code>720度</code>。</p>
<p>因此进一步的细分，并添加<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/graphics-multimedia/easing-functions?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">EasingDoubleKeyFrame</a>实现缓动动画，并且利用<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.media.animation.powerease?view=windowsdesktop-8.0" target="_blank" rel="noopener noreferrer">PowerEase</a>实现加速与减速效果。</p>
<p>圆点起点在下方，顺时针运动。</p>
<p><code>0秒</code>:圆点角度为<code>0°</code>。即0秒时圆点在正下方0°方向</p>
<p><code>0.4秒</code>:圆点角度为<code>180°</code>。即在0.4秒时在0°方向从下往上顺时针减速运动到在正上方180°方向</p>
<p><code>1.6秒</code>:圆点角度为<code>220°</code>。即在1.4秒时在正上方180°方向线性运动到右上方220°方向</p>
<p><code>2秒</code>:圆点角度为<code>360°</code>。即在2秒时在右上方220°方向顺时针加速运动到正下方0°方向</p>
<p><code>2.4秒</code>:圆点角度为<code>540°</code>。即在2.4秒时，第二圈开始，在0°方向从下往上顺时针减速运动到在正上方180°方向</p>
<p><code>3.6秒</code>:圆点角度为<code>580°</code>。即在3.6秒时，第二圈开始，在正上方180°方向线性运动到右上方220°方向</p>
<p><code>4秒</code>:圆点角度为<code>720°</code>。即在4秒时，第二圈开始，在右上方220°方向顺时针加速运动到正下方0°方向</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
     <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:0.4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseOut<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:1.6<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>220<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:2<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>360<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseIn<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:2.4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>540<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseOut<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:3.6<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>580<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseIn<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>其他四个点也是一样设置，注意每个原点的角度。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step8.gif" alt="加减速运动" width="200" height="200" tabindex="0" loading="lazy"><figcaption>加减速运动</figcaption></figure>
<h3>设置启动时间</h3>
<p>虽然所有圆点的角度不一样，但是所有的动画开始时间一致。</p>
<p>因此正对每个圆点添加启动时间，最前面的先启动,每个圆点运动间隔<code>0.12秒</code></p>
<p><code>圆点1</code>:启动时间<code>0秒</code></p>
<p><code>圆点2</code>:启动时间<code>0.12秒</code></p>
<p><code>圆点3</code>:启动时间<code>0.24秒</code></p>
<p><code>圆点4</code>:启动时间<code>0.36秒</code></p>
<p><code>圆点5</code>:启动时间<code>0.48秒</code></p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
    <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Dot2<span class="token punctuation">"</span></span>
    <span class="token attr-name">BeginTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:0.12<span class="token punctuation">"</span></span>
    <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot2<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-20<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:0.4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseOut<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:1.6<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:2<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>340<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseIn<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:2.4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>520<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseOut<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:3.6<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>560<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>700<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseIn<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step9.gif" alt="先后加减速运动" width="200" height="200" tabindex="0" loading="lazy"><figcaption>先后加减速运动</figcaption></figure>
<h3>关键帧动画</h3>
<p>通过<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/graphics-multimedia/how-to-animate-an-object-by-using-key-frames?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">ObjectAnimationUsingKeyFrames</a>对元素对象进行动画处理。</p>
<p>之前动画是在<code>4秒</code>内运动两圈，因此继续添加动画效果,由于不显示圆点，相当于吞噬效果，因此所有点的<code>隐藏</code>、<code>显示</code>、<code>隐藏时间</code>都相同</p>
<p><code>0.12秒</code>：圆点显示</p>
<p><code>4秒</code>：圆点不显示,即运动两圈后隐藏</p>
<p><code>4.4秒</code>：圆点不显示,即运动两圈后隐藏<code>0.4</code>秒</p>
<p>设置所有圆点初始状态隐藏</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
     <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot3<span class="token punctuation">"</span></span>
     <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">Visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Collapsed<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-40<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
         <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
         <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
         <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
         <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
         <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Yellow<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ObjectAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot3<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.Visibility)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:0.12<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Visibility</span><span class="token punctuation">&gt;</span></span>Visible<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Visibility</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Visibility</span><span class="token punctuation">&gt;</span></span>Collapsed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Visibility</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4.4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Visibility</span><span class="token punctuation">&gt;</span></span>Collapsed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Visibility</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ObjectAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/controls/loading/loading-step10.gif" alt="运动动画" width="200" height="200" tabindex="0" loading="lazy"><figcaption>运动动画</figcaption></figure>
<h2>完整示例</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl</span> <span class="token attr-name">...</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span>
            <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Dot1<span class="token punctuation">"</span></span>
            <span class="token attr-name">BeginTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:00<span class="token punctuation">"</span></span>
            <span class="token attr-name">RepeatBehavior</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Forever<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:0.4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseOut<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:1.6<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>220<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:2<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>360<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseIn<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:2.4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>540<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseOut<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:3.6<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>580<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PowerEase</span> <span class="token attr-name">EasingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EaseIn<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame.EasingFunction</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EasingDoubleKeyFrame</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DoubleAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ObjectAnimationUsingKeyFrames</span> <span class="token attr-name">Storyboard.TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(UIElement.Visibility)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:0.12<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Visibility</span><span class="token punctuation">&gt;</span></span>Visible<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Visibility</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Visibility</span><span class="token punctuation">&gt;</span></span>Collapsed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Visibility</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame</span> <span class="token attr-name">KeyTime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>00:00:4.36<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Visibility</span><span class="token punctuation">&gt;</span></span>Collapsed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Visibility</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame.Value</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DiscreteObjectKeyFrame</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ObjectAnimationUsingKeyFrames</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--其他四个动画--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Canvas</span>
        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Container<span class="token punctuation">"</span></span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
        <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span>
        <span class="token attr-name">ClipToBounds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
            <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1<span class="token punctuation">"</span></span>
            <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
            <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
            <span class="token attr-name">Visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Collapsed<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Point</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransformOrigin</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ellipse</span>
                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
                <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
                <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bottom<span class="token punctuation">"</span></span>
                <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--其他四个点--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Canvas.Triggers</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EventTrigger</span> <span class="token attr-name">RoutedEvent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Loaded<span class="token punctuation">"</span></span> <span class="token attr-name">SourceName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1Storyboard<span class="token punctuation">"</span></span> <span class="token attr-name">Storyboard</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource Dot1}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EventTrigger</span> <span class="token attr-name">RoutedEvent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Unloaded<span class="token punctuation">"</span></span> <span class="token attr-name">SourceName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StopStoryboard</span> <span class="token attr-name">BeginStoryboardName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Dot1Storyboard<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Canvas.Triggers</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Canvas</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2>小结</h2>
<p>使用XAML实现动画效果，但存在很多代码重复。</p>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/controls/loading/loading-animation.gif =200x200" type="image/"/>
    </item>
    <item>
      <title>透明度动画</title>
      <link>https://ilyl.life/cs/wpf/opacity-animation.html</link>
      <guid>https://ilyl.life/cs/wpf/opacity-animation.html</guid>
      <source url="https://ilyl.life/rss.xml">透明度动画</source>
      <description>WPF可以样式里添加触发器和动画，实现更好的效果。 以Image鼠标移动和移除效果为例 </description>
      <category>C#</category>
      <pubDate>Thu, 19 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>WPF可以样式里添加触发器和动画，实现更好的效果。</p>
<p>以Image鼠标移动和移除效果为例</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>32<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>32<span class="token punctuation">"</span></span>
        <span class="token attr-name">Panel.ZIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span>
        <span class="token attr-name">Cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span>
        <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pack://application:,,,/XXX;component/Resources/Logo.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image.Style</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type Image}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style.Setters</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Opacity<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.3<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style.Setters</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsMouseOver<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger.EnterActions</span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimation</span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Opacity<span class="token punctuation">"</span></span>
                                                  <span class="token attr-name">To</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                                                  <span class="token attr-name">Duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0:0:1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger.EnterActions</span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger.ExitActions</span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DoubleAnimation</span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Opacity<span class="token punctuation">"</span></span>
                                                  <span class="token attr-name">To</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.25<span class="token punctuation">"</span></span>
                                                  <span class="token attr-name">Duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0:0:1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger.ExitActions</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Image.Style</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Image</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>Github无法访问</title>
      <link>https://ilyl.life/tools/github/</link>
      <guid>https://ilyl.life/tools/github/</guid>
      <source url="https://ilyl.life/rss.xml">Github无法访问</source>
      <description> 浏览器打开https://sites.ipaddress.com/github.com/ 往下浏览到DNS Resource Records部分，显示 打开hosts文件,路径C:\Windows\System32\drivers\etc\hosts 在结尾处添加github dns映射,并保存 注意 提示没有权限或者错误时 右击属性\安全\添加当前...</description>
      <category>工具箱</category>
      <pubDate>Fri, 19 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<ol>
<li>
<p>浏览器打开<a href="https://sites.ipaddress.com/github.com/" target="_blank" rel="noopener noreferrer">https://sites.ipaddress.com/github.com/</a></p>
</li>
<li>
<p>往下浏览到<code>DNS Resource Records</code>部分，显示</p>
<div class="language-txt" data-ext="txt" data-title="txt"><pre class="language-txt"><code>github.com IN A 140.82.112.3
</code></pre></div></li>
<li>
<p>打开<code>hosts</code>文件,路径<code>C:\Windows\System32\drivers\etc\hosts</code></p>
</li>
<li>
<p>在结尾处添加<code>github</code> dns映射,并保存</p>
<div class="language-txt" data-ext="txt" data-title="txt"><pre class="language-txt"><code># github
140.82.112.3 github.com
</code></pre></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>提示没有权限或者错误时</p>
<p>右击属性\安全\添加当前角色</p>
</div>
</li>
<li>
<p>打开<code>cmd</code>，运行<code>ipconfg/flushdns</code></p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>vs2017u5 exists,deleting.</title>
      <link>https://ilyl.life/tools/csharp/docker-debug.html</link>
      <guid>https://ilyl.life/tools/csharp/docker-debug.html</guid>
      <source url="https://ilyl.life/rss.xml">vs2017u5 exists,deleting.</source>
      <description>VS进行Docker调试时，半天卡住不动，查看日志显示 解决方法 下载文件vsdbg-linux-x64.zip，替换自动的版本号 链接：https://vsdebugger.azureedge.net/vsdbg-17-8-11212-2/vsdbg-linux-x64.zip 下载文件vsdbg-linux-musl-x64，替换自动的版本号 链接...</description>
      <category>工具箱</category>
      <pubDate>Tue, 16 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>VS进行Docker调试时，半天卡住不动，查看日志显示</p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>&gt;Info: Using vsdbg version '17.8.11212.2'
&gt;Info: Using Runtime ID 'linux-x64'
&gt;Info: c:\用户\admin\vsdbg\vs2017u5 exists,deleting.
</code></pre></div><h2>解决方法</h2>
<ol>
<li>
<p>下载文件<code>vsdbg-linux-x64.zip</code>，替换自动的版本号</p>
<p>链接：<code>https://vsdebugger.azureedge.net/vsdbg-17-8-11212-2/vsdbg-linux-x64.zip</code></p>
</li>
<li>
<p>下载文件<code>vsdbg-linux-musl-x64</code>，替换自动的版本号</p>
<p>链接<code>https://vsdebugger.azureedge.net/vsdbg-17-8-11212-2/vsdbg-linux-musl-x64.zip</code></p>
</li>
<li>
<p>打开<code>vsdbg</code>目录,新建<code>vs2017u5</code>文件夹</p>
</li>
<li>
<p>将<code>vsdbg-linux-x64.zip</code>解压到<code>vs2017u5</code>文件夹下</p>
</li>
<li>
<p>将<code>vsdbg-linux-musl-x64.zip</code>解压到<code>vs2017u5/linux-musl-x64</code>文件夹下</p>
</li>
<li>
<p>重启VS</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Button 按钮</title>
      <link>https://ilyl.life/cs/wpf-theme/button.html</link>
      <guid>https://ilyl.life/cs/wpf-theme/button.html</guid>
      <source url="https://ilyl.life/rss.xml">Button 按钮</source>
      <description>仿Element Plus的一款WPF主题控件。 提示 Button 按钮全局生效 常用的操作按钮 基础用法 使用type、isplain、isround 和 iscircle 来定义按钮的样式。 Type属性 type属性type属性 IsPlain属性 isplain属性isplain属性 IsRound属性 isround属性isround属性 ...</description>
      <category>C#</category>
      <pubDate>Fri, 12 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>仿<a href="https://element-plus.org/zh-CN/component/button.html" target="_blank" rel="noopener noreferrer">Element Plus</a>的一款WPF主题控件。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Button 按钮全局生效</p>
</div>
<p>常用的操作按钮</p>
<h2>基础用法</h2>
<p>使用<code>type</code>、<code>isplain</code>、<code>isround</code> 和 <code>iscircle</code> 来定义按钮的样式。</p>
<h3>Type属性</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-type.gif" alt="type属性" width="800" height="50" tabindex="0" loading="lazy"><figcaption>type属性</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h3>IsPlain属性</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-isplain.gif" alt="isplain属性" width="800" height="50" tabindex="0" loading="lazy"><figcaption>isplain属性</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsPlain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsPlain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsPlain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsPlain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsPlain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsPlain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h3>IsRound属性</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-isround.gif" alt="isround属性" width="800" height="50" tabindex="0" loading="lazy"><figcaption>isround属性</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h3>IsCircle属性</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-iscircle.gif" alt="iscircle属性" width="800" height="50" tabindex="0" loading="lazy"><figcaption>iscircle属性</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsRound</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2>禁用状态</h2>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p><code>IsEnabled</code>禁用时，鼠标的光标效果未实现，待解决</p>
</div>
<p>你可以使用原生的<code>IsEnabled</code>属性来定义按钮是否被禁用。</p>
<p>使用<code>IsEnabled</code>属性来控制按钮是否为禁用状态。 该属性接受一个 Boolean 类型的值。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-isenabled.gif" alt="isenabled属性" width="800" height="50" tabindex="0" loading="lazy"><figcaption>isenabled属性</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2>文字按钮</h2>
<h3>没有边框和背景色的按钮</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-istext.gif" alt="istext" width="800" height="50" tabindex="0" loading="lazy"><figcaption>istext</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h3>背景色总是存在</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-istext-background-always-on.gif" alt="istextbg" width="800" height="50" tabindex="0" loading="lazy"><figcaption>istextbg</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsTextBg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsTextBg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsTextBg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsTextBg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsTextBg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsTextBg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h3>禁用文本按钮</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-istext-disabled.gif" alt="IsEnabled" width="800" height="50" tabindex="0" loading="lazy"><figcaption>IsEnabled</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">IsEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2>图标按钮</h2>
<h3>图标</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-icon.gif" alt="icon" width="800" height="50" tabindex="0" loading="lazy"><figcaption>icon</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource query_icon}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource edit_icon}<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IconColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource right_icon}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource message_icon}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource star_icon}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource delete_icon}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h3>图标和文字</h3>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-icon-text.gif" alt="icon-text" width="800" height="50" tabindex="0" loading="lazy"><figcaption>icon-text</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource query_icon}<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource edit_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IconColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource right_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource message_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource star_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource delete_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2>调整尺寸</h2>
<p>除了默认的大小，按钮组件还提供了几种额外的尺寸可供选择，以便适配不同的场景。</p>
<p>使用 size 属性额外配置尺寸，可使用 large和small两种值</p>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-size.gif" alt="size" width="400" height="50" tabindex="0" loading="lazy"><figcaption>size</figcaption></figure>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-size2.gif" alt="size" width="800" height="50" tabindex="0" loading="lazy"><figcaption>size</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource query_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsCircle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Large<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource query_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsCircle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource query_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsCircle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Small<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource query_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Large<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource edit_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IconColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource right_icon}<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Small<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Large<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Small<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
         <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2>虚线边框</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf-theme/button/button-isdash.gif" alt="isdash" width="800" height="50" tabindex="0" loading="lazy"><figcaption>isdash</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsDash</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Default<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsDash</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsDash</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Success<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsDash</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Info<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsDash</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Warning<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.IsDash</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">nl:</span>ButtonElementAttached.Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span>
        <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Danger<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf-theme/button/button-type.gif =800x50" type="image/"/>
    </item>
    <item>
      <title>家庭影院</title>
      <link>https://ilyl.life/tools/nas/tv.html</link>
      <guid>https://ilyl.life/tools/nas/tv.html</guid>
      <source url="https://ilyl.life/rss.xml">家庭影院</source>
      <description>现在智能电视非常普及，但是很多频道需要收费，一种是需要开通IPTV，另外一种就是各个APP里的会员，但是其他端与TV端还不通用。 没钱的话就想办法自己搭建服务了。 以作为服务端，客户端使用Kodi 安装KODI 启用智能电视里的允许安装未知应用。 下载Kodi v21 (Omega)，选择ARMV7A (32BIT)，拷贝到U盘。 在TV端选择U盘，选...</description>
      <category>工具箱</category>
      <pubDate>Mon, 08 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>现在智能电视非常普及，但是很多频道需要收费，一种是需要开通IPTV，另外一种就是各个APP里的会员，但是其他端与TV端还不通用。</p>
<p>没钱的话就想办法自己搭建服务了。</p>
<p>以<a href="/tools/nas/plex.html" target="_blank">plex</a>作为服务端，客户端使用<a href="https://kodi.tv/" target="_blank" rel="noopener noreferrer">Kodi</a></p>
<h2>安装KODI</h2>
<p>启用智能电视里的<code>允许安装未知应用</code>。</p>
<p>下载<a href="https://kodi.tv/download/android/" target="_blank" rel="noopener noreferrer">Kodi v21 (Omega)</a>，选择<code>ARMV7A (32BIT)</code>，拷贝到U盘。</p>
<p>在TV端选择U盘，选择<code>Kodi</code>进行安装。</p>
<h2>配置Kodi中文</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果只有英文，没有<code>Chinese-Simple</code>供选择，请等待下载，稍后再试</p>
</div>
<p>坐上角中间配置按钮。</p>
<p>选择<code>Interface settings</code>。</p>
<p>选择<code>Skin</code>项，点击<code>Fonts</code>更改字体为<code>Arial based</code>，缺少这步直接设置中文会出现乱码。</p>
<p>选择<code>Regional</code>项，点击<code>Language</code>更改为<code>Chinese-Simple</code>。</p>
<p>选择<code>Regional</code>项，点击<code>Character set</code>更改为<code>GB2312</code>。</p>
<h2>安装Plex for kodi</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>直接在Kodi里搜索<code>plex</code>插件安装成功后，会出现无法启动的错误</p>
</div>
<p>安装<a href="https://github.com/pannal/plex-for-kodi/blob/master/README.md" target="_blank" rel="noopener noreferrer">pannal提供的plex插件</a></p>
<p>先安装<a href="https://pannal.github.io/dontpanickodi/" target="_blank" rel="noopener noreferrer">repository.dontpanic-0.2.6-1.zip</a></p>
<p>将<code>repository.dontpanic-0.2.6-1.zip</code>下载拷贝到U盘</p>
<p>打开Kodi，选择插件，找到从ZIP安装，选择<code>repository.dontpanic-0.2.6-1.zip</code></p>
<p><code>repository.dontpanic-0.2.6-1.zip</code>安装好之后，找到<code>repository.dontpanic-0.2.6-1.zip</code>插件，点击等待下载</p>
<p><code>dontpanic</code>下载完成，打开，从这里选择最新的plex安装即可。</p>
<h2>启动plex</h2>
<p>首次启动plex时，需要登录关联,电脑端打开<code>https://plex.tv/link</code>即可，输入电视端的4位验证码</p>
<h2>关于plex找不到电视节目问题</h2>
<p>查看<a href="https://support.plex.tv/articles/naming-and-organizing-your-movie-media-files/" target="_blank" rel="noopener noreferrer">命名规则</a></p>
<p>放在<code>/TV Shows</code>文件夹下,以最近的电视剧<code>繁华</code>第一集举例。</p>
<p><code>/TV Shows/繁华/繁华S01E01.mkv</code></p>
<p>在PLEX服务端添加媒体库，选择电视节目，选择<code>/TV Shows</code>目录。</p>
]]></content:encoded>
    </item>
    <item>
      <title>按钮组权限</title>
      <link>https://ilyl.life/cs/wpf/static-button-auth.html</link>
      <guid>https://ilyl.life/cs/wpf/static-button-auth.html</guid>
      <source url="https://ilyl.life/rss.xml">按钮组权限</source>
      <description>在WPF中按钮组常用，按钮组权限相应的也需要。 除了通过后台或者代码的方式实现之外，也可以使用转换器的方式实现，对于按钮不多的时候非常适用。 按钮权限切换按钮权限切换 以常见的操作按钮新增、修改、删除、保存、查询五个按钮为例。 区分按钮状态 首先区分这些按钮有哪几种状态，这里只有正常和编辑两种状态。 区分每种状态下的按钮状态 可用：蓝色边框 禁用：红色...</description>
      <category>C#</category>
      <pubDate>Wed, 03 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在WPF中按钮组常用，按钮组权限相应的也需要。</p>
<p>除了通过后台或者代码的方式实现之外，也可以使用转换器的方式实现，对于按钮不多的时候非常适用。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/button-group-auth.gif" alt="按钮权限切换" width="420" height="200" tabindex="0" loading="lazy"><figcaption>按钮权限切换</figcaption></figure>
<p>以常见的操作按钮<code>新增</code>、<code>修改</code>、<code>删除</code>、<code>保存</code>、<code>查询</code>五个按钮为例。</p>
<h3>区分按钮状态</h3>
<p>首先区分这些按钮有哪几种状态，这里只有<code>正常</code>和<code>编辑</code>两种状态。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ButtonGroupEnum</span>
<span class="token punctuation">{</span>
    Normal<span class="token punctuation">,</span>
    Edit<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3>区分每种状态下的按钮状态</h3>
<p>可用：蓝色边框
禁用：红色边框</p>
<ol>
<li>
<p>正常状态</p>
<p>可用： <code>新增</code>、<code>编辑</code>、<code>删除</code>、<code>查询</code>
禁用： <code>保存</code></p>
</li>
<li>
<p>编辑状态</p>
<p>可用： <code>保存</code>
禁用： <code>新增</code>、<code>编辑</code>、<code>删除</code>、<code>查询</code></p>
</li>
</ol>
<h3>设置按钮权限</h3>
<ol>
<li>
<p>设置按钮样式</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ButtonStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type Button}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Foreground<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#1371c3<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cursor<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HorizontalAlignment<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VerticalAlignment<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Margin<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5,0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type Button}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
                    <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Border<span class="token punctuation">"</span></span>
                    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>32<span class="token punctuation">"</span></span>
                    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>28<span class="token punctuation">"</span></span>
                    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#1371c3<span class="token punctuation">"</span></span>
                    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                    <span class="token attr-name">CornerRadius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPresenter</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding HorizontalAlignment}<span class="token punctuation">"</span></span> <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding VerticalAlignment}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Border<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BorderBrush<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TextElement.Foreground<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>设置按钮转换器</p>
<p>这里使用<code>IMultiValueConverter</code>进行转换，控制按钮的<code>IsEnabled</code>属性。</p>
<p>因为这里只有两种状态，需要三个参数：</p>
<p>第一个参数是当前按钮组的状态(<code>正常</code>或<code>编辑</code>)</p>
<p>第二个参数是当<code>正常</code>状态时，控制按钮的<code>IsEnabled</code>状态</p>
<p>第三个参数是当<code>编辑</code>状态时，控制按钮的<code>IsEnabled</code>状态</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ButtonGroupConverter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMultiValueConverter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">Convert</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> values<span class="token punctuation">,</span> <span class="token class-name">Type</span> targetType<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> parameter<span class="token punctuation">,</span> <span class="token class-name">CultureInfo</span> culture<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token class-name">ButtonGroupEnum</span> status<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">case</span> ButtonGroupEnum<span class="token punctuation">.</span>Normal<span class="token punctuation">:</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">string</span></span> normal<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>normal <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> ButtonGroupEnum<span class="token punctuation">.</span>Edit<span class="token punctuation">:</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">string</span></span> edit<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>edit <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token function">ConvertBack</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> targetTypes<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> parameter<span class="token punctuation">,</span> <span class="token class-name">CultureInfo</span> culture<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>设置按钮组对于的VM</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ButtonGroupViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ButtonGroupEnum</span> _status <span class="token operator">=</span> ButtonGroupEnum<span class="token punctuation">.</span>Normal<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ButtonGroupEnum</span> Status <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _status<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">set</span> <span class="token punctuation">{</span> _status <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">ICommand</span> ButtonRunCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">ButtonGroupViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ButtonRunCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RelayCommand<span class="token punctuation">&lt;</span>ButtonGroupEnum<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            Status <span class="token operator">=</span> status<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler<span class="token punctuation">?</span></span> PropertyChanged<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> propName<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PropertyChanged <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">PropertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span>propName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>应用按钮组并设置权限</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ButtonRunCommand}<span class="token punctuation">"</span></span>
        <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Static vm:ButtonGroupEnum.Edit}<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MultiBinding</span> <span class="token attr-name">Converter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonGroupConverter}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Status<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MultiBinding</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
        新增
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ButtonRunCommand}<span class="token punctuation">"</span></span>
        <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Static vm:ButtonGroupEnum.Normal}<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MultiBinding</span> <span class="token attr-name">Converter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonGroupConverter}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Status<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MultiBinding</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
        删除
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ButtonRunCommand}<span class="token punctuation">"</span></span>
        <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Static vm:ButtonGroupEnum.Edit}<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MultiBinding</span> <span class="token attr-name">Converter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonGroupConverter}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Status<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MultiBinding</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
        修改
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ButtonRunCommand}<span class="token punctuation">"</span></span>
        <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Static vm:ButtonGroupEnum.Normal}<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MultiBinding</span> <span class="token attr-name">Converter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonGroupConverter}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Status<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MultiBinding</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
        保存
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ButtonRunCommand}<span class="token punctuation">"</span></span>
        <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Static vm:ButtonGroupEnum.Normal}<span class="token punctuation">"</span></span>
        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonStyle}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MultiBinding</span> <span class="token attr-name">Converter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ButtonGroupConverter}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Status<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Binding</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MultiBinding</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.IsEnabled</span><span class="token punctuation">&gt;</span></span>
        查询
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
</ol>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/button-group-auth.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>自定义Checkbox</title>
      <link>https://ilyl.life/cs/wpf/checkbox.html</link>
      <guid>https://ilyl.life/cs/wpf/checkbox.html</guid>
      <source url="https://ilyl.life/rss.xml">自定义Checkbox</source>
      <description>自定义控件多种多样 改颜色 改颜色改颜色 这里使用两个Border来实现Checkbox的外观和选中的效果 最外层的Border样式 最里层的&amp;quot;√&amp;quot;也是使用Border,并对它进行旋转 模板样式 Checkbox最终重写模板 </description>
      <category>工具箱</category>
      <pubDate>Wed, 08 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>自定义控件多种多样</p>
<h2>改颜色</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/controls/checkbox1.gif" alt="改颜色" tabindex="0" loading="lazy"><figcaption>改颜色</figcaption></figure>
<p>这里使用两个Border来实现Checkbox的外观和选中的效果</p>
<p>最外层的Border样式</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
     <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span>
     <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span>
     <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
     <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#4F9BFF<span class="token punctuation">"</span></span>
     <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#4F9BFF<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>最里层的"√"也是使用Border,并对它进行旋转</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,2,2,0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>130<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TranslateTransform</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>模板样式</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span>
    <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span>
    <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
    <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#4F9BFF<span class="token punctuation">"</span></span>
    <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#4F9BFF<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
        <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
        <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,2,2,0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>130<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TranslateTransform</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Checkbox最终重写模板</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox.Style</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type CheckBox}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Width<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Height<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cursor<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CheckBox<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
                            <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_BORDER<span class="token punctuation">"</span></span>
                            <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding Width}<span class="token punctuation">"</span></span>
                            <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding Height}<span class="token punctuation">"</span></span>
                            <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
                            <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#4F9BFF<span class="token punctuation">"</span></span>
                            <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
                                <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_SELECTED<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
                                <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
                                <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,2,2,0<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Collapsed<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>130<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TranslateTransform</span> <span class="token attr-name">X</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Path=Width, ElementName=PART_SELECTED}<span class="token punctuation">"</span></span> <span class="token attr-name">Y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TransformGroup</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.RenderTransform</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsChecked<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_BORDER<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Background<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#4F9BFF<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_BORDER<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BorderThickness<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_SELECTED<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visibility<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visible<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CheckBox.Style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CheckBox</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/controls/checkbox1.gif" type="image/gif"/>
    </item>
    <item>
      <title>自定义控件TreeView</title>
      <link>https://ilyl.life/cs/wpf/teeview.html</link>
      <guid>https://ilyl.life/cs/wpf/teeview.html</guid>
      <source url="https://ilyl.life/rss.xml">自定义控件TreeView</source>
      <description>自带的TreeView没有Checkbox，需要自定义设计实现效果 自定义TreeView自定义TreeView 定义模型 定义需要显示的数据ViewModel 定义CheckBox点击事件Command 定义TreeView中的VM 定义样式 定义TreeViewItem显示样式 使用HierarchicalDataTemplate进行数据迭代 自定...</description>
      <category>C#</category>
      <pubDate>Tue, 02 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>自带的TreeView没有Checkbox，需要自定义设计实现效果</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/treeview.gif" alt="自定义TreeView" width="240" height="280" tabindex="0" loading="lazy"><figcaption>自定义TreeView</figcaption></figure>
<h2>定义模型</h2>
<h3>定义需要显示的数据<code>ViewModel</code></h3>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeItemViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> required <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Visibility</span> HasPath <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> Visibility<span class="token punctuation">.</span>Collapsed<span class="token punctuation">;</span> <span class="token keyword">return</span> Visibility<span class="token punctuation">.</span>Visible<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> _isChecked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsChecked <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _isChecked<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">set</span> <span class="token punctuation">{</span> _isChecked <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>IsChecked<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">TreeItemViewModel<span class="token punctuation">?</span></span> Parent <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>TreeItemViewModel<span class="token punctuation">&gt;</span><span class="token punctuation">?</span></span> Children <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler<span class="token punctuation">?</span></span> PropertyChanged<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> propName<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PropertyChanged <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">PropertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span>propName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3>定义CheckBox点击事件Command</h3>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RelayCommand<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICommand</span></span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">class</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> _execute<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Func<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> _canExecute<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">RelayCommand</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> execute<span class="token punctuation">,</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> canExecute<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>execute<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>execute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        _execute <span class="token operator">=</span> execute<span class="token punctuation">;</span>
        _canExecute <span class="token operator">=</span> canExecute<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">EventHandler<span class="token punctuation">?</span></span> CanExecuteChanged<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _canExecute <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token function">_canExecute</span><span class="token punctuation">(</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">_execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3>定义TreeView中的VM</h3>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeViewModel</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">ObservableCollection<span class="token punctuation">&lt;</span>TreeItemViewModel<span class="token punctuation">&gt;</span></span> ProductList <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">ICommand</span> CheckedCommand <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span></span> MAX <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">TreeViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        CheckedCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RelayCommand<span class="token punctuation">&lt;</span>TreeItemViewModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> checkedCount<span class="token operator">=</span>  ProductList<span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Children<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Parent <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> it<span class="token punctuation">.</span>IsChecked <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> reamin <span class="token operator">=</span> MAX <span class="token operator">-</span> checkedCount<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>Parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>Children <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>Children<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> reamin<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            vm<span class="token punctuation">.</span>Children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>IsChecked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> allChecked <span class="token operator">=</span> vm<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>IsChecked <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>allChecked<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        vm<span class="token punctuation">.</span>IsChecked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        vm<span class="token punctuation">.</span>IsChecked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> allChecked <span class="token operator">=</span> vm<span class="token punctuation">.</span>Parent<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>IsChecked <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>allChecked<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    vm<span class="token punctuation">.</span>Parent<span class="token punctuation">.</span>IsChecked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    vm<span class="token punctuation">.</span>Parent<span class="token punctuation">.</span>IsChecked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>checkedCount <span class="token operator">&gt;</span> MAX<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                vm<span class="token punctuation">.</span>IsChecked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"最多选</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">MAX</span><span class="token punctuation">}</span></span><span class="token string">个"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ProductList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span>TreeItemViewModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> parent0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">,</span> Parent <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        parent0<span class="token punctuation">.</span>Children <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>TreeItemViewModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"01"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent0<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"02"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent0<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"03"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent0<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"04"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent0<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> parent1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        parent1<span class="token punctuation">.</span>Children <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>TreeItemViewModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"11"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"12"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"13"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"14"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"15"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"16"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"17"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"18"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeItemViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Name<span class="token operator">=</span><span class="token string">"19"</span><span class="token punctuation">,</span>Parent<span class="token operator">=</span>parent1<span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
        ProductList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>parent0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ProductList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>parent1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>定义样式</h2>
<h3>定义TreeViewItem显示样式</h3>
<p>使用<code>HierarchicalDataTemplate</code>进行数据迭代</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HierarchicalDataTemplate</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TreeItemTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Children}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span>
            <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
            <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
            <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding DataContext.CheckedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}<span class="token punctuation">"</span></span>
            <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding}<span class="token punctuation">"</span></span>
            <span class="token attr-name">IsChecked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding IsChecked}<span class="token punctuation">"</span></span>
            <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource CheckBoxStyle}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Path</span>
            <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>26<span class="token punctuation">"</span></span>
            <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>
            <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
            <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
            <span class="token attr-name">Opacity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.65<span class="token punctuation">"</span></span>
            <span class="token attr-name">Stretch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Uniform<span class="token punctuation">"</span></span>
            <span class="token attr-name">Visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding HasPath}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Path.Data</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PathGeometry</span> <span class="token attr-name">Figures</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M1024.2 480L861.9 710c-9.3 13.2-21.5 23.7-35.4 30.9-13.9 7.2-29.5 11.1-45.7 11.1-18.7 0-37-5.3-52.8-15.2L98.4 341.5C87.8 334.8 79.2 325.6 73.3 315c-5.9-10.7-9.1-22.8-9.1-35.3 0-15.3 4.8-30.3 13.8-42.8l117.6-163c9.3-12.9 21.4-23.1 35.1-30.1 13.7-7 29.1-10.8 45-10.8 18.4 0 36.4 5.1 52.1 14.8L1024.2 480zM754.1 768c-11.1 0-22-1.5-32.6-4.5-10.6-3-20.7-7.4-30.2-13.2l-611.8-373c-6.7-4.1-15.3 0.7-15.3 8.6v22.6c0 14.6 7.6 28.2 20 35.8l182.5 112.3C241.2 572 224.2 600 224.2 632c0 20.2 6.8 38.8 18.3 53.7a62.518 62.518 0 0 1-44.2 18.3H64.2v-46.8c0-29-19.5-54.4-47.6-61.9L0.2 591l-0.2 369 28.8-14.3c21.7-10.8 35.5-33 35.5-57.3V768h135.5c25.9 0 50.8-10.3 69.2-28.7l3.1-3.1c10.6-10.6 25-16.3 40-16.3h0.2c46.4 0 84.4-35.9 87.8-81.4L674.2 807.2c9.2 5.7 19.9 8.7 30.7 8.7 9.8 0 19.3-2.5 27.7-6.9 8.4-4.5 15.7-11 21.1-19.2l6.8-10.1c3.2-5-0.4-11.7-6.4-11.7zM312.2 656c-13.2 0-24-10.8-24-24s10.8-24 24-24 24 10.8 24 24-10.8 24-24 24z<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Path.Data</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Path</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span>
            <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
            <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
            <span class="token attr-name">Foreground</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
            <span class="token attr-name">Opacity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.65<span class="token punctuation">"</span></span>
            <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Name}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HierarchicalDataTemplate</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>自定义Checkbox样式</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CheckBoxStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type CheckBox}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BorderThickness<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Padding<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cursor<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HorizontalAlignment<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cursor<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type CheckBox}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">SnapsToDevicePixels</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
                        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Border<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Transparent<span class="token punctuation">"</span></span>
                        <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding BorderBrush}<span class="token punctuation">"</span></span>
                        <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding BorderThickness}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Path</span>
                                <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Checked<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 2,8 L 7,13 14,2<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding BorderBrush}<span class="token punctuation">"</span></span>
                                <span class="token attr-name">StrokeThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Collapsed<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span>
                                <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Rect<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding BorderBrush}<span class="token punctuation">"</span></span>
                                <span class="token attr-name">RadiusX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
                                <span class="token attr-name">RadiusY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
                                <span class="token attr-name">Visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Collapsed<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPresenter</span>
                        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding Padding}<span class="token punctuation">"</span></span>
                        <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding HorizontalContentAlignment}<span class="token punctuation">"</span></span>
                        <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding VerticalContentAlignment}<span class="token punctuation">"</span></span>
                        <span class="token attr-name">RecognizesAccessKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
                        <span class="token attr-name">SnapsToDevicePixels</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{TemplateBinding SnapsToDevicePixels}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsChecked<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Checked<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visibility<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visible<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Border<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Background<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#1890FF<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Border<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BorderBrush<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#1890FF<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Checked<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Stroke<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsChecked<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Null}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Rect<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visibility<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visible<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HasContent<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Padding<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4,0,0,0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>定义Treeview左边三角形</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ExpandCollapseToggleStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type ToggleButton}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Focusable<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cursor<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VerticalAlignment<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type ToggleButton}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Transparent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Path</span>
                        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Expand<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M0,0 L0,8 L8,0<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Opacity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.65<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>White<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Path.RenderTransform</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>135<span class="token punctuation">"</span></span> <span class="token attr-name">CenterX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">CenterY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Path.RenderTransform</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Path</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsChecked<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Expand<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RenderTransform<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RotateTransform</span> <span class="token attr-name">Angle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span> <span class="token attr-name">CenterX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">CenterY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>定义TreeViewItem样式</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TreeItemStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type TreeViewItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type TreeViewItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.RowDefinitions</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.RowDefinitions</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToggleButton</span>
                        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Expander<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
                        <span class="token attr-name">ClickMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Press<span class="token punctuation">"</span></span>
                        <span class="token attr-name">IsChecked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource ExpandCollapseToggleStyle}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
                        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Border<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5,0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPresenter</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Header<span class="token punctuation">"</span></span> <span class="token attr-name">ContentSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Header<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemsPresenter</span>
                        <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ItemsHost<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                        <span class="token attr-name">Grid.ColumnSpan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsExpanded<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ItemsHost<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visibility<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Collapsed<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HasItems<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_Expander<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Visibility<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hidden<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>定义TreeView样式</h3>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TreeStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type TreeView}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Background<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Transparent<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ItemsPanel<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemsPanelTemplate</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VirtualizingStackPanel</span>
                    <span class="token attr-name">IsItemsHost</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
                    <span class="token attr-name">IsVirtualizing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
                    <span class="token attr-name">VirtualizationMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Recycling<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemsPanelTemplate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2>用户控件使用</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TreeView</span>
    <span class="token attr-name">ItemContainerStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource TreeItemStyle}<span class="token punctuation">"</span></span>
    <span class="token attr-name">ItemTemplate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource TreeItemTemplate}<span class="token punctuation">"</span></span>
    <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ProductList}<span class="token punctuation">"</span></span>
    <span class="token attr-name">Style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource TreeStyle}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">TreeViewDemo</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserControl</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token function">TreeDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         DataContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TreeViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/treeview.gif =240x280" type="image/"/>
    </item>
    <item>
      <title>批量赋取值</title>
      <link>https://ilyl.life/tools/csharp/batch-process.html</link>
      <guid>https://ilyl.life/tools/csharp/batch-process.html</guid>
      <source url="https://ilyl.life/rss.xml">批量赋取值</source>
      <description>在Winform中常见的一个功能是配置，需要赋值取值，而且还是大批量的地方，一个一个手动处理非常繁琐。 如何进行批量化一键赋值和一键取值，更近一步的衍生，就是一个标准的动态模板功能。 以批量赋值取值为例进行说明。 设置基类用户控件 设置基类控件为了适应不同的子控件。 新增了一个属性Key,一个GetValue()和一个SetValue()方法。 Key...</description>
      <category>工具箱</category>
      <pubDate>Mon, 11 Dec 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在Winform中常见的一个功能是配置，需要赋值取值，而且还是大批量的地方，一个一个手动处理非常繁琐。</p>
<p>如何进行批量化一键赋值和一键取值，更近一步的衍生，就是一个标准的动态模板功能。</p>
<p>以批量赋值取值为例进行说明。</p>
<h2>设置基类用户控件</h2>
<p>设置基类控件为了适应不同的子控件。</p>
<p>新增了一个属性<code>Key</code>,一个<code>GetValue()</code>和一个<code>SetValue()</code>方法。</p>
<p><code>Key</code>用于与数据库字段名匹配</p>
<p><code>GetValue</code>方法用户获取用户输入的值</p>
<p><code>SetValue</code>方法用户将数据库存储的数据赋值到用户控件</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">BaseControl</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserControl</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">BaseControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Key <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> <span class="token keyword">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>继承<code>BaseControl</code>添加一个名为<code>TextControl</code>的用户控件</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">TextControl</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseControl</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">TextControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>设计<code>TextControl</code>用户控件</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>继承用户控件预览时经常出现错误的问题。</p>
<p>重新生成解决方案即可。否则基类用户控件有错误。</p>
</div>
<p>添加一个<code>Label</code>和一个<code>TextBox</code></p>
<p>Label用于显示名称</p>
<p>TextBox用于用户输入新值和显示原始值</p>
<figure><img src="https://nas.ilyl.life:8092/dotnet/winform1.png" alt="TextControl" tabindex="0" loading="lazy"><figcaption>TextControl</figcaption></figure>
<h2>重写基类控件方法</h2>
<p>新添加一个额外的属性<code>Title</code>用户控制<code>Label</code>标签</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> label1<span class="token punctuation">.</span>Text<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">set</span> <span class="token punctuation">{</span> label1<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> textBox1<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SetValue</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> <span class="token keyword">value</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    textBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span>Convert<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>设计配置表</h2>
<p>使用<code>DataTable</code>映射数据库表字段</p>
<table>
<thead>
<tr>
<th style="text-align:left">字段名</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">nverchar(10)</td>
<td style="text-align:left">姓名</td>
</tr>
<tr>
<td style="text-align:left">age</td>
<td style="text-align:left">int</td>
<td style="text-align:left">年龄</td>
</tr>
<tr>
<td style="text-align:left">address</td>
<td style="text-align:left">nverchar(60)</td>
<td style="text-align:left">地址</td>
</tr>
</tbody>
</table>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">Form1</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Form</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">DataTable</span> _template<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">Form1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        _template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _template<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _template<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">int</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _template<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">string</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//模拟值</span>
        _template<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">"AA"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"VVV"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>在窗体中设计布局</h2>
<p>添加三个<code>TextControl</code>用户控件，并设置<code>Title</code>和<code>Key</code>属性</p>
<p><code>Key</code>值对应<code>字段名</code></p>
<figure><img src="https://nas.ilyl.life:8092/dotnet/winform2.png" alt="配置设置" tabindex="0" loading="lazy"><figcaption>配置设置</figcaption></figure>
<h2>赋值取值</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//赋值</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button1_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> child <span class="token keyword">in</span> Controls<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token keyword">is</span> <span class="token class-name">BaseControl</span> control<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>_template<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                control<span class="token punctuation">.</span><span class="token function">SetValue</span><span class="token punctuation">(</span>_template<span class="token punctuation">.</span>Rows<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">control<span class="token punctuation">.</span>Key</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//取值</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">button2_Click</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> child <span class="token keyword">in</span> Controls<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token keyword">is</span> <span class="token class-name">BaseControl</span> control<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>_template<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">control<span class="token punctuation">.</span>Key</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">control<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">\r\n"</span></span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/dotnet/winform3.gif" alt="批量处理" width="420" height="200" tabindex="0" loading="lazy"><figcaption>批量处理</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/dotnet/winform1.png" type="image/png"/>
    </item>
    <item>
      <title>代码片段</title>
      <link>https://ilyl.life/tools/csharp/codesnippet.html</link>
      <guid>https://ilyl.life/tools/csharp/codesnippet.html</guid>
      <source url="https://ilyl.life/rss.xml">代码片段</source>
      <description>VS提供了代码片段减少开发工作量。 自定义代码片段自定义代码片段 自定义代码片段 提示 注释描述 代码片段架构参考 新建xml文件 另存为.snippet后缀文件 打开VS\工具\代码片段管理器 选择MyCodeSnippets导入自定义代码片段 输入Shortcut里的内容，按两次Tab键即可 依赖属性代码片段 </description>
      <category>工具箱</category>
      <pubDate>Thu, 07 Dec 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>VS提供了<a href="https://learn.microsoft.com/zh-cn/visualstudio/ide/walkthrough-creating-a-code-snippet?view=vs-2022" target="_blank" rel="noopener noreferrer">代码片段</a>减少开发工作量。</p>
<figure><img src="https://nas.ilyl.life:8092/dotnet/codesnippet.gif" alt="自定义代码片段" tabindex="0" loading="lazy"><figcaption>自定义代码片段</figcaption></figure>
<h2>自定义代码片段</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/language-specification/documentation-comments" target="_blank" rel="noopener noreferrer">注释描述</a></p>
<p><a href="https://learn.microsoft.com/zh-cn/visualstudio/ide/code-snippets-schema-reference?view=vs-2022" target="_blank" rel="noopener noreferrer">代码片段架构参考</a></p>
</div>
<ol>
<li>
<p>新建xml文件</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeSnippets</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeSnippet</span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.0.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Title</span><span class="token punctuation">&gt;</span></span>comment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Title</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Shortcut</span><span class="token punctuation">&gt;</span></span>neverland<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Shortcut</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Description</span><span class="token punctuation">&gt;</span></span>功能注释<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Description</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Author</span><span class="token punctuation">&gt;</span></span>Neverland<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Author</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SnippetTypes</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SnippetType</span><span class="token punctuation">&gt;</span></span>Expansion<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SnippetType</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SnippetTypes</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Snippet</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Declarations</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>作者<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span>Neverland<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>Function<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>功能模块<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>Description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>方法描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Declarations</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Code</span> <span class="token attr-name">Language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>csharp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token cdata">&lt;![CDATA[
                /// ****************************************************************************
                /// @Author:$Author$
                /// @Function:$end$
                /// @Description:
                ///
                ///
                /// ****************************************************************************
                ]]&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Code</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Snippet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CodeSnippet</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CodeSnippets</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>另存为<code>.snippet</code>后缀文件</p>
</li>
<li>
<p>打开VS\工具\代码片段管理器</p>
</li>
<li>
<p>选择<code>MyCodeSnippets</code>导入自定义代码片段</p>
</li>
</ol>
<p>输入<code>Shortcut</code>里的内容，按两次<code>Tab</code>键即可</p>
<h2>依赖属性代码片段</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeSnippets</span>  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeSnippet</span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.0.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Title</span><span class="token punctuation">&gt;</span></span>Define a DependencyProperty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Title</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Shortcut</span><span class="token punctuation">&gt;</span></span>propdp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Shortcut</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Description</span><span class="token punctuation">&gt;</span></span>Code snippet for a property using DependencyProperty as the backing store<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Description</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Author</span><span class="token punctuation">&gt;</span></span>Microsoft Corporation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Author</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SnippetTypes</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SnippetType</span><span class="token punctuation">&gt;</span></span>Expansion<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SnippetType</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SnippetTypes</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Snippet</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Declarations</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>Property Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span>int<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>property<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>Property Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span>MyProperty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>ownerclass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>The owning class of this Property.  Typically the class that it is declared in.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span>ownerclass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Literal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>defaultvalue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ID</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolTip</span><span class="token punctuation">&gt;</span></span>The default value for this property.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolTip</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Default</span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Default</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Literal</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Declarations</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Code</span> <span class="token attr-name">Language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>csharp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token cdata">&lt;![CDATA[

public $type$ $property$
{
    get { return ($type$)GetValue($property$Property); }
    set { SetValue($property$Property, value); }
}

// Using a DependencyProperty as the backing store for $property$.  This enables animation, styling, binding, etc...
public static readonly DependencyProperty $property$Property = 
    DependencyProperty.Register("$property$", typeof($type$), typeof($ownerclass$), new PropertyMetadata($defaultvalue$));

$end$]]&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Code</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Snippet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CodeSnippet</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CodeSnippets</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/dotnet/codesnippet.gif" type="image/gif"/>
    </item>
    <item>
      <title>Signalr</title>
      <link>https://ilyl.life/tools/csharp/signalr.html</link>
      <guid>https://ilyl.life/tools/csharp/signalr.html</guid>
      <source url="https://ilyl.life/rss.xml">Signalr</source>
      <description>SignalR是一个很好的实时应用。 并且提供Android和IOS以及Web相关包。但是文档有点抽象，除非自己下手写才能更深的理解，这里疏浅的总结几个点，更快的理解SignalR，并配上示例代码。 要点 提示 Hub抽象代理，对参数名，参数类型需要完全一致 SignalR通信围绕Hub展开，高度抽象，包括几个方面 中心 Hub提供两个代理方法, 发消...</description>
      <category>Signalr</category>
      <pubDate>Tue, 28 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="https://learn.microsoft.com/zh-cn/aspnet/core/signalr/introduction?view=aspnetcore-8.0" target="_blank" rel="noopener noreferrer">SignalR</a>是一个很好的实时应用。</p>
<p>并且提供Android和IOS以及Web相关包。但是文档有点抽象，除非自己下手写才能更深的理解，这里疏浅的总结几个点，更快的理解SignalR，并配上示例代码。</p>
<h2>要点</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Hub抽象代理，对参数名，参数类型需要完全一致</p>
</div>
<p>SignalR通信围绕<code>Hub</code>展开，高度抽象，包括几个方面</p>
<h3>中心</h3>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/dotnet/signalr.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>Task</title>
      <link>https://ilyl.life/tools/csharp/task.html</link>
      <guid>https://ilyl.life/tools/csharp/task.html</guid>
      <source url="https://ilyl.life/rss.xml">Task</source>
      <description>Task简化了线程操作。 Task 使用又离不开async和await，如何正确的使用Task，以一个简单的示例演示。 同步 首先看单独的方法调用 当返回值类型为Task时才需要使用await。 方法前加不加await的区别是什么？看输出结果。 方法PrintAsync应该输出三次,但实际只输出了一次，为何？ 断点调试，发现执行await Task.D...</description>
      <category>Task</category>
      <pubDate>Mon, 27 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.threading.tasks.task?view=net-8.0" target="_blank" rel="noopener noreferrer">Task</a>简化了线程操作。</p>
<p>Task 使用又离不开<code>async</code>和<code>await</code>，如何正确的使用<code>Task</code>，以一个简单的示例演示。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>$"Print</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/dotnet/task.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>权限设计</title>
      <link>https://ilyl.life/tools/csharp/auth.html</link>
      <guid>https://ilyl.life/tools/csharp/auth.html</guid>
      <source url="https://ilyl.life/rss.xml">权限设计</source>
      <description>应用程序中常用权限，又如何设计权限。 提示 仅供参考，实际根据生产坏境进行调整。 例如在大型生产系统中，对菜单库、功能库、数据库分离。 菜单库可能上千个，每个页面的功能权限上百个。 将每个用户的具体权限存储到缓存表中。 权限不应是经常变更的数据。 常用的权限有菜单权限、功能权限以及数据权限 菜单权限 菜单权限比较好实现，其一，菜单不会很多，其二当页面展...</description>
      <category>工具箱</category>
      <pubDate>Wed, 22 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>应用程序中常用权限，又如何设计权限。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>仅供参考，实际根据生产坏境进行调整。</p>
<p>例如在大型生产系统中，对菜单库、功能库、数据库分离。</p>
<p>菜单库可能上千个，每个页面的功能权限上百个。</p>
<p>将每个用户的具体权限存储到缓存表中。</p>
<p>权限不应是经常变更的数据。</p>
</div>
<p>常用的权限有<code>菜单权限</code>、<code>功能权限</code>以及<code>数据权限</code></p>
<h2>菜单权限</h2>
<p>菜单权限比较好实现，其一，菜单不会很多，其二当页面展示时就基本不会在变，相对固定。</p>
<p>多级菜单时只要确认最末级的菜单权限ID即可。</p>
<ul>
<li>菜单表</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">权限ID</th>
<th style="text-align:left">菜单名称</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">M1</td>
<td style="text-align:left">菜单1</td>
</tr>
<tr>
<td style="text-align:left">M2</td>
<td style="text-align:left">菜单2</td>
</tr>
<tr>
<td style="text-align:left">...</td>
<td style="text-align:left">...</td>
</tr>
</tbody>
</table>
<ul>
<li>用户表</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">用户ID</th>
<th style="text-align:left">用户名</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">U1</td>
<td style="text-align:left">用户1</td>
</tr>
<tr>
<td style="text-align:left">U2</td>
<td style="text-align:left">用户2</td>
</tr>
<tr>
<td style="text-align:left">...</td>
<td style="text-align:left">...</td>
</tr>
</tbody>
</table>
<ul>
<li>用户菜单权限表</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">用户ID</th>
<th style="text-align:left">菜单ID</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">U1</td>
<td style="text-align:left">M1</td>
</tr>
<tr>
<td style="text-align:left">U1</td>
<td style="text-align:left">M2</td>
</tr>
<tr>
<td style="text-align:left">U2</td>
<td style="text-align:left">M1</td>
</tr>
</tbody>
</table>
<p>通过<code>菜单表</code>、<code>用户表</code>、<code>用户菜单权限表</code>内联，得到当前用户的菜单。</p>
<h3>多级菜单</h3>
<p>相关代码参考<a href="/cs/wpf/plugin.html" target="_blank">WPF插件</a></p>
<p>多级菜单相对单级菜单复杂，如果是固定的多级菜单就简单多了。</p>
<p>不确定的多级菜单需要进行好的设计，通过迭代生成。</p>
<p>关键在于<code>迭代</code>,为了使表设计满足迭代，表结构需要满足一定的要求，如下所示</p>
<ul>
<li>多级菜单表</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">权限ID</th>
<th style="text-align:left">菜单级别</th>
<th style="text-align:left">菜单名称</th>
<th style="text-align:left">是否末级</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">M1</td>
<td style="text-align:left">1</td>
<td style="text-align:left">菜单1</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">M2</td>
<td style="text-align:left">1</td>
<td style="text-align:left">菜单2</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">M101</td>
<td style="text-align:left">2</td>
<td style="text-align:left">菜单3</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">M10101</td>
<td style="text-align:left">3</td>
<td style="text-align:left">菜单4</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td style="text-align:left">M201</td>
<td style="text-align:left">2</td>
<td style="text-align:left">菜单5</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td style="text-align:left">M102</td>
<td style="text-align:left">2</td>
<td style="text-align:left">菜单6</td>
<td style="text-align:left">1</td>
</tr>
</tbody>
</table>
<p>这里多添加一个<code>菜单级别字段</code>和调整<code>权限ID</code>约束实现</p>
<ul>
<li>菜单级别显示当前菜单的层次</li>
<li>每层菜单级别数对应长度为<code>2</code>的菜单ID</li>
<li>每层的权限ID能反应出上层菜单权限ID</li>
</ul>
<p>最终展示的菜单如下</p>
<div class="language-txt" data-ext="txt" data-title="txt"><pre class="language-txt"><code>|--菜单1
|</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/dotnet/flags.png =420x200" type="image/"/>
    </item>
    <item>
      <title>TabControl</title>
      <link>https://ilyl.life/cs/wpf/TabControl.html</link>
      <guid>https://ilyl.life/cs/wpf/TabControl.html</guid>
      <source url="https://ilyl.life/rss.xml">TabControl</source>
      <description> TabControl如何添加Tab页? TabControl如何删除Tab页? IsNavigationTarget的用途？ 如何关闭全部Tab页? 多个Tab页如何同时接收消息? 如何指定Tab页接收消息？ 关闭Tab页后消息为何还能接收？ TabControlTabControl TabControl如何添加Tab页 添加添加 实现TabCont...</description>
      <category>C#</category>
      <pubDate>Wed, 22 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> TabControl如何添加Tab页?</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> TabControl如何删除Tab页?</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> IsNavigationTarget的用途？</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 如何关闭全部Tab页?</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 多个Tab页如何同时接收消息?</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 如何指定Tab页接收消息？</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 关闭Tab页后消息为何还能接收？</label></li>
</ul>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol.gif" alt="TabControl" width="420" height="200" tabindex="0" loading="lazy"><figcaption>TabControl</figcaption></figure>
<h2>TabControl如何添加Tab页</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol1.gif" alt="添加" width="420" height="200" tabindex="0" loading="lazy"><figcaption>添加</figcaption></figure>
<p>实现TabControl动态添加，需要用到Prism的区域管理</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TabControl</span>
    <span class="token attr-name"><span class="token namespace">prism:</span>RegionManager.RegionName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ContentRegion<span class="token punctuation">"</span></span>
    <span class="token attr-name">ItemContainerStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource CloseTabStyle}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>在TabControl里重新设置<code>ItemContainerStyle</code>实现关闭功能和Header显示</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CloseTabStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type TabItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type TabItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding DataContext.Title}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding DataContext.CloseTabCommand}<span class="token punctuation">"</span></span>
                             <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding}<span class="token punctuation">"</span></span>
                             <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>关闭<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>在<code>PrismApplication</code>类注册需要导航的用户控件,VM中需要继承<code>INavigationAware</code></p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewA<span class="token punctuation">,</span> ViewAViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterForNavigation</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ViewB<span class="token punctuation">,</span> ViewBViewModel<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div><p>通过<code>IRegionManager</code>接口的<code>RequestNavigate</code>方法进行TabItem添加</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Navigate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> navigatePath<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>navigatePath <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
     <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManager<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">"ContentRegion"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
     _regionManager<span class="token punctuation">.</span><span class="token function">RequestNavigate</span><span class="token punctuation">(</span><span class="token string">"ContentRegion"</span><span class="token punctuation">,</span> navigatePath<span class="token punctuation">,</span> NavigationComplete<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">NavigationComplete</span><span class="token punctuation">(</span><span class="token class-name">NavigationResult</span> result<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">"Navigation to {0} complete. "</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>Context<span class="token punctuation">.</span>Uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div><h2>TabControl如何删除Tab页</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol2.gif" alt="删除" width="420" height="200" tabindex="0" loading="lazy"><figcaption>删除</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在ItemContainerStyle设置关闭和在用户控件里添加关闭有什么区别?</p>
<p>ItemContainerStyle中的<code>CommandParameter="{Binding}"</code>为当前页面<code>View</code></p>
<p>而用户控件里的<code>CommandParameter="{Binding}"</code>为当前页面的<code>ViewModel</code></p>
</div>
<p>在重写样式<code>ItemContainerStyle</code>设置了<code>CloseTabCommand</code>方法</p>
<p>在VM中如下实现</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CloseTab</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManger<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">"ContentRegion"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    region<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>IsNavigationTarget的用途</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol3.gif" alt="IsNavigationTarget" width="420" height="200" tabindex="0" loading="lazy"><figcaption>IsNavigationTarget</figcaption></figure>
<p>当IsNavigationTarget为<code>True</code>时，无论请求导航多少次,View和ViewModel始终为同一个实例。</p>
<p>当IsNavigationTarget为<code>False</code>时，请求导航多少次,View和ViewModel就有多少个。</p>
<h2>如何关闭全部Tab页</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol4.gif" alt="全部关闭" width="420" height="200" tabindex="0" loading="lazy"><figcaption>全部关闭</figcaption></figure>
<p><code>IRegion</code>接口提供<code>RemoveAll</code>方法</p>
<p>通过<code>IEventAggregator</code>将关闭所有Tab页的消息分发</p>
<p>当多个Tab页时，可以提取为功能基类进行消息处理</p>
<p>VM基类:</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">BaseViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">,</span> <span class="token class-name">IRegionManager</span> regionManger<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PubSubEvent<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span>TabControlHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TabControlHandler</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManger<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">"ContentRegion"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    region<span class="token punctuation">.</span><span class="token function">RemoveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Tab页VM子类:</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token function">ViewAViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">,</span> <span class="token class-name">IRegionManager</span> regionManager<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>eventAggregator<span class="token punctuation">,</span>regionManager<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
 <span class="token punctuation">}</span>
</code></pre></div><h2>多个Tab页同时接收消息</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol5.gif" alt="同时接收消息" width="420" height="200" tabindex="0" loading="lazy"><figcaption>同时接收消息</figcaption></figure>
<p>如全部关闭Tab页类型，提取为公共基类，通过<code>IEventAggregator</code>订阅公共消息。</p>
<h2>指定Tab页接收消息</h2>
<figure><img src="https://nas.ilyl.life:8092/wpf/tabcontrol6.gif" alt="指定接收消息" width="420" height="200" tabindex="0" loading="lazy"><figcaption>指定接收消息</figcaption></figure>
<p>如果没有提取公共类，那么通过<code>IEventAggregator</code>的<code>Subscribe</code>和<code>Unsubscribe</code>即可。</p>
<p>如果提取了公共类，<code>Subscribe</code>重载方法进行消息过滤即可。</p>
<p>消息载体:</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Message</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">///  空值:全部接收</span>
    <span class="token doc-comment comment">///  否则,指定接收</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Receiver <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">//内容</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Content <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>消息订阅:</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">BaseViewModel</span><span class="token punctuation">(</span><span class="token class-name">IEventAggregator</span> eventAggregator<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PubSubEvent<span class="token punctuation">&lt;</span>Message<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Subscribe</span><span class="token punctuation">(</span>Receive<span class="token punctuation">,</span> Filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>Receiver<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> msg<span class="token punctuation">.</span>Receiver <span class="token operator">==</span> me<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul>
<li>关闭Tab页后取消订阅</li>
</ul>
<p>在关闭事件中添加<code>Unsubscribe</code>方法取消订阅</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">CloseTab</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    _eventAggregator<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetEvent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PubSubEvent<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unsubscribe</span><span class="token punctuation">(</span>TabControlHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> region <span class="token operator">=</span> _regionManger<span class="token punctuation">.</span>Regions<span class="token punctuation">[</span><span class="token string">"ContentRegion"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    region<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/tabcontrol.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>ComboBox</title>
      <link>https://ilyl.life/cs/wpf/combobx.html</link>
      <guid>https://ilyl.life/cs/wpf/combobx.html</guid>
      <source url="https://ilyl.life/rss.xml">ComboBox</source>
      <description>ComboxBox如何在VM中触发事件。 引入Microsoft.Xaml.Behaviors.Wpf 在当前根节点下添加如下声明xmlns:i=&amp;quot;http://schemas.microsoft.com/xaml/behaviors&amp;quot; </description>
      <category>C#</category>
      <pubDate>Wed, 22 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>ComboxBox如何在VM中触发事件。</p>
<p>引入<a href="https://github.com/Microsoft/XamlBehaviorsWpf" target="_blank" rel="noopener noreferrer">Microsoft.Xaml.Behaviors.Wpf</a></p>
<p>在当前根节点下添加如下声明<code>xmlns:i="http://schemas.microsoft.com/xaml/behaviors"</code></p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ComboBox</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ComBo<span class="token punctuation">"</span></span>
        <span class="token attr-name">DisplayMemberPath</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Text<span class="token punctuation">"</span></span>
        <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Items}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>Interaction.Triggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>EventTrigger</span> <span class="token attr-name">EventName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SelectionChanged<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>InvokeCommandAction</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding TextChanged}<span class="token punctuation">"</span></span> <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=ComBo, Path=SelectedItem}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>Interaction.Triggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ComboBox</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>设计时数据</title>
      <link>https://ilyl.life/cs/wpf/design.html</link>
      <guid>https://ilyl.life/cs/wpf/design.html</guid>
      <source url="https://ilyl.life/rss.xml">设计时数据</source>
      <description>官方文档提供了设计模式和XAML设计时示例数据 还有一种常用的设计时预览 designdesign </description>
      <category>C#</category>
      <pubDate>Fri, 17 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>官方文档提供了<a href="https://learn.microsoft.com/zh-cn/archive/msdn-magazine/2010/july/design-patterns-problems-and-solutions-with-model-view-viewmodel" target="_blank" rel="noopener noreferrer">设计模式</a>和<a href="https://learn.microsoft.com/zh-cn/visualstudio/xaml-tools/xaml-design-time-sample-data?view=vs-2022" target="_blank" rel="noopener noreferrer">XAML设计时示例数据</a></p>
<p>还有一种常用的设计时预览</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code>d:DataContext="{d:DesignInstance Type={x:Type vm:MainWindowViewModel},
                                 IsDesignTimeCreatable=True}"
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/design.png" alt="design" width="420" height="200" tabindex="0" loading="lazy"><figcaption>design</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/design.png =420x200" type="image/"/>
    </item>
    <item>
      <title>水印</title>
      <link>https://ilyl.life/cs/wpf/watermark.html</link>
      <guid>https://ilyl.life/cs/wpf/watermark.html</guid>
      <source url="https://ilyl.life/rss.xml">水印</source>
      <description>微软官方文档提供了一个Textbox的水印示例 升级改造，利用触发器实现相同效果 watermarkwatermark </description>
      <category>C#</category>
      <pubDate>Wed, 15 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>微软官方文档提供了一个Textbox的<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/controls/how-to-add-a-watermark-to-a-textbox?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">水印示例</a></p>
<p>升级改造，利用触发器实现相同效果</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/watermark.gif" alt="watermark" width="420" height="200" tabindex="0" loading="lazy"><figcaption>watermark</figcaption></figure>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBox</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBox.Style</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TextBox<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Text<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Background<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisualBrush</span>
                                 <span class="token attr-name">AlignmentX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Left<span class="token punctuation">"</span></span>
                                 <span class="token attr-name">AlignmentY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
                                 <span class="token attr-name">Stretch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>None<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisualBrush.Visual</span><span class="token punctuation">&gt;</span></span>
                                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span>
                                         <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Transparent<span class="token punctuation">"</span></span>
                                         <span class="token attr-name">FontSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>14<span class="token punctuation">"</span></span>
                                         <span class="token attr-name">Foreground</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Silver<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                                         这是水印
                                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextBlock</span><span class="token punctuation">&gt;</span></span>
                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VisualBrush.Visual</span><span class="token punctuation">&gt;</span></span>
                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VisualBrush</span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextBox.Style</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextBox</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/watermark.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>NPM更新</title>
      <link>https://ilyl.life/web/npm.html</link>
      <guid>https://ilyl.life/web/npm.html</guid>
      <source url="https://ilyl.life/rss.xml">NPM更新</source>
      <description>经常会出现NPM升级的问题，无论是全局升级npm up -g npm@latest还是局部升级npm up npm@latest 升级成功，但是查询版本号时npm -v还是老版本。 网上很多说路径问题，但是怎么改都无效，其实该问题在npm升级文档已说明。 操作方式如下： 在系统环境变量PATH中，添加%appdata%\npm和%ProgramFile...</description>
      <category>Web</category>
      <pubDate>Mon, 13 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>经常会出现NPM升级的问题，无论是全局升级<code>npm up -g npm@latest</code>还是局部升级<code>npm up npm@latest</code></p>
<p>升级成功，但是查询版本号时<code>npm -v</code>还是老版本。</p>
<p>网上很多说路径问题，但是怎么改都无效，其实该问题在<a href="https://docs.npmjs.com/try-the-latest-stable-version-of-npm#upgrading-on-windows" target="_blank" rel="noopener noreferrer">npm升级</a>文档已说明。</p>
<p>操作方式如下：</p>
<ol>
<li>在系统环境变量<code>PATH</code>中，添加<code>%appdata%\npm</code>和<code>%ProgramFiles%\nodejs</code>路径。</li>
<li>删除<code>%ProgramFiles%\nodejs\npm</code>和<code>%ProgramFiles%\nodejs\npm.cmd</code>路径，如果存在的话。</li>
<li>使用<code>cmd管理员</code>运行模式,输入<code>cd %ProgramFiles%\nodejs</code>定位到执行目录，在执行<code>npm install npm@latest</code>进行升级即可。</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Plex证书无效</title>
      <link>https://ilyl.life/tools/nas/plex.html</link>
      <guid>https://ilyl.life/tools/nas/plex.html</guid>
      <source url="https://ilyl.life/rss.xml">Plex证书无效</source>
      <description>Plex最新版本，使用自定义证书发现无论如何都识别不到。相关问题在官方论坛讨论过，解决方式如下。 解决方式 下载并安装OPENSSL,由于Windows需要自己编译而无法直接安装,需要安装windows OPENSSL，默认路径C:\Program Files\OpenSSL-Win64 下载域名证书*.pem和*.key两个文件 打开OPENSSL安...</description>
      <category>工具箱</category>
      <pubDate>Mon, 13 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Plex最新版本，使用自定义证书发现无论如何都识别不到。相关问题在<a href="https://forums.plex.tv/t/plex-media-server-1-32-0-6918-custom-certificate-must-be-regenerated-with-new-openssl-arguments/837643" target="_blank" rel="noopener noreferrer">官方论坛</a>讨论过，解决方式如下。</p>
<h2>解决方式</h2>
<ol>
<li>下载并安装<a href="https://www.openssl.org/source/" target="_blank" rel="noopener noreferrer">OPENSSL</a>,由于Windows需要自己编译而无法直接安装,需要安装<a href="https://slproweb.com/products/Win32OpenSSL.html" target="_blank" rel="noopener noreferrer">windows OPENSSL</a>，默认路径<code>C:\Program Files\OpenSSL-Win64</code></li>
<li>下载域名证书<code>*.pem</code>和<code>*.key</code>两个文件</li>
<li>打开OPENSSL安装目录，输入<code>cmd</code></li>
<li>输入转换<code>openssl pkcs12 -export -out new.pfx -certpbe AES-256-CBC -keypbe AES-256-CBC -macalg SHA256 -inkey domain.key -in domain.pem -password pass:?????</code></li>
<li>生成新的<code>new.pfx</code>文件</li>
<li>在Plex设置里找到<code>网络</code></li>
<li>在自定义证书位置输入新的<code>*.pfx</code>证书位置</li>
<li>在自定义证书加密密钥输入<code>pass:???</code>pass后的密钥</li>
<li>在自定义证书域输入自己的域名</li>
<li>在自定义服务器访问URL输入自己的Plex服务器URL路径</li>
<li>点击保存修改</li>
<li>重启Plex服务</li>
</ol>
<h2>示例</h2>
<p>以群晖NAS和Windows64为例</p>
<ol>
<li>从阿里云或者腾讯等厂商下载域名证书，例如域名为<code>mydomain.com</code>下载的域名证书为<code>mydomain.com.pem</code>和<code>mydomain.com.key</code>两个证书文件,放到Windows<code>C:\</code>目录下</li>
<li>安装Windows OPENSSL,打开OPENSSL安装目录<code>Bin</code>，默认路径<code>C:\Program Files\OpenSSL-Win64</code>，在地址栏，删除<code>C:\Program Files\OpenSSL-Win64\bin</code>输入<code>cmd</code></li>
<li>录入<code>openssl pkcs12 -export -out c:\mydomain.pfx -certpbe AES-256-CBC -keypbe AES-256-CBC -macalg SHA256 -inkey c:\mydomain.key -in c:\mydomain.pem -password pass:mydomainpass</code>,并回车，在C盘目录下生成<code>mydomain.pfx</code></li>
<li>将<code>mydomain.pfx</code>文件上次到NAS文件夹中，例如<code>certs</code>文件夹下</li>
<li>登录Plex，打开设置，找到网络</li>
<li>在自定义证书位置输入<code>/volume1/certs/mydomain.pfx</code></li>
<li>在自定义证书加密密钥输入<code>mydomainpass</code></li>
<li>在自定义证书域输入<code>mydoamin</code></li>
<li>在自定义服务器访问输入<code>https://mydomain.com:32400</code></li>
<li>点击保存修改</li>
<li>在套件中心停用Plex并重启</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>日志记录</title>
      <link>https://ilyl.life/tools/csharp/log.html</link>
      <guid>https://ilyl.life/tools/csharp/log.html</guid>
      <source url="https://ilyl.life/rss.xml">日志记录</source>
      <description>日志记录有很多，如NLog,Log4Net,Serilog等等。 所有的日志都由Microsoft.Extensions.Logging提供顶级抽象。 以Serilog日志为例进行集成。 txt文件日志记录，每天产生一个。 .NET Core Prism 由于Prism最新版移除了ILogFacade，Prism提供的日志插件无法使用。 使用 创建一个...</description>
      <category>日志记录</category>
      <pubDate>Thu, 09 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>日志记录有很多，如<a href="https://nlog-project.org/" target="_blank" rel="noopener noreferrer">NLog</a>,<a href="https://logging.apache.org/log4net/release/manual/introduction.html" target="_blank" rel="noopener noreferrer">Log4Net</a>,<a href="https://serilog.net/" target="_blank" rel="noopener noreferrer">Serilog</a>等等。</p>
<p>所有的日志都由<code>Microsoft.Extensions.Logging</code>提供顶级抽象。</p>
<p>以Serilog日志为例进行集成。</p>
<p>txt文件日志记录，每天产生一个。</p>
<h2>.NET Core</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>Log<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Console</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Async</span><span class="token punctuation">(</span>f <span class="token operator">=&gt;</span> f<span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">"Logs\\log-.txt"</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">outputTemplate</span><span class="token punctuation">:</span> <span class="token string">"{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}[{Level:u3}] {Message:lj}{NewLine}{Exception}"</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">rollingInterval</span><span class="token punctuation">:</span> RollingInterval<span class="token punctuation">.</span>Day<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>MinimumLevel<span class="token punctuation">.</span><span class="token function">Information</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span><span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> WebApplication<span class="token punctuation">.</span><span class="token function">CreateBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span>Host<span class="token punctuation">.</span><span class="token function">UseSerilog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    <span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    app<span class="token punctuation">.</span><span class="token function">UseSerilogRequestLogging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
    Log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> <span class="token string">"Application terminated unexpectedly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">finally</span>
<span class="token punctuation">{</span>
    Log<span class="token punctuation">.</span><span class="token function">CloseAndFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>Prism</h2>
<p>由于Prism最新版移除了ILogFacade，Prism提供的日志插件无法使用。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStartup</span><span class="token punctuation">(</span><span class="token class-name">StartupEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Log<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Console</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Async</span><span class="token punctuation">(</span>f <span class="token operator">=&gt;</span> f<span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">"Logs\\log-.txt"</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">outputTemplate</span><span class="token punctuation">:</span> <span class="token string">"{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}[{Level:u3}] {Message:lj}{NewLine}{Exception}"</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">rollingInterval</span><span class="token punctuation">:</span> RollingInterval<span class="token punctuation">.</span>Day<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>MinimumLevel<span class="token punctuation">.</span><span class="token function">Information</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnStartup</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnExit</span><span class="token punctuation">(</span><span class="token class-name">ExitEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Log<span class="token punctuation">.</span><span class="token function">CloseAndFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnExit</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

 <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterTypes</span><span class="token punctuation">(</span><span class="token class-name">IContainerRegistry</span> containerRegistry<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> appLogger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SerilogLoggerProvider</span><span class="token punctuation">(</span>Log<span class="token punctuation">.</span>Logger<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token string">"App"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterInstance</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Logging<span class="token punctuation">.</span>ILogger<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>appLogger<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div><h2>使用</h2>
<p>创建一个新类</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在Prism中,构造函数里的<code>ILogger&lt;T&gt;</code>无法注入，改为<code>ILogger</code>即可</p>
</div>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger</span> _logger<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>Test<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span><span class="token punctuation">{</span>
        _logger<span class="token operator">=</span>logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token string">"日志"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>Quartz.net</title>
      <link>https://ilyl.life/cs/wpf/quartz-net.html</link>
      <guid>https://ilyl.life/cs/wpf/quartz-net.html</guid>
      <source url="https://ilyl.life/rss.xml">Quartz.net</source>
      <description>在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入IContainerExtension。 此时需要自己实现IJobFactory接口即可。 以定时生成CSV文件的Job为例 实现IJobFactory 注入自定义JobFactory 定时作业 </description>
      <category>C#</category>
      <pubDate>Tue, 07 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在WPF项目，使用Prism和Quartz.net搭配时，发现IJob，无法注入<code>IContainerExtension</code>。</p>
<p>此时需要自己实现<code>IJobFactory</code>接口即可。</p>
<p>以定时生成CSV文件的Job为例</p>
<h2>实现IJobFactory</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsvJobFactory</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">IJobFactory</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">CsvJobFactory</span><span class="token punctuation">(</span><span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _container<span class="token operator">=</span>container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">IJob</span> <span class="token function">NewJob</span><span class="token punctuation">(</span>TriggerFiredBundle bundle，<span class="token class-name">IScheduler</span> scheduler<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> container<span class="token punctuation">.</span><span class="token function">Resolve</span><span class="token punctuation">(</span>bundle<span class="token punctuation">.</span>JobDetail<span class="token punctuation">.</span>JobType<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">IJob</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ReturnJob</span><span class="token punctuation">(</span><span class="token class-name">IJob</span> job<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> disposable <span class="token operator">=</span> job <span class="token keyword">as</span> <span class="token class-name">IDisposable</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>disposable <span class="token operator">!=</span> nul1<span class="token punctuation">)</span><span class="token punctuation">{</span>
            disposable<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>注入自定义JobFactory</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Registersingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IJobFactory<span class="token punctuation">,</span>CsvJobFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISchedulerFactory， StdSchedulerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
containerRegistry<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CsVExportJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre></div><h2>定时作业</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsvExportJob</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IJob</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IContainerExtension</span> _container<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">CsvExportJob</span><span class="token punctuation">(</span><span class="token class-name">IContainerExtension</span> container<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _container <span class="token operator">=</span> container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name">IJobExecutionContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>JWT</title>
      <link>https://ilyl.life/tools/csharp/jwt.html</link>
      <guid>https://ilyl.life/tools/csharp/jwt.html</guid>
      <source url="https://ilyl.life/rss.xml">JWT</source>
      <description>基于.NET 7最小API创建的一个JWT项目。 添加JwtBearer包Microsoft.AspNetCore.Authentication.JwtBearer 设置Jwt选项配置 在appsettings.json添加新节点 新建JwtOption模型，映射配置选项 在Program.cs中添加绑定 添加认证中间件 使用认证、授权 添加登录服务 ...</description>
      <category>JWT</category>
      <pubDate>Tue, 07 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>基于.NET 7<a href="https://learn.microsoft.com/zh-cn/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-7.0" target="_blank" rel="noopener noreferrer">最小API</a>创建的一个JWT项目。</p>
<p>添加JwtBearer包<code>Microsoft.AspNetCore.Authentication.JwtBearer</code></p>
<h2>设置Jwt选项配置</h2>
<p>在<code>appsettings.json</code>添加新节点</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code>...
<span class="token property">"JwtOption"</span><span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token property">"Secret"</span><span class="token operator">:</span><span class="token string">"ijurkbdlhmklqacwqzdxmkkhvqowlyqa"</span><span class="token punctuation">,</span>
  <span class="token property">"Issuer"</span><span class="token operator">:</span><span class="token string">"ilyl.life"</span><span class="token punctuation">,</span>
  <span class="token property">"Audience"</span><span class="token operator">:</span><span class="token string">"WebApi"</span><span class="token punctuation">,</span>
  <span class="token property">"AccessExpiration"</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>新建<code>JwtOption</code>模型，映射配置选项</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtOption</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 密钥 长度不少于16位</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Secret <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 发行人</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Issuer <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 观众</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Audience <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 访问过期</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> AccessExpiration <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在<code>Program.cs</code>中添加绑定</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JwtOption<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>JwtOption<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>添加认证中间件</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> jwtOption <span class="token operator">=</span> builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>JwtOption<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JwtOption<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    it<span class="token punctuation">.</span>DefaultAuthenticateScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>DefaultChallengeScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>DefaultScheme <span class="token operator">=</span> JwtBearerDefaults<span class="token punctuation">.</span>AuthenticationScheme<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddJwtBearer</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    it<span class="token punctuation">.</span>RequireHttpsMetadata <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>SaveToken <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    it<span class="token punctuation">.</span>TokenValidationParameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenValidationParameters</span>
    <span class="token punctuation">{</span>
        IssuerSigningKey<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>jwtOption<span class="token punctuation">.</span>Secret<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        ValidIssuer<span class="token operator">=</span>jwtOption<span class="token punctuation">.</span>Issuer<span class="token punctuation">,</span>
        ValidAudience<span class="token operator">=</span>jwtOption<span class="token punctuation">.</span>Audience<span class="token punctuation">,</span>
        ValidateIssuer<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
        ValidateAudience<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">,</span>
        ValidateLifetime<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">,</span>
        ValidateIssuerSigningKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddEndpointsApiExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>使用认证、授权</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">UseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>添加登录服务</h2>
<p>用户登录账号和密码</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginInput</span>
 <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div><p>用户信息</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDto</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Address <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Gender <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Wx <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>登录服务接口</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserService</span>
 <span class="token punctuation">{</span>
     <span class="token return-type class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div><p>登录服务</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IUserService</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">List<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> _users<span class="token punctuation">;</span>
     <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">JwtOption</span> _jwtOption<span class="token punctuation">;</span>
     <span class="token keyword">public</span> <span class="token function">UserService</span><span class="token punctuation">(</span><span class="token class-name">IOptions<span class="token punctuation">&lt;</span>JwtOption<span class="token punctuation">&gt;</span></span> option<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         _jwtOption <span class="token operator">=</span> option<span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
         _users<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">{</span>
             <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 Id<span class="token operator">=</span><span class="token string">"1"</span><span class="token punctuation">,</span>UserName<span class="token operator">=</span><span class="token string">"A"</span><span class="token punctuation">,</span>Address<span class="token operator">=</span><span class="token string">"A1"</span><span class="token punctuation">,</span>Email<span class="token operator">=</span><span class="token string">"AAAAA@mail.cn"</span><span class="token punctuation">,</span>Gender<span class="token operator">=</span><span class="token string">"男"</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">"A123456"</span><span class="token punctuation">,</span>Wx<span class="token operator">=</span><span class="token string">"AAA1111AAAA"</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span><span class="token punctuation">,</span>
             <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 Id<span class="token operator">=</span><span class="token string">"2"</span><span class="token punctuation">,</span>UserName<span class="token operator">=</span><span class="token string">"B"</span><span class="token punctuation">,</span>Address<span class="token operator">=</span><span class="token string">"B1"</span><span class="token punctuation">,</span>Email<span class="token operator">=</span><span class="token string">"BBBBB@mail.cn"</span><span class="token punctuation">,</span>Gender<span class="token operator">=</span><span class="token string">"男"</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">"B123456"</span><span class="token punctuation">,</span>Wx<span class="token operator">=</span><span class="token string">"BBB1111BBBB"</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span><span class="token punctuation">,</span>
             <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 Id<span class="token operator">=</span><span class="token string">"3"</span><span class="token punctuation">,</span>UserName<span class="token operator">=</span><span class="token string">"C"</span><span class="token punctuation">,</span>Address<span class="token operator">=</span><span class="token string">"C1"</span><span class="token punctuation">,</span>Email<span class="token operator">=</span><span class="token string">"CCCCC@mail.cn"</span><span class="token punctuation">,</span>Gender<span class="token operator">=</span><span class="token string">"男"</span><span class="token punctuation">,</span>Password<span class="token operator">=</span><span class="token string">"C123456"</span><span class="token punctuation">,</span>Wx<span class="token operator">=</span><span class="token string">"CCC1111CCCC"</span><span class="token punctuation">,</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token return-type class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
        <span class="token range operator">..</span><span class="token punctuation">.</span>     
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div><p>实现<code>GetUser</code>方法</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span> <span class="token function">GetUser</span><span class="token punctuation">(</span><span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenResult<span class="token punctuation">&lt;</span>UserDto<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> user<span class="token operator">=</span> _users<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>UserName <span class="token operator">==</span> input<span class="token punctuation">.</span>UserName<span class="token operator">&amp;&amp;</span>it<span class="token punctuation">.</span>Password<span class="token operator">==</span>input<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span>ErrCode <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span>ErrMsg <span class="token operator">=</span> <span class="token string">"用户名或密码错误"</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>Bearer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TokenDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Expires <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">AddMinutes</span><span class="token punctuation">(</span>_jwtOption<span class="token punctuation">.</span>AccessExpiration<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>Data <span class="token operator">=</span> user<span class="token punctuation">;</span>
    
    <span class="token class-name"><span class="token keyword">var</span></span> issuer <span class="token operator">=</span> _jwtOption<span class="token punctuation">.</span>Issuer<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> audience <span class="token operator">=</span> _jwtOption<span class="token punctuation">.</span>Audience<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> securityKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>_jwtOption<span class="token punctuation">.</span>Secret<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> jwtTokenHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JwtSecurityTokenHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>ASCII<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>_jwtOption<span class="token punctuation">.</span>Secret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> tokenDescriptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SecurityTokenDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ClaimsIdentity</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>NameIdentifier<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>user<span class="token punctuation">.</span>UserName<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Email<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Email<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>Gender<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Gender<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>ClaimTypes<span class="token punctuation">.</span>StreetAddress<span class="token punctuation">,</span>user<span class="token punctuation">.</span>Address<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">"wx"</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span>Wx<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span>JwtRegisteredClaimNames<span class="token punctuation">.</span>Jti<span class="token punctuation">,</span>Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Expires <span class="token operator">=</span> result<span class="token punctuation">.</span>Bearer<span class="token punctuation">.</span>Expires<span class="token punctuation">,</span>
        Audience <span class="token operator">=</span> audience<span class="token punctuation">,</span>
        Issuer <span class="token operator">=</span> issuer<span class="token punctuation">,</span>
        SigningCredentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SigningCredentials</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> SecurityAlgorithms<span class="token punctuation">.</span>HmacSha512Signature<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> token <span class="token operator">=</span> jwtTokenHandler<span class="token punctuation">.</span><span class="token function">CreateToken</span><span class="token punctuation">(</span>tokenDescriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> jwtToken <span class="token operator">=</span> jwtTokenHandler<span class="token punctuation">.</span><span class="token function">WriteToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>Bearer<span class="token punctuation">.</span>Token <span class="token operator">=</span> jwtToken<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>注入用户服务</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IUserService<span class="token punctuation">,</span> UserService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>添加用户登录API</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">MapPost</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AllowAnonymous</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span> <span class="token class-name">IUserService</span> srv<span class="token punctuation">,</span> <span class="token class-name">LoginInput</span> input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> ret<span class="token operator">=</span> srv<span class="token punctuation">.</span><span class="token function">GetUser</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>添加授权</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">MapGet</span><span class="token punctuation">(</span><span class="token string">"/weatherforecast"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Authorize</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> forecast <span class="token operator">=</span> Enumerable<span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>index <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WeatherForecast</span>
        <span class="token punctuation">(</span>
            DateOnly<span class="token punctuation">.</span><span class="token function">FromDateTime</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">AddDays</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            Random<span class="token punctuation">.</span>Shared<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            summaries<span class="token punctuation">[</span>Random<span class="token punctuation">.</span>Shared<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span>summaries<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> forecast<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>优化返回序列化</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">ConfigureHttpJsonOptions</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>SerializerOptions<span class="token punctuation">.</span>WriteIndented <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>SerializerOptions<span class="token punctuation">.</span>IncludeFields <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>SerializerOptions<span class="token punctuation">.</span>DefaultIgnoreCondition <span class="token operator">=</span> JsonIgnoreCondition<span class="token punctuation">.</span>WhenWritingNull<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2>验证</h2>
<figure><img src="https://nas.ilyl.life:8092/dotnet/jwt1.gif" alt="登录认证" width="420" height="200" tabindex="0" loading="lazy"><figcaption>登录认证</figcaption></figure>
<figure><img src="https://nas.ilyl.life:8092/dotnet/jwt2.gif" alt="数据授权" width="420" height="200" tabindex="0" loading="lazy"><figcaption>数据授权</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/dotnet/jwt1.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>不等布局</title>
      <link>https://ilyl.life/cs/wpf/dynamic-layout.html</link>
      <guid>https://ilyl.life/cs/wpf/dynamic-layout.html</guid>
      <source url="https://ilyl.life/rss.xml">不等布局</source>
      <description>WPF提供了控件样式，供自己定制化需求。 但是有个别特殊需求时，需要在重复生成时控件,显示不同的效果或者大小。 以海康视频布局，一分屏、四分屏、六分屏为例。 不等布局不等布局 通过代码方式 通过代码方式进行布局,不在WPF范围考虑之内。 通过固定布局的方式 通过写固定的一分屏，四分屏，六分屏三种用户控件，这种也不再考虑范围之内 通过Style方式 为了...</description>
      <category>C#</category>
      <pubDate>Fri, 20 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>WPF提供了控件样式，供自己定制化需求。</p>
<p>但是有个别特殊需求时，需要在重复生成时控件,显示不同的效果或者大小。</p>
<p>以海康视频布局，一分屏、四分屏、六分屏为例。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/hik_layout.gif" alt="不等布局" width="420" height="200" tabindex="0" loading="lazy"><figcaption>不等布局</figcaption></figure>
<h2>通过代码方式</h2>
<p>通过代码方式进行布局,不在WPF范围考虑之内。</p>
<h2>通过固定布局的方式</h2>
<p>通过写固定的一分屏，四分屏，六分屏三种用户控件，这种也不再考虑范围之内</p>
<h2>通过Style方式</h2>
<p>为了批量生成，利用<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.itemscontrol?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">ItemsControl</a>或者<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/controls/listbox-styles-and-templates?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">ListBox</a>控件进行样式调整。</p>
<p>因为<code>ListBox</code>带<code>IsSelected</code>属性，利用这个进行改造。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>使用了Prism</p>
</div>
<ol>
<li>
<p>定义模型<code>VideoModel.cs</code></p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VideoModel</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">BindableBase</span></span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> _index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Index
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _index<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token function">SetProperty</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _index<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _playImg <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PlayImg
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _playImg<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token function">SetProperty</span><span class="token punctuation">(</span><span class="token keyword">ref</span> _playImg<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>绑定模型<code>MainViewModel.cs</code></p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainViewModel</span><span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token return-type class-name">ObservableCollection<span class="token punctuation">&lt;</span>VideoModel<span class="token punctuation">&gt;</span></span> Items <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         Items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span>VideoModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>基本布局,主页面<code>MainView.xmal</code></p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListBox</span>  <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Items}<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>添加<code>DataTemplate</code>，设计显示样式</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>这里有两个关键点，代码高亮处。</p>
<ol>
<li>使用<code>Grid</code>进行布局，为了切换默认图片和实际视频播放</li>
<li><code>Grid</code>使用了<code>Transparent</code>透明背景色，解决当选中时修改边框颜色不生效的问题</li>
</ol>
</div>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VideoItemTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">DataType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type ListBoxItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Transparent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Index}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>48<span class="token punctuation">"</span></span>
            <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>48<span class="token punctuation">"</span></span>
            <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
            <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
            <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding PlayImg}<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>添加<code>ItemsPanelTemplate</code>，设置Item容器</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>使用<code>Grid</code>作为Item的容器，并设置六行六列，正好同时满足1、4、6分屏的需求。</p>
</div>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemsPanelTemplate</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VideoItemPanelTemplate<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.RowDefinitions</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.RowDefinitions</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemsPanelTemplate</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>设置<code>ListBoxItem</code>样式,添加边框及选择效果</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VideoItemContainerStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type ListBoxItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cursor<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Template<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type ListBoxItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_HIK_BORDER<span class="token punctuation">"</span></span>
                         <span class="token attr-name">BorderBrush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource #979797}<span class="token punctuation">"</span></span>
                         <span class="token attr-name">BorderThickness</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPresenter</span> <span class="token punctuation">/&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IsSelected<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">TargetName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PART_HIK_BORDER<span class="token punctuation">"</span></span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BorderBrush<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate.Triggers</span><span class="token punctuation">&gt;</span></span>
             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ControlTemplate</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter.Value</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Setter</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>应用<code>ListBox</code>，最终布局<code>MainView.xaml</code></p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListBox</span> <span class="token attr-name">ItemContainerStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource VideoItemContainerStyle}<span class="token punctuation">"</span></span>
         <span class="token attr-name">ItemTemplate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource VideoItemTemplate}<span class="token punctuation">"</span></span>
         <span class="token attr-name">ItemsPanel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource VideoItemPanelTemplate}<span class="token punctuation">"</span></span>
         <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Items}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
<li>
<p>调试效果</p>
<p>实际运行发现并没有达到要求，全部挤在了<code>0行0列</code>中。</p>
<p>理论没有问题，关键是如果将每个数据模板内容，放在指定的行列中。</p>
<p>只要添加几行代码进行位置绑定即可</p>
</li>
<li>
<p>完善<code>ListBoxItem</code>样式</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>Grid</code>的<code>Row</code>、<code>RowSpan</code>、<code>Column</code>、<code>ColumnSpan</code>为依赖属性，可以绑定VM</p>
<p><code>Binding</code>中的<code>Row</code>、<code>RowSpan</code>、<code>Column</code>、<code>ColumnSpan</code>为<code>VideoModel.cs</code>的属性。</p>
</div>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>VideoItemContainerStyle<span class="token punctuation">"</span></span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type ListBoxItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid.Row<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Row}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid.RowSpan<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding RowSpan}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid.Column<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Column}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid.ColumnSpan<span class="token punctuation">"</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ColumnSpan}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    ...
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li>
</ol>
<h2>其他方式</h2>
<p>与通过<code>Grid</code>进行分割布局类似。也是利用<code>ListBox</code>进行改造。</p>
<p>问题在于如何修改每个内容的实际大小。</p>
<p>这个可以利用继承<code>Panel</code>类，通过<code>ArrangeOverride</code>和<code>MeasureOverride</code>方法计算，绘制出实际的大小。</p>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/hik_layout.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>Prism多Shell</title>
      <link>https://ilyl.life/cs/wpf/prismshell.html</link>
      <guid>https://ilyl.life/cs/wpf/prismshell.html</guid>
      <source url="https://ilyl.life/rss.xml">Prism多Shell</source>
      <description>使用Prism时，一个最常见的问题就是登录与主页面切换，启用只有一个Shell，如何切换到另外一个Shell。 Application.Current.MainWindow 通过Application.Current.MainWindow切换登录和主页面 LoginView为登录页面 ShellView为主页面 在Bootstrapper里设置登录页面...</description>
      <category>C#</category>
      <pubDate>Wed, 18 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>使用Prism时，一个最常见的问题就是登录与主页面切换，启用只有一个Shell，如何切换到另外一个Shell。</p>
]]></content:encoded>
    </item>
    <item>
      <title>SVG</title>
      <link>https://ilyl.life/cs/wpf/svg.html</link>
      <guid>https://ilyl.life/cs/wpf/svg.html</guid>
      <source url="https://ilyl.life/rss.xml">SVG</source>
      <description>在WPF中使用SVG文件，一种是安装第三方包SharpVectors.Wpf，直接包裹即可。 提示 路径格式:pack://application:,,,/XXX;component/Resources/XXX.svg 另一种将SVG转换为PATH,对于复杂的SVG，可以使用提供的SvgXaml进行转换,将转换的xaml文件拷贝包装为DrawingIm...</description>
      <category>C#</category>
      <pubDate>Mon, 16 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在WPF中使用<code>SVG</code>文件，一种是安装第三方包<a href="https://github.com/ElinamLLC/SharpVectors" target="_blank" rel="noopener noreferrer">SharpVectors.Wpf</a>，直接包裹即可。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>路径格式:pack://application:,,,/XXX;component/Resources/XXX.svg</p>
</div>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>window</span> 
  <span class="token attr-name">...</span>
  <span class="token attr-name"><span class="token namespace">xmlns:</span>svgc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://sharpvectors.codeplex.com/svgc/<span class="token punctuation">"</span></span>
<span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">svgc:</span>SvgViewbox</span> <span class="token attr-name">IsHitTestVisible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span>
                  <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding SvgUrl}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>另一种将SVG转换为PATH,对于复杂的SVG，可以使用提供的<a href="https://github.com/ElinamLLC/SvgXaml" target="_blank" rel="noopener noreferrer">SvgXaml</a>进行转换,将转换的xaml文件拷贝包装为<code>DrawingImage</code>。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary</span> <span class="token attr-name">...</span>
                    <span class="token attr-name"><span class="token namespace">xmlns:</span>PresentationOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2006/xaml/presentation/options<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingImage</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HomeSvg<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">PresentationOptions:</span>Freeze</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingImage.Drawing</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingGroup</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DrawingLayer<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingGroup.ClipGeometry</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RectangleGeometry</span> <span class="token attr-name">Rect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,0,24,24<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DrawingGroup.ClipGeometry</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GeometryDrawing</span> <span class="token attr-name">Brush</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#979797<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GeometryDrawing.Geometry</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PathGeometry</span> <span class="token attr-name">Figures</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M12.707,2.293A1,1,0,0,0,11.293,2.293L4.293,9.293 2.293,11.293A1,1,0,1,0,3.707,12.707L4,12.414 4,19A3,3,0,0,0,7,22L17,22A3,3,0,0,0,20,19L20,12.414 20.293,12.707A1,1,0,0,0,21.707,11.293L12.707,2.293z<span class="token punctuation">"</span></span> <span class="token attr-name">FillRule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EvenOdd<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GeometryDrawing.Geometry</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GeometryDrawing</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DrawingGroup</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DrawingImage.Drawing</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DrawingImage</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ResourceDictionary</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span>
        <span class="token attr-name">Cursor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hand<span class="token punctuation">"</span></span>
        <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource HomeSvg}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>VS打包工具</title>
      <link>https://ilyl.life/tools/installer/vsinstaller.html</link>
      <guid>https://ilyl.life/tools/installer/vsinstaller.html</guid>
      <source url="https://ilyl.life/rss.xml">VS打包工具</source>
      <description>VS提供打包工具Microsoft Visual Studio Installer Projects 2022在打包.net framework 4.8框架下的Signalr应用时，安装后提示：Invalid negotiation response received. 解决方案如下： 排除主项目输出的依赖文件System.Buffers.dll和Sy...</description>
      <category>打包</category>
      <pubDate>Sat, 07 Oct 2023 02:02:03 GMT</pubDate>
      <content:encoded><![CDATA[<p>VS提供打包工具<a href="https://marketplace.visualstudio.com/items?itemName=visualstudioclient.MicrosoftVisualStudio2022InstallerProjects" target="_blank" rel="noopener noreferrer">Microsoft Visual Studio Installer Projects 2022</a>在打包.net framework 4.8框架下的Signalr应用时，安装后提示：<code>Invalid negotiation response received.</code></p>
<p>解决方案如下：</p>
<ol>
<li>排除主项目输出的依赖文件<code>System.Buffers.dll</code>和<code>System.Numerics.Vectors.dll</code></li>
<li>手动添加<code>System.Buffers.dll</code>和<code>System.Numerics.Vectors.dll</code></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>上传与排序</title>
      <link>https://ilyl.life/web/upload-sortable.html</link>
      <guid>https://ilyl.life/web/upload-sortable.html</guid>
      <source url="https://ilyl.life/rss.xml">上传与排序</source>
      <description>在使用ant-design-vue上传组件与sortablejs排序组合时，为了实现上传图片后可以排序时，出现了一些问题。 vue获取不到上传组件的实例，即ref始终为null。 sortablejs有排序效果，但是vue绑定的图片数据未变动。 在sortablejs里添加事件处理图片数据顺序，但是排序效果失效。 上传成功显示的预览图片，很小又模糊，除...</description>
      <category>Web</category>
      <pubDate>Mon, 04 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在使用<code>ant-design-vue</code>上传组件与<code>sortablejs</code>排序组合时，为了实现上传图片后可以排序时，出现了一些问题。</p>
<ol>
<li>vue获取不到上传组件的实例，即<code>ref</code>始终为null。</li>
<li>sortablejs有排序效果，但是vue绑定的图片数据未变动。</li>
<li>在sortablejs里添加事件处理图片数据顺序，但是排序效果失效。</li>
<li>上传成功显示的预览图片，很小又模糊，除非再次点击预览。</li>
</ol>
<p>为了解决这些问题，使用<code>document</code>对象操作。</p>
<ol>
<li>
<p>获取上传组件的Dom对象</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> u <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'ant-upload-list'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div></li>
<li>
<p>禁用上传组件的上传按钮排序</p>
<p>使用<code>sortablejs</code>里的<code>filter</code>属性</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code>Sortable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">'.ant-upload'</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li>
<li>
<p>对上传成功后的图片启用排序</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code>Sortable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token string">'.ant-upload-list-picture-card-container'</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li>
<li>
<p>禁用预览</p>
<div class="language-vue" data-ext="vue" data-title="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-upload</span>
     <span class="token attr-name">...</span>
     <span class="token attr-name">:show-upload-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{ showPreviewIcon: false }<span class="token punctuation">"</span></span>
 <span class="token punctuation">/&gt;</span></span>
</code></pre></div></li>
<li>
<p>上传成功显示高清</p>
<div class="language-vue" data-ext="vue" data-title="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-upload</span>
     <span class="token attr-name">...</span>
     <span class="token attr-name">:customRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploadRequest<span class="token punctuation">"</span></span>
 <span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token keyword">const</span> <span class="token function-variable function">uploadReqeust</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> post <span class="token operator">=</span> <span class="token punctuation">{</span>
       <span class="token literal-property property">file</span><span class="token operator">:</span> file<span class="token punctuation">.</span>file<span class="token punctuation">,</span>
     <span class="token punctuation">}</span><span class="token punctuation">;</span>
     <span class="token keyword">await</span> <span class="token function">uploadApi</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           file<span class="token punctuation">.</span>url <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
           file<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">;</span>
           file<span class="token punctuation">.</span>file<span class="token punctuation">.</span>thumbUrl<span class="token operator">=</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
           file<span class="token punctuation">.</span><span class="token function">onSuccess</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url<span class="token punctuation">,</span> file<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
         file<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'上传失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         file<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'removed'</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li>
</ol>
<h2>完整的上传组件与排序功能</h2>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'ant-upload-list'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sortable <span class="token operator">=</span> Sortable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token string">'.ant-upload-list-picture-card-container'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">'.ant-upload'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>解决图片排序时，图片与数据不一致</h2>
<p>需要明确的有：</p>
<ol>
<li><code>fileList</code>对象存储的是图片上传成功的数据。</li>
<li>sortablejs已经实现了排序效果，只是对应的数据未排序。</li>
<li>数据未排序是因为VUE未识别到数字变动，但是如果通过删除或者添加数据，能变动，但是与排序起冲突，根本原因是上传组件的问题。</li>
</ol>
<p>因此，在实时处理排序数据时，出现的各种问题。</p>
<p>但只要保证最终提交的数据是排序的效果即可，不一定非要实时排序及实时调整数据。</p>
<p>还是通过<code>domcument</code>来解决问题。</p>
<h3>获取上传组件排序数据</h3>
<p>上传成功预览高清时:</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> orders <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.ant-upload-list-item-image'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fileSort <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
orders<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> o<span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    fileSort<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> o<span class="token punctuation">.</span>src<span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span>name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>上传成功预览模糊时：</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> orders <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.ant-upload-list-item-image'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fileSort <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
orders<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//新上传文件，base64图片预览</span>
        name <span class="token operator">=</span> o<span class="token punctuation">.</span>alt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//已上传文件</span>
        <span class="token keyword">const</span> arr <span class="token operator">=</span> o<span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        name <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    fileSort<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> o<span class="token punctuation">.</span>src<span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span>name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>只要在最终提交前进行排序数据提取即可。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Web下载</title>
      <link>https://ilyl.life/web/download.html</link>
      <guid>https://ilyl.life/web/download.html</guid>
      <source url="https://ilyl.life/rss.xml">Web下载</source>
      <description> 提示 在部署时，上传或者下载时需要设置以下两个方面，以IIS为例 设置MIME类型 设置网站权限 设置文件大小 Web端下载有几种方式： 后端提供文件下载地址 后端提供文件流 前端自己组织数据下载 后端提供文件下载地址 location.href window.open a标签 后端提供文件流 提示 下载的文件无法打开 在Axios里设置respon...</description>
      <category>Web</category>
      <pubDate>Wed, 30 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在部署时，上传或者下载时需要设置以下两个方面，以IIS为例</p>
<ol>
<li>设置<code>MIME类型</code></li>
<li>设置网站权限</li>
<li>设置文件大小</li>
</ol>
</div>
<p>Web端下载有几种方式：</p>
<ol>
<li>后端提供文件下载地址</li>
<li>后端提供文件流</li>
<li>前端自己组织数据下载</li>
</ol>
<h2>后端提供文件下载地址</h2>
<h3><a class="header-anchor" href="#location-href"><span></span></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Location/href" target="_blank" rel="noopener noreferrer">location.href</a></h3>
<div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span>Url
</code></pre></div><h3><a class="header-anchor" href="#window-open"><span></span></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open" target="_blank" rel="noopener noreferrer">window.open</a></h3>
<div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3>a标签</h3>
<div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">openWindow</span><span class="token punctuation">(</span>
  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  opt<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> target<span class="token operator">?</span><span class="token operator">:</span> TargetContext <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span> noopener<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> noreferrer<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> target <span class="token operator">=</span> <span class="token string">'__blank'</span><span class="token punctuation">,</span> noopener <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> noreferrer <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> opt <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> feature<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  noopener <span class="token operator">&amp;&amp;</span> feature<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'noopener=yes'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  noreferrer <span class="token operator">&amp;&amp;</span> feature<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'noreferrer=yes'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> target<span class="token punctuation">,</span> feature<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">downloadByUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  url<span class="token punctuation">,</span>
  target <span class="token operator">=</span> <span class="token string">'_blank'</span><span class="token punctuation">,</span>
  fileName<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  target<span class="token operator">?</span><span class="token operator">:</span> TargetContext<span class="token punctuation">;</span>
  fileName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isChrome <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'chrome'</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isSafari <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'safari'</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(iP)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Your browser does not support download!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isChrome <span class="token operator">||</span> isSafari<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>link<span class="token punctuation">.</span>download <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      link<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName <span class="token operator">||</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>createEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> e <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">'MouseEvents'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      e<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      link<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    url <span class="token operator">+=</span> <span class="token string">'?download'</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">openWindow</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> target <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>后端提供文件流</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>
<p>下载的文件无法打开</p>
<p>在<code>Axios</code>里设置<code>responseType</code>:<code>blob</code></p>
</li>
<li>
<p>生产环境无法下载也不报错</p>
<p>后端添加标头<code>Access-Control-Expose-Headers:Content-Disposition</code>，或者使用<a href="/web/proxy.html" target="_blank">反向代理</a></p>
</li>
</ol>
</div>
<p>关键在于<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noopener noreferrer">BLOB</a></p>
<div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">downloadByData</span><span class="token punctuation">(</span>data<span class="token operator">:</span> BlobPart<span class="token punctuation">,</span> filename<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> mime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bom<span class="token operator">?</span><span class="token operator">:</span> BlobPart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> blobData <span class="token operator">=</span> <span class="token keyword">typeof</span> bom <span class="token operator">!==</span> <span class="token string">'undefined'</span> <span class="token operator">?</span> <span class="token punctuation">[</span>bom<span class="token punctuation">,</span> data<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>blobData<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> mime <span class="token operator">||</span> <span class="token string">'application/octet-stream'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> blobURL <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> tempLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  tempLink<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>
  tempLink<span class="token punctuation">.</span>href <span class="token operator">=</span> blobURL<span class="token punctuation">;</span>
  tempLink<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'download'</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> tempLink<span class="token punctuation">.</span>download <span class="token operator">===</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tempLink<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'_blank'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>tempLink<span class="token punctuation">)</span><span class="token punctuation">;</span>
  tempLink<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>tempLink<span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>blobURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">downLoadFile</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> ret<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-disposition'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> mine <span class="token operator">=</span> ret<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-type'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">downloadByData</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>data<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> mine<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3>Base64图片下载</h3>
<div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">downloadByBase64</span><span class="token punctuation">(</span>buf<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> filename<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> mime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bom<span class="token operator">?</span><span class="token operator">:</span> BlobPart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> base64Buf <span class="token operator">=</span> <span class="token function">dataURLtoBlob</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">downloadByData</span><span class="token punctuation">(</span>base64Buf<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> mime<span class="token punctuation">,</span> bom<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>自己组织数据下载</h2>
<p>npm包<a href="https://www.npmjs.com/package/xlsx" target="_blank" rel="noopener noreferrer">xlsx</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>RSA</title>
      <link>https://ilyl.life/web/rsa.html</link>
      <guid>https://ilyl.life/web/rsa.html</guid>
      <source url="https://ilyl.life/rss.xml">RSA</source>
      <description>前端需要RSA加密，使用JSEncrypt加密对长文本支持不友好，Encryptlong在JSEncrypt基础上进行了扩展。 但是实际情况是前端利用公钥加密，后端私钥加密，前端需要公钥解密。 因此在Encryptlong的基础上继续扩展，支持以下功能 中文长文本加解密 公钥解密 提示 公钥需要完整的包括头部-----BEGIN PUBLIC KEY-...</description>
      <category>Web</category>
      <pubDate>Tue, 29 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>前端需要RSA加密，使用<code>JSEncrypt</code>加密对长文本支持不友好，<code>Encryptlong</code>在<code>JSEncrypt</code>基础上进行了扩展。</p>
<p>但是实际情况是前端利用公钥加密，后端私钥加密，前端需要公钥解密。</p>
<p>因此在<code>Encryptlong</code>的基础上继续扩展，支持以下功能</p>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 中文长文本加解密</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 公钥解密</label></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>公钥需要完整的包括头部`</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>反向代理</title>
      <link>https://ilyl.life/web/proxy.html</link>
      <guid>https://ilyl.life/web/proxy.html</guid>
      <source url="https://ilyl.life/rss.xml">反向代理</source>
      <description>第三方Https接口不支持跨域，前端又想调用。 在Vite开发环境中，vite.config.ts配置了代理正常访问，如下，但是生产环境又不行了... 因此需要部署支持反向代理及跨域。 相关资料 IIS反向代理 IIS出站规则 跨域 IIS反向代理 安装IIS插件 Application Request Routing Url-Rewrite 根节点下...</description>
      <category>Web</category>
      <pubDate>Thu, 24 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>第三方<code>Https</code>接口不支持跨域，前端又想调用。</p>
<p>在Vite开发环境中，<code>vite.config.ts</code>配置了<a href="https://cn.vitejs.dev/config/server-options.html#server-proxy" target="_blank" rel="noopener noreferrer">代理</a>正常访问，如下，但是生产环境又不行了...</p>
<div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineApplicationConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  overrides<span class="token operator">:</span> <span class="token punctuation">{</span>
    server<span class="token operator">:</span> <span class="token punctuation">{</span>
      proxy<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">'/proxy-api'</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          target<span class="token operator">:</span> <span class="token string">'XXXXXXXXXX'</span><span class="token punctuation">,</span>
          changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          ws<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">^/proxy-api</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>因此需要部署支持反向代理及跨域。</p>
<h2>相关资料</h2>
<p><a href="https://learn.microsoft.com/en-us/iis/extensions/url-rewrite-module/reverse-proxy-rule-template" target="_blank" rel="noopener noreferrer">IIS反向代理</a>
<a href="https://learn.microsoft.com/en-us/iis/extensions/url-rewrite-module/creating-outbound-rules-for-url-rewrite-module" target="_blank" rel="noopener noreferrer">IIS出站规则</a>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noopener noreferrer">跨域</a></p>
<h2>IIS反向代理</h2>
<h3>安装IIS插件</h3>
<ol>
<li>
<p><a href="https://www.iis.net/downloads/microsoft/application-request-routing" target="_blank" rel="noopener noreferrer">Application Request Routing</a></p>
</li>
<li>
<p><a href="https://www.iis.net/downloads/microsoft/url-rewrite" target="_blank" rel="noopener noreferrer">Url-Rewrite</a></p>
</li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy1.png" alt="根节点下显示" width="420" height="200" tabindex="0" loading="lazy"><figcaption>根节点下显示</figcaption></figure>
<h3>启动反向代理</h3>
<ol>
<li>进入<code>Application Request Routing</code></li>
<li>点击右边<code>Server Proxy Settings...</code></li>
<li>勾选<code>Enable proxy</code></li>
<li>勾选<code>Keep alive</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy12.png" alt="启动反向代理" width="420" height="200" tabindex="0" loading="lazy"><figcaption>启动反向代理</figcaption></figure>
<h3>新建网站</h3>
<ol>
<li>选择网站右击添加网站</li>
<li>输入<code>网站名称</code></li>
<li>选择<code>物理路径</code>,(选择一个空文件夹即可)</li>
<li>设置<code>端口</code>后确认</li>
</ol>
<h3>URL重写</h3>
<ol>
<li>点击新建网站</li>
<li>进入<code>Url 重写</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy.png" alt="URL 重写" width="420" height="200" tabindex="0" loading="lazy"><figcaption>URL 重写</figcaption></figure>
<h4>入站规则</h4>
<ol>
<li>
<p>输入<code>名称</code></p>
</li>
<li>
<p>匹配URL</p>
<ol>
<li>请求的URL(R:):<code>与模式匹配</code></li>
<li>模式:<code>^(.*)</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy2.png" alt="匹配URL" width="420" height="200" tabindex="0" loading="lazy"><figcaption>匹配URL</figcaption></figure>
</li>
<li>
<p>条件:</p>
<ol>
<li>逻辑分组(G):<code>全部匹配</code></li>
<li>条件输入(C):<code>{HTTPS}s</code></li>
<li>检查输入字符串是否:<code>与模式匹配</code></li>
<li>模式(T):<code>on(s)|offs</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy3.png" alt="条件" width="420" height="200" tabindex="0" loading="lazy"><figcaption>条件</figcaption></figure>
</li>
<li>
<p>操作</p>
<ol>
<li>操作类型(Y):<code>重写</code></li>
<li>重写URL(L):<code>输入需要代理的地址</code>/{R:1}</li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy4.png" alt="操作" width="420" height="200" tabindex="0" loading="lazy"><figcaption>操作</figcaption></figure>
</li>
<li>
<p>点击应用</p>
</li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy5.png" alt="URL重写规则" width="420" height="200" tabindex="0" loading="lazy"><figcaption>URL重写规则</figcaption></figure>
<h4>出站规则</h4>
<ol>
<li>
<p>新建<code>Access-Control-Allow-Origin</code>出站规则</p>
<ol>
<li>匹配范围:<code>服务器变量</code></li>
<li>变量名称：<code>RESPONSE_Access-Control-Allow-Origin</code></li>
<li>使用(S):<code>通配符</code></li>
<li>模式(T):<code>.*</code></li>
<li>操作属性值:<code>{HTTP_ORIGIN}</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy7.png" alt="Access-Control-Allow-Origin" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Access-Control-Allow-Origin</figcaption></figure>
</li>
<li>
<p>新建<code>Access-Control-Allow-Methods</code>出站规则</p>
<ol>
<li>匹配范围:<code>服务器变量</code></li>
<li>变量名称：<code>RESPONSE_Access-Control-Allow-Methods</code></li>
<li>使用(S):<code>通配符</code></li>
<li>模式(T):<code>*</code></li>
<li>操作属性值:<code>{HTTP_Access-Control-Request-Method}</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy8.png" alt="Access-Control-Allow-Methods" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Access-Control-Allow-Methods</figcaption></figure>
</li>
<li>
<p>新建<code>Access-Control-Allow-Headers</code>出站规则</p>
<ol>
<li>匹配范围:<code>服务器变量</code></li>
<li>变量名称：<code>RESPONSE_Access-Control-Allow-Headers</code></li>
<li>使用(S):<code>通配符</code></li>
<li>模式(T):<code>*</code></li>
<li>操作属性值:<code>{HTTP_Access-Control-Request-Headers}</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy9.png" alt="Access-Control-Allow-Methods" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Access-Control-Allow-Methods</figcaption></figure>
</li>
<li>
<p>新建<code>Access-Control-Allow-Credentials</code>出站规则</p>
<ol>
<li>匹配范围:<code>服务器变量</code></li>
<li>变量名称：<code>RESPONSE_Access-Control-Allow-Credentials</code></li>
<li>使用(S):<code>通配符</code></li>
<li>模式(T):<code>*</code></li>
<li>操作属性值:<code>true</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy10.png" alt="Access-Control-Allow-Methods" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Access-Control-Allow-Methods</figcaption></figure>
</li>
<li>
<p>新建<code>Access-Control-Max-Age</code>出站规则</p>
<ol>
<li>匹配范围:<code>服务器变量</code></li>
<li>变量名称：<code>RESPONSE_Access-Control-Max-Age</code></li>
<li>使用(S):<code>通配符</code></li>
<li>模式(T):<code>*</code></li>
<li>操作属性值:<code>3600</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy11.png" alt="Access-Control-Allow-Methods" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Access-Control-Allow-Methods</figcaption></figure>
</li>
<li>
<p>新建<code>Access-Control-Expose-Headers</code>出站规则</p>
<ol>
<li>匹配范围:<code>服务器变量</code></li>
<li>变量名称：<code>RESPONSE_Access-Control-Expose-Headers</code></li>
<li>使用(S):<code>通配符</code></li>
<li>模式(T):<code>*</code></li>
<li>操作属性值:<code>content-disposition</code></li>
</ol>
<figure><img src="https://nas.ilyl.life:8092/deploy/iis_proxy11.png" alt="Access-Control-Expose-Headers" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Access-Control-Expose-Headers</figcaption></figure>
</li>
</ol>
<h3>快捷方式</h3>
<ol>
<li>修改<code>8行代码高亮处</code>替换成需要代理的网站</li>
<li>将以下xml文件保存为<code>web.config</code></li>
<li>直接替换新建网站或者本地网址目录下的<code>web.config</code>文件</li>
<li>重启IIS</li>
</ol>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>system.webServer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rewrite</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rules</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>proxy<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>^(.*)<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.XXXXXXX.com/{R:1}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rules</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>outboundRules</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Origin<span class="token punctuation">"</span></span> <span class="token attr-name">patternSyntax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Wildcard<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">serverVariable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RESPONSE_Access-Control-Allow-Origin<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{HTTP_ORIGIN}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Methods<span class="token punctuation">"</span></span> <span class="token attr-name">patternSyntax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Wildcard<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">serverVariable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RESPONSE_Access-Control-Allow-Methods<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{HTTP_Access-Control-Request-Method}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Headers<span class="token punctuation">"</span></span> <span class="token attr-name">patternSyntax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Wildcard<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">serverVariable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RESPONSE_Access-Control-Allow-Headers<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{HTTP_Access-Control-Request-Headers}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Credentials<span class="token punctuation">"</span></span> <span class="token attr-name">patternSyntax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Wildcard<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">serverVariable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RESPONSE_Access-Control-Allow-Credentials<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Max-Age<span class="token punctuation">"</span></span> <span class="token attr-name">patternSyntax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Wildcard<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">serverVariable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RESPONSE_Access-Control-Max-Age<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3600<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Expose-Headers<span class="token punctuation">"</span></span> <span class="token attr-name">patternSyntax</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Wildcard<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">serverVariable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RESPONSE_Access-Control-Expose-Headers<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rewrite<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Disposition<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>outboundRules</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rewrite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>system.webServer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>

</code></pre></div><h2>Nginx反向代理</h2>
<p>打开默认的<code>nginx.conf</code>配置,如下</p>
<p>取消注释<code>56-58行代码</code>,填写需要代理的地址即可。</p>
<p>例如本地服务地址<code>localhost</code>,需要访问<code>www.a.com/b.php</code></p>
<p>57行代码调整为<code>proxy_pass www.a.com/b.php</code></p>
<p>接口调用<code>localhost/b.php</code>即可</p>
<div class="language-conf" data-ext="conf" data-title="conf"><pre class="language-conf"><code>#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        location ~ \.php$ {
           proxy_pass    127.0.0.1:80;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>参数化查询</title>
      <link>https://ilyl.life/tools/databases/paramaters.html</link>
      <guid>https://ilyl.life/tools/databases/paramaters.html</guid>
      <source url="https://ilyl.life/rss.xml">参数化查询</source>
      <description>测试表Test,结构及数据如下: In参数化查询 替换成自己的数据库连接字符串。 </description>
      <category>工具箱</category>
      <pubDate>Wed, 23 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>测试表<code>Test</code>,结构及数据如下:</p>
<table>
<thead>
<tr>
<th style="text-align:left">ID</th>
<th style="text-align:left">Name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">1111</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">2222</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">3333</td>
</tr>
</tbody>
</table>
<h2>In参数化查询</h2>
<p>替换成自己的数据库连接字符串。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> connString <span class="token operator">=</span> <span class="token string">"server=...;Port=...;Database=..;Uid=r..oot;Pwd=...;"</span><span class="token punctuation">;</span>

 <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MySqlConnection</span><span class="token punctuation">(</span>connString<span class="token punctuation">)</span><span class="token punctuation">;</span>
 conn<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token class-name"><span class="token keyword">var</span></span> cmd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MySqlCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> idList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> idParameterList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> idList<span class="token punctuation">.</span>Count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token class-name"><span class="token keyword">var</span></span> paramName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"@idParam</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">i</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
     idParameterList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>paramName<span class="token punctuation">)</span><span class="token punctuation">;</span>
     cmd<span class="token punctuation">.</span>Parameters<span class="token punctuation">.</span><span class="token function">AddWithValue</span><span class="token punctuation">(</span>paramName<span class="token punctuation">,</span> idList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 cmd<span class="token punctuation">.</span>Connection <span class="token operator">=</span> conn<span class="token punctuation">;</span>
 cmd<span class="token punctuation">.</span>CommandText <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"select name from test where id in (</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">,</span> idParameterList<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">)"</span></span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> sda <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MySqlDataAdapter</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
 sda<span class="token punctuation">.</span><span class="token function">Fill</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token punctuation">;</span>
 conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataRow</span> dr <span class="token keyword">in</span> dt<span class="token punctuation">.</span>Rows<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>dr<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>Mariadb</title>
      <link>https://ilyl.life/tools/databases/mariadb.html</link>
      <guid>https://ilyl.life/tools/databases/mariadb.html</guid>
      <source url="https://ilyl.life/rss.xml">Mariadb</source>
      <description>如何开通外网？ NAS-&amp;gt;控制面板-&amp;gt;终端机和SNMP-&amp;gt;终端机-&amp;gt;勾选启动SSH功能 利用Xshell登录系统 进入Mariadb目录,volume1为安装目录 进入marialdb,输入以下命令，之后输入密码，登录成功显示MariaDB[(none)]&amp;gt; 切换数据库 更改管理员roothost，忽略提示Duplicate entry &amp;apos;%-root...</description>
      <category>工具箱</category>
      <pubDate>Sat, 19 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>如何开通外网？</p>
<ol>
<li>
<p>NAS-&gt;控制面板-&gt;终端机和SNMP-&gt;终端机-&gt;勾选<code>启动SSH功能</code></p>
</li>
<li>
<p>利用Xshell登录系统</p>
</li>
<li>
<p>进入Mariadb目录,<code>volume1</code>为安装目录</p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>cd /volume1/@appstore/MariaDB10/usr/local/mariadb10/bin
</code></pre></div></li>
<li>
<p>进入marialdb,输入以下命令，之后输入密码，登录成功显示<code>MariaDB[(none)]&gt;</code></p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>./mysql -u root -p
</code></pre></div></li>
<li>
<p>切换数据库</p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>use mysql
</code></pre></div></li>
<li>
<p>更改管理员<code>root</code>host，忽略提示<code>Duplicate entry '%-root' for key 'PRIMARY'</code></p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>update user set host='%' where user='root';
</code></pre></div></li>
<li>
<p>更新权限</p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>FLUSH PRIVILEGES;
</code></pre></div></li>
<li>
<p>开启MarialDB端口防火墙</p>
</li>
<li>
<p>设置端口转发</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Note</title>
      <link>https://ilyl.life/cs/maui/Note.html</link>
      <guid>https://ilyl.life/cs/maui/Note.html</guid>
      <source url="https://ilyl.life/rss.xml">Note</source>
      <description>一个MAUI官方示例Note，源代码地址 </description>
      <category>C#</category>
      <pubDate>Fri, 18 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>一个<a href="https://learn.microsoft.com/zh-cn/dotnet/maui/what-is-maui" target="_blank" rel="noopener noreferrer">MAUI</a>官方示例<a href="https://learn.microsoft.com/zh-cn/dotnet/maui/tutorials/notes-app/" target="_blank" rel="noopener noreferrer">Note</a>，<a href="https://github.com/ly2jr/notes" target="_blank" rel="noopener noreferrer">源代码地址</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>语音合成</title>
      <link>https://ilyl.life/tools/ifly/voice.html</link>
      <guid>https://ilyl.life/tools/ifly/voice.html</guid>
      <source url="https://ilyl.life/rss.xml">语音合成</source>
      <description>将讯飞语音合成集成到VUE项目Vite+TS中，其中有一点点变化，作此记录。 语音合成文档 WebApi示例:es6 前提 涉及到三个js文件，这里将文件存储在src\assets\js\speechSynthesis目录下，分别为 audio.js: WebApi示例中的index.js文件 路径:src\pages\index\index.js d...</description>
      <category>讯飞</category>
      <pubDate>Fri, 04 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>将讯飞语音合成集成到VUE项目<code>Vite+TS</code>中，其中有一点点变化，作此记录。</p>
<ul>
<li>
<p><a href="https://www.xfyun.cn/doc/tts/online_tts/API.html" target="_blank" rel="noopener noreferrer">语音合成文档</a></p>
</li>
<li>
<p><a href="https://www.xfyun.cn/doc/tts/online_tts/API.html#%E8%B0%83%E7%94%A8%E7%A4%BA%E4%BE%8B" target="_blank" rel="noopener noreferrer">WebApi示例:<code>es6</code></a></p>
</li>
</ul>
<h2>前提</h2>
<ul>
<li>涉及到三个js文件，这里将文件存储在<code>src\assets\js\speechSynthesis</code>目录下，分别为</li>
</ul>
<ol>
<li>
<p><code>audio.js</code>: WebApi示例中的<code>index.js</code>文件</p>
<p>路径:<code>src\pages\index\index.js</code></p>
</li>
<li>
<p><code>download.js</code>: WebApi示例中的<code>download.js</code>文件</p>
<p>路径:<code>src\js\download.js</code></p>
</li>
<li>
<p><code>transcode.worker.js</code>：WebApi示例中的<code>transcode.worker.js</code>文件</p>
<p>路径:<code>src\js\transcode.worker.js</code></p>
</li>
</ol>
<ul>
<li>引用<code>crypto-js</code>和<code>js-base64</code>两个包。</li>
</ul>
<p>其中，改变的部分代码高亮显示，其余与WebApi示例代码一致。</p>
<h2>演示</h2>

<h2>audio.js</h2>
<ul>
<li>
<p>2行代码</p>
<p>直接使用<code>let transWorker = new TransWorker();</code>时,提示<code>default</code>或者<code>constructor</code>错误。</p>
<p>参考<a href="https://cn.vitejs.dev/guide/features.html#web-workers" target="_blank" rel="noopener noreferrer">vite web-worker</a>解决。</p>
</li>
<li>
<p>4-6行代码</p>
<p>为科大讯飞的接口鉴权,需要自己创建</p>
</li>
<li>
<p>8行代码</p>
<p>导出代码块</p>
</li>
</ul>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">const</span> transWorker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">'./transcode.worker.js'</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//APPID，APISecret，APIKey在控制台-我的应用-语音合成（流式版）页面获取</span>
<span class="token keyword">const</span> <span class="token constant">APPID</span> <span class="token operator">=</span> <span class="token string">'APPID'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">API_SECRET</span> <span class="token operator">=</span> <span class="token string">'API_SECRET'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">API_KEY</span> <span class="token operator">=</span> <span class="token string">'API_KEY'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> TTSRecorder<span class="token punctuation">;</span>
</code></pre></div><h3>download.js</h3>
<ul>
<li>
<p>2-13代码行</p>
<p>下载MP3文件代码，根据下载WAV文件而来</p>
</li>
</ul>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">function</span> <span class="token function">downloadMP3</span><span class="token punctuation">(</span><span class="token parameter">audioData<span class="token punctuation">,</span> sampleRate<span class="token punctuation">,</span> oututSampleBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> wavData <span class="token operator">=</span> <span class="token function">encodeWAV</span><span class="token punctuation">(</span>audioData<span class="token punctuation">,</span> sampleRate <span class="token operator">||</span> <span class="token number">44100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> oututSampleBits <span class="token operator">||</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>wavData<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'audio/mp3'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> defaultName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span>href <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>defaultName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.mp3</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre></div><h3>transcode.worker.js</h3>
<ul>
<li>1、3行代码注释</li>
</ul>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// const TransWorker = (function () {</span>
<span class="token operator">...</span>
<span class="token comment">// })();</span>
</code></pre></div><h2>Dotnet 示例</h2>
<p>没有提供关于C#的代码示例...<a href="https://github.com/ly2jr/iflytts" target="_blank" rel="noopener noreferrer">源代码地址</a></p>
<h3>基本参数</h3>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> HOST_URL <span class="token operator">=</span> <span class="token string">"https://tts-api.xfyun.cn/v2/tts"</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> HEADERS <span class="token operator">=</span> <span class="token string">"host date request-line"</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> APP_ID <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> API_SECRET <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> API_KEY <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> TEXT <span class="token operator">=</span> <span class="token string">"Hello,World"</span><span class="token punctuation">;</span>
</code></pre></div><h3>Json转换</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>.NET 8 Support JsonNamingPolicy.SnakeCaseLower</p>
</div>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>
<span class="token class-name"><span class="token keyword">var</span></span> jsonOption <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JsonSerializerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    PropertyNamingPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LowerCaseNamingPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//.NET 8 Support JsonNamingPolicy.SnakeCaseLower</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">LowerCaseNamingPolicy</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">JsonNamingPolicy</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ConvertName</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3>鉴权认证</h3>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>

<span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">AuthUrl</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> hostUrl<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> apiKey<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> apiSecret<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>hostUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//签名时间,RFC1123格式(Thu, 01 Aug 2019 01:53:21 GMT)。</span>
    <span class="token class-name"><span class="token keyword">var</span></span> date <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToUniversalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//参与签名的字段host,date,</span>
    <span class="token class-name"><span class="token keyword">var</span></span> signatureOrigin <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"host: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">uri<span class="token punctuation">.</span>Host</span><span class="token punctuation">}</span></span><span class="token string">\ndate: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">date</span><span class="token punctuation">}</span></span><span class="token string">\nGET </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">uri<span class="token punctuation">.</span>LocalPath</span><span class="token punctuation">}</span></span><span class="token string"> HTTP/1.1"</span></span><span class="token punctuation">;</span> 
    <span class="token comment">//签名结果</span>
    <span class="token class-name"><span class="token keyword">var</span></span> signature <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> secretByte <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>apiSecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">HMACSHA256</span> hmac <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HMACSHA256</span><span class="token punctuation">(</span>secretByte<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> signatureByte <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>signatureOrigin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> hashValue <span class="token operator">=</span> hmac<span class="token punctuation">.</span><span class="token function">ComputeHash</span><span class="token punctuation">(</span>signatureByte<span class="token punctuation">)</span><span class="token punctuation">;</span>
        signature<span class="token operator">=</span>Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>hashValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//构建请求参数</span>
    <span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"api_key=\"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">apiKey</span><span class="token punctuation">}</span></span><span class="token string">\", algorithm=\"hmac-sha256\", headers=\"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">HEADERS</span><span class="token punctuation">}</span></span><span class="token string">\", signature=\"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">signature</span><span class="token punctuation">}</span></span><span class="token string">\""</span></span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> keyBytes<span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> authorization <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token interpolation-string"><span class="token string">$"wss://</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">uri<span class="token punctuation">.</span>Host</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">uri<span class="token punctuation">.</span>LocalPath</span><span class="token punctuation">}</span></span><span class="token string">?authorization=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">authorization</span><span class="token punctuation">}</span></span><span class="token string">&amp;date=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">date</span><span class="token punctuation">}</span></span><span class="token string">&amp;host=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">uri<span class="token punctuation">.</span>Host</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3>发送语音</h3>

<h3>接收语音</h3>

<h3>语音转码</h3>
<ul>
<li>
<p><a href="https://github.com/ly2jr/iflytts" target="_blank" rel="noopener noreferrer">FFmpeg</a></p>
<div class="language-cmd" data-ext="cmd" data-title="cmd"><pre class="language-cmd"><code>ffmpeg -y -f s16le -ac 1 -ar 16000 -acodec pcm_s16le -i test.pcm test.mp3
</code></pre></div></li>
<li>
<p><a href="https://www.codeproject.com/Articles/501521/How-to-convert-between-most-audio-formats-in-NET" target="_blank" rel="noopener noreferrer">NAudio</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Promise队列</title>
      <link>https://ilyl.life/tools/ts/promise.html</link>
      <guid>https://ilyl.life/tools/ts/promise.html</guid>
      <source url="https://ilyl.life/rss.xml">Promise队列</source>
      <description>前端需要把数据多次提交给后端，然后返回的数据填充到真正的数据，在提交给后端。 正常数据由后端处理，但是放在了前端。 另外使用Promise没有问题，但是有问题的在于后端不支持并发，比如多次提交文件等耗时作业。 这时需要将Promise调整为队列，依次提交处理，然后在一并最终提交给后端。 演示 通过Promise提交时出现验证在正在的提交之后。 而通过P...</description>
      <category>工具箱</category>
      <pubDate>Fri, 18 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>前端需要把数据多次提交给后端，然后返回的数据填充到真正的数据，在提交给后端。</p>
<p>正常数据由后端处理，但是放在了前端。</p>
<p>另外使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noopener noreferrer">Promise</a>没有问题，但是有问题的在于后端不支持并发，比如多次提交文件等耗时作业。</p>
<p>这时需要将Promise调整为队列，依次提交处理，然后在一并最终提交给后端。</p>
<h2>演示</h2>
<p>通过Promise提交时出现验证在正在的提交之后。</p>
<p>而通过Promise.all批量验证时，由于后端接口不支持并发，导致始终验证失败。</p>

<p>通过对Promise进行队列处理，保证验证追条提交后，最后在提交。</p>

]]></content:encoded>
    </item>
    <item>
      <title>墨迹画布</title>
      <link>https://ilyl.life/cs/wpf/canvas.html</link>
      <guid>https://ilyl.life/cs/wpf/canvas.html</guid>
      <source url="https://ilyl.life/rss.xml">墨迹画布</source>
      <description>WPF提供数字墨迹，简单几行代码就可以运行，源代码地址 InkCanvasInkCanvas 右击放大 放大放大 编辑模式 EditingModelEditingModel 画笔 画笔画笔 手写识别 提示 Microsoft.Ink.dll在\Program Files\Common Files\Microsoft Shared\Ink中找到 手写识别...</description>
      <category>C#</category>
      <pubDate>Fri, 11 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>WPF提供<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/getting-started-with-ink?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">数字墨迹</a>，简单几行代码就可以运行，<a href="https://github.com/Ly2JR/wpf-samples/tree/main/src/InkCanvasDemo" target="_blank" rel="noopener noreferrer">源代码地址</a></p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InkCanvas</span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_1.gif" alt="InkCanvas" width="420" height="200" tabindex="0" loading="lazy"><figcaption>InkCanvas</figcaption></figure>
<h2>右击放大</h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InkCanvas</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myInkCanvas<span class="token punctuation">"</span></span> <span class="token attr-name">MouseRightButtonUp</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RightMouseUpHandler<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RightMouseUpHandler</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span>
                          <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Input<span class="token punctuation">.</span>MouseButtonEventArgs</span> e<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token class-name">Matrix</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     m<span class="token punctuation">.</span><span class="token function">Scale</span><span class="token punctuation">(</span><span class="token number">1.1d</span><span class="token punctuation">,</span> <span class="token number">1.1d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">(</span><span class="token punctuation">(</span>InkCanvas<span class="token punctuation">)</span>sender<span class="token punctuation">)</span><span class="token punctuation">.</span>Strokes<span class="token punctuation">.</span><span class="token function">Transform</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_2.gif" alt="放大" width="420" height="200" tabindex="0" loading="lazy"><figcaption>放大</figcaption></figure>
<h2><a class="header-anchor" href="#编辑模式"><span></span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.inkcanvas.editingmode?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">编辑模式</a></h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Window.Resources</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">local:</span>NameList</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>NameListData<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Window.Resources</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.RowDefinitions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.RowDefinitions</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackPanel</span> <span class="token attr-name">VerticalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span> <span class="token attr-name">HorizontalAlignment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>画笔:<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ComboBox</span>
            <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span>
            <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Source={StaticResource NameListData}}<span class="token punctuation">"</span></span>
            <span class="token attr-name">SelectedItem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding EditingModel}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackPanel</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InkCanvas</span>
        <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myInkCanvas<span class="token punctuation">"</span></span>
        <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
        <span class="token attr-name">EditingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding EditingModel}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextBlock</span><span class="token punctuation">&gt;</span></span>Show text here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextBlock</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InkCanvas</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CanvasWindowViewModel</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler</span> PropertyChanged<span class="token punctuation">;</span>

     <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _editingModel<span class="token punctuation">;</span>

     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> EditingModel <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _editingModel<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">set</span> <span class="token punctuation">{</span> _editingModel <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
             PropertyChanged<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>EditingModel<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span> <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NameList</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">NameList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">base</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> names <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">InkCanvasEditingMode</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetFields</span><span class="token punctuation">(</span>BindingFlags<span class="token punctuation">.</span>Public <span class="token operator">|</span> BindingFlags<span class="token punctuation">.</span>Static<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>f <span class="token operator">=&gt;</span> f<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> name <span class="token keyword">in</span> names<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">Add</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_3.gif" alt="EditingModel" width="420" height="200" tabindex="0" loading="lazy"><figcaption>EditingModel</figcaption></figure>
<h2><a class="header-anchor" href="#画笔"><span></span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.inkcanvas.defaultdrawingattributes?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">画笔</a></h2>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Array</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyEditingModes<span class="token punctuation">"</span></span> <span class="token attr-name">Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type InkCanvasEditingMode}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Static</span> <span class="token attr-name">Member</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>InkCanvasEditingMode.Ink<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Static</span> <span class="token attr-name">Member</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>InkCanvasEditingMode.Select<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Static</span> <span class="token attr-name">Member</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>InkCanvasEditingMode.EraseByPoint<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Static</span> <span class="token attr-name">Member</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>InkCanvasEditingMode.EraseByStroke<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>Array</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Array</span> <span class="token attr-name"><span class="token namespace">x:</span>Key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyDrawingAttributes<span class="token punctuation">"</span></span> <span class="token attr-name">Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type DrawingAttributes}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingAttributes</span>
                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>
                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>
                <span class="token attr-name">FitToCurve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
                <span class="token attr-name">Color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingAttributes</span>
                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
                <span class="token attr-name">FitToCurve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
                <span class="token attr-name">Color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Blue<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingAttributes</span>
                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span>
                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span>
                <span class="token attr-name">FitToCurve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
                <span class="token attr-name">Color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingAttributes</span>
                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
                <span class="token attr-name">FitToCurve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
                <span class="token attr-name">Color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SpringGreen<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DrawingAttributes</span>
                <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
                <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>
                <span class="token attr-name">IgnorePressure</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
                <span class="token attr-name">IsHighlighter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
                <span class="token attr-name">StylusTip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Rectangle<span class="token punctuation">"</span></span>
                <span class="token attr-name">Color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Orchid<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>Array</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span> <span class="token attr-name">DataType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{x:Type DrawingAttributes}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Path=Height}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border.Background</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SolidColorBrush</span> <span class="token attr-name">Color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Path=Color}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border.Background</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ResourceDictionary</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UserControl.Resources</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>11*<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListBox</span>
        <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lbDrawingAttributes<span class="token punctuation">"</span></span>
        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
        <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource MyDrawingAttributes}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListBox</span>
        <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lbEditingMode<span class="token punctuation">"</span></span>
        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
        <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
        <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
        <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{StaticResource MyEditingModes}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InkCanvas</span>
        <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
        <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DarkSlateBlue<span class="token punctuation">"</span></span>
        <span class="token attr-name">DefaultDrawingAttributes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=lbDrawingAttributes, Path=SelectedItem}<span class="token punctuation">"</span></span>
        <span class="token attr-name">EditingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding ElementName=lbEditingMode, Path=SelectedItem}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InkCanvas</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_4.gif" alt="画笔" width="420" height="200" tabindex="0" loading="lazy"><figcaption>画笔</figcaption></figure>
<h2><a class="header-anchor" href="#手写识别"><span></span></a><a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/handwriting-recognition?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">手写识别</a></h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>Microsoft.Ink.dll</code>在<code>\Program Files\Common Files\Microsoft Shared\Ink</code>中找到</p>
</div>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Ink</span><span class="token punctuation">;</span>

<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">MemoryStream</span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    theInkCanvas<span class="token punctuation">.</span>Strokes<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> myInkCollector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InkCollector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> ink <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Ink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ink<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>ms<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">RecognizerContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RecognizerContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ink<span class="token punctuation">.</span>Strokes<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            context<span class="token punctuation">.</span>Strokes <span class="token operator">=</span> ink<span class="token punctuation">.</span>Strokes<span class="token punctuation">;</span>
            <span class="token class-name">RecognitionStatus</span> status<span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">Recognize</span><span class="token punctuation">(</span><span class="token keyword">out</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> RecognitionStatus<span class="token punctuation">.</span>NoError<span class="token punctuation">)</span>
                textBox1<span class="token punctuation">.</span>Text <span class="token operator">=</span> result<span class="token punctuation">.</span>TopString<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">"Recognition failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">"No stroke detected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_5.gif" alt="手写识别" width="420" height="200" tabindex="0" loading="lazy"><figcaption>手写识别</figcaption></figure>
<h2>画直线</h2>
<ol>
<li>设置InvCanvas.EditingModel=None</li>
<li>使用MVVM模式时，引入<code>Microsoft.Xaml.Behaviors.Wpf</code>包，将代码迁移到ViewModel中</li>
<li>需要三个基本事件<code>MouseLeftButtonUp</code>、<code>MouseMove</code>、<code>MouseLeftButtonDown</code>,由于MouseLeftButtonDown不触发，调整为PreviewMouseLeftButtonDown。</li>
</ol>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InkCanvas</span>
    <span class="token attr-name">EditingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>None<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>Interaction.Triggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>EventTrigger</span> <span class="token attr-name">EventName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PreviewMouseLeftButtonDown<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>CallMethodAction</span> <span class="token attr-name">MethodName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PreviewMouseLeftButtonDown<span class="token punctuation">"</span></span> <span class="token attr-name">TargetObject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>EventTrigger</span> <span class="token attr-name">EventName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MouseLeftButtonUp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>CallMethodAction</span> <span class="token attr-name">MethodName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MouseLeftButtonUp<span class="token punctuation">"</span></span> <span class="token attr-name">TargetObject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>EventTrigger</span> <span class="token attr-name">EventName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MouseMove<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">i:</span>CallMethodAction</span> <span class="token attr-name">MethodName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MouseMove<span class="token punctuation">"</span></span> <span class="token attr-name">TargetObject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding}<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">i:</span>Interaction.Triggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InkCanvas</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><code>36-40行代码</code>：这里用来处理画直线、箭头、矩形、圆形的部分，其余一致</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// 起始点</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token keyword">private</span> <span class="token class-name">Point</span> _startPoint<span class="token punctuation">;</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// 最后的画笔</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token keyword">private</span> <span class="token class-name">Stroke<span class="token punctuation">?</span></span> _drawerLastStroke<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// 开始绘画标识</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> _isDrawing<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PreviewMouseLeftButtonDown</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">MouseButtonEventArgs</span> e<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sender <span class="token keyword">is</span> <span class="token class-name">InkCanvas</span> main<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>LeftButton<span class="token operator">==</span>MouseButtonState<span class="token punctuation">.</span>Pressed<span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          _startPoint <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">GetPosition</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>
          _isDrawing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          _drawerLastStroke <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MouseLeftButtonUp</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">MouseButtonEventArgs</span> e<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      _isDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MouseMove</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">MouseEventArgs</span> e<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_isDrawing<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sender <span class="token keyword">is</span> <span class="token class-name">InkCanvas</span> main<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>LeftButton<span class="token operator">==</span>MouseButtonState<span class="token punctuation">.</span>Pressed<span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          <span class="token class-name"><span class="token keyword">var</span></span> endPoint <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">GetPosition</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span> pointList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span>
          <span class="token punctuation">{</span>
              <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>

          <span class="token class-name">StylusPointCollection</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StylusPointCollection</span><span class="token punctuation">(</span>pointList<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name"><span class="token keyword">var</span></span> stroke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Stroke</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span> <span class="token punctuation">;</span>

          <span class="token keyword">if</span> <span class="token punctuation">(</span>_drawerLastStroke <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
          <span class="token punctuation">{</span>
              main<span class="token punctuation">.</span>Strokes<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>_drawerLastStroke<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          main<span class="token punctuation">.</span>Strokes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>stroke<span class="token punctuation">)</span><span class="token punctuation">;</span>

          _drawerLastStroke <span class="token operator">=</span> stroke<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_6.gif" alt="画直线" width="420" height="200" tabindex="0" loading="lazy"><figcaption>画直线</figcaption></figure>
<h2>画箭头</h2>
<p>画箭头与画直线大部分重合，只要在终点出处理画出箭头的形状即可。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">double</span></span> w <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">double</span></span> theta <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Atan2</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>Y <span class="token operator">-</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> _startPoint<span class="token punctuation">.</span>X <span class="token operator">-</span> endPoint<span class="token punctuation">.</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">double</span></span> sint <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Sin</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">double</span></span> cost <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Cos</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span> pointList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X <span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X <span class="token operator">+</span> <span class="token punctuation">(</span>w<span class="token operator">*</span>cost <span class="token operator">-</span> h<span class="token operator">*</span>sint<span class="token punctuation">)</span><span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y <span class="token operator">+</span> <span class="token punctuation">(</span>w<span class="token operator">*</span>sint <span class="token operator">+</span> h<span class="token operator">*</span>cost<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span>endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X <span class="token operator">+</span> <span class="token punctuation">(</span>w<span class="token operator">*</span>cost <span class="token operator">+</span> h<span class="token operator">*</span>sint<span class="token punctuation">)</span><span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y <span class="token operator">-</span> <span class="token punctuation">(</span>h<span class="token operator">*</span>cost <span class="token operator">-</span> w<span class="token operator">*</span>sint<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_7.gif" alt="画箭头" width="420" height="200" tabindex="0" loading="lazy"><figcaption>画箭头</figcaption></figure>
<h2>画矩形</h2>
<p>画矩形与画直线大部分重合，只要在终点出处理画出矩形的形状即可。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span> pointList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_8.gif" alt="画箭头" width="420" height="200" tabindex="0" loading="lazy"><figcaption>画箭头</figcaption></figure>
<h2>画圆形</h2>
<p>画圆形与画直线大部分重合，只要在终点出处理画出圆形的形状即可。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">double</span></span> a <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X <span class="token operator">-</span> _startPoint<span class="token punctuation">.</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">double</span></span> b <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>Y <span class="token operator">-</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span> pointList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Point<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">double</span></span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> r <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span>PI<span class="token punctuation">;</span> r <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token number">0.01</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     pointList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Point</span><span class="token punctuation">(</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X <span class="token operator">+</span> endPoint<span class="token punctuation">.</span>X<span class="token punctuation">)</span> <span class="token operator">+</span> a <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">Cos</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>Y <span class="token operator">+</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span> <span class="token operator">+</span> b <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">Sin</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_9.gif" alt="画圆形" width="420" height="200" tabindex="0" loading="lazy"><figcaption>画圆形</figcaption></figure>
<h2>添加文本</h2>
<p>添加文本与画矩形大部分重合，只要在<code>MouseLeftButtonUp</code>里处理添加文本框显示即可。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MouseLeftButtonUp</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">MouseButtonEventArgs</span> e<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sender <span class="token keyword">is</span> <span class="token class-name">InkCanvas</span> main<span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          main<span class="token punctuation">.</span>Strokes<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>_drawerLastStroke<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name"><span class="token keyword">var</span></span> endPoint <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">GetPosition</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name"><span class="token keyword">var</span></span> textBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TextBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">{</span>
              TextWrapping<span class="token operator">=</span> TextWrapping<span class="token punctuation">.</span>Wrap<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
          textBox<span class="token punctuation">.</span>Width <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>X <span class="token operator">-</span> _startPoint<span class="token punctuation">.</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span>
          textBox<span class="token punctuation">.</span>Height <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span>endPoint<span class="token punctuation">.</span>Y <span class="token operator">-</span> _startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>textBox<span class="token punctuation">.</span>Width <span class="token operator">&lt;=</span> <span class="token number">100</span> <span class="token operator">||</span> textBox<span class="token punctuation">.</span>Height <span class="token operator">&lt;=</span> <span class="token number">40</span><span class="token punctuation">)</span>
          <span class="token punctuation">{</span>
              textBox<span class="token punctuation">.</span>Width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
              textBox<span class="token punctuation">.</span>Height <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          InkCanvas<span class="token punctuation">.</span><span class="token function">SetLeft</span><span class="token punctuation">(</span>textBox<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>X<span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>X<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          InkCanvas<span class="token punctuation">.</span><span class="token function">SetTop</span><span class="token punctuation">(</span>textBox<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span>_startPoint<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> endPoint<span class="token punctuation">.</span>Y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          main<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>textBox<span class="token punctuation">)</span><span class="token punctuation">;</span>
          textBox<span class="token punctuation">.</span><span class="token function">Focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      _isDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      _drawerLastStroke <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/wpf/canvas_10.gif" alt="添加文本" width="420" height="200" tabindex="0" loading="lazy"><figcaption>添加文本</figcaption></figure>
<h2>保存画布</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token class-name"><span class="token keyword">var</span></span> saveFileDialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Microsoft<span class="token punctuation">.</span>Win32<span class="token punctuation">.</span>SaveFileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     DefaultExt <span class="token operator">=</span><span class="token string">".png"</span> <span class="token punctuation">,</span>
     Filter <span class="token operator">=</span> <span class="token string">"PNG(*.png)|*png"</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token class-name"><span class="token keyword">var</span></span> dialog<span class="token operator">=</span> saveFileDialog<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>dialog <span class="token operator">!=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

 <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> saveFileDialog<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token class-name"><span class="token keyword">var</span></span> rtb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RenderTargetBitmap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>main<span class="token punctuation">.</span>ActualWidth<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>main<span class="token punctuation">.</span>ActualHeight<span class="token punctuation">,</span> <span class="token number">96d</span><span class="token punctuation">,</span> <span class="token number">96d</span><span class="token punctuation">,</span> PixelFormats<span class="token punctuation">.</span>Pbgra32<span class="token punctuation">)</span><span class="token punctuation">;</span>
     rtb<span class="token punctuation">.</span><span class="token function">Render</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     <span class="token class-name"><span class="token keyword">var</span></span> encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PngBitmapEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     encoder<span class="token punctuation">.</span>Frames<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>BitmapFrame<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>rtb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     encoder<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/canvas_1.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>命令</title>
      <link>https://ilyl.life/cs/wpf/command.html</link>
      <guid>https://ilyl.life/cs/wpf/command.html</guid>
      <source url="https://ilyl.life/rss.xml">命令</source>
      <description>没有使用第三方框架提供的命令，自带的命令在使用中有点繁琐。 需要对ICommand命令进行包装。 在写demo时很方便使用。 基本命令 将ICommand里的Execute执行方法迁移到MVVM中。 异步编程 定义异步命令接口，继承ICommand，添加一个ExecuteAsync方法 添加异步命令抽象类 异步执行具体命令类，包括取消，异步状态通知等 ...</description>
      <category>C#</category>
      <pubDate>Fri, 11 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>没有使用第三方框架提供的命令，自带的命令在使用中有点繁琐。</p>
<p>需要对<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/wpf/advanced/commanding-overview?view=netframeworkdesktop-4.8" target="_blank" rel="noopener noreferrer">ICommand</a>命令进行包装。</p>
<p>在写demo时很方便使用。</p>
<h2>基本命令</h2>
<p>将<code>ICommand</code>里的<code>Execute</code>执行方法迁移到MVVM中。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RelayCommand</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICommand</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">private</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">?</span><span class="token punctuation">&gt;</span></span> _execute<span class="token punctuation">;</span>
     <span class="token keyword">private</span> <span class="token class-name">Predicate<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">?</span><span class="token punctuation">&gt;</span></span> _canExecute<span class="token punctuation">;</span>

     <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token return-type class-name">EventHandler<span class="token punctuation">?</span></span> CanExecuteChanged<span class="token punctuation">{</span>
         <span class="token keyword">add</span>
         <span class="token punctuation">{</span>
             CommandManager<span class="token punctuation">.</span>RequerySuggested <span class="token operator">+=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">remove</span>
         <span class="token punctuation">{</span>
             CommandManager<span class="token punctuation">.</span>RequerySuggested <span class="token operator">-=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token function">RelayCommand</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">?</span><span class="token punctuation">&gt;</span></span> execute<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">(</span>execute<span class="token punctuation">,</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token function">RelayCommand</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">?</span><span class="token punctuation">&gt;</span></span> execute<span class="token punctuation">,</span><span class="token class-name">Predicate<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">?</span><span class="token punctuation">&gt;</span></span> canExecute<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>execute<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>execute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>canExecute<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>canExecute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         _execute <span class="token operator">=</span> execute<span class="token punctuation">;</span>
         _canExecute <span class="token operator">=</span> canExecute<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token function">_canExecute</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token function">_execute</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div><h2><a class="header-anchor" href="#异步编程"><span></span></a><a href="https://learn.microsoft.com/zh-cn/archive/msdn-magazine/2014/april/async-programming-patterns-for-asynchronous-mvvm-applications-commands" target="_blank" rel="noopener noreferrer">异步编程</a></h2>
<ol>
<li>
<p>定义异步命令接口，继承<code>ICommand</code>，添加一个<code>ExecuteAsync</code>方法</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IAsyncCommand</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">ICommand</span></span><span class="token punctuation">{</span>
    <span class="token return-type class-name">Task</span> <span class="token function">ExecuteAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>添加异步命令抽象类</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AsyncCommandBase</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IAsyncCommand</span></span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">await</span> <span class="token function">ExecuteAsync</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token return-type class-name">EventHandler<span class="token punctuation">?</span></span> CanExecuteChanged<span class="token punctuation">{</span>
        <span class="token keyword">add</span> <span class="token punctuation">{</span> CommandManager<span class="token punctuation">.</span>RequerySuggested <span class="token operator">+=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">remove</span> <span class="token punctuation">{</span> CommandManager<span class="token punctuation">.</span>RequerySuggested <span class="token operator">-=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name">Task</span> <span class="token function">ExecuteAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        CommandManager<span class="token punctuation">.</span><span class="token function">InvalidateRequerySuggested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>异步执行具体命令类，包括取消，异步状态通知等</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncCommand<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AsyncCommandBase</span><span class="token punctuation">,</span> <span class="token class-name">INotifyPropertyChanged</span></span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">Func<span class="token punctuation">&lt;</span>CancellationToken<span class="token punctuation">,</span>Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> _command<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">CancelAsyncCommand</span> _canncelCommand<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">NotifyTaskCompletion<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> _execution<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">AsyncCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>CancellationToken<span class="token punctuation">,</span>Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">{</span>
        _command <span class="token operator">=</span> command<span class="token punctuation">;</span>
        _canncelCommand<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancelAsyncCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> Execution <span class="token operator">==</span> <span class="token keyword">null</span><span class="token operator">||</span> Execution<span class="token punctuation">.</span>IsCompleted<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">ExecuteAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">{</span>
        _canncelCommand<span class="token punctuation">.</span><span class="token function">NotifyCommandStarting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Execution <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotifyTaskCompletion<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token function">_command</span><span class="token punctuation">(</span>_canncelCommand<span class="token punctuation">.</span>Token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> Execution<span class="token punctuation">.</span>TaskCompletion<span class="token punctuation">;</span>

        _canncelCommand<span class="token punctuation">.</span><span class="token function">NotifyCommandFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">ICommand</span> CancelCommand <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _canncelCommand<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">NotifyTaskCompletion<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> Execution<span class="token punctuation">{</span>
        <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _execution<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token keyword">set</span>
        <span class="token punctuation">{</span>
            _execution <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
            <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler<span class="token punctuation">?</span></span> PropertyChanged<span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">virtual</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CallerMemberName</span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> propertyName <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        PropertyChanged<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">CancelAsyncCommand</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICommand</span></span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">CancellationTokenSource</span> _cts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationTokenSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">bool</span></span> _commandExecuting<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token return-type class-name">CancellationToken</span> Token <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _cts<span class="token punctuation">.</span>Token<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">NotifyCommandStarting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            _commandExecuting <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_cts<span class="token punctuation">.</span>IsCancellationRequested<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            _cts<span class="token operator">=</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationTokenSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">NotifyCommandFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            _commandExecuting <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token return-type class-name">EventHandler<span class="token punctuation">?</span></span> CanExecuteChanged <span class="token punctuation">{</span>
            <span class="token keyword">add</span> <span class="token punctuation">{</span> CommandManager<span class="token punctuation">.</span>RequerySuggested <span class="token operator">+=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">remove</span> <span class="token punctuation">{</span> CommandManager<span class="token punctuation">.</span>RequerySuggested <span class="token operator">-=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            CommandManager<span class="token punctuation">.</span><span class="token function">InvalidateRequerySuggested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token return-type class-name"><span class="token keyword">bool</span></span> ICommand<span class="token punctuation">.</span><span class="token function">CanExecute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> _commandExecuting <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>_cts<span class="token punctuation">.</span>IsCancellationRequested<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token return-type class-name"><span class="token keyword">void</span></span> ICommand<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> parameter<span class="token punctuation">)</span><span class="token punctuation">{</span>
            _cts<span class="token punctuation">.</span><span class="token function">Cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">RaiseCanExecuteChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AsyncCommand</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">AsyncCommand<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>Task<span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncCommand<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">async</span> _ <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">await</span> <span class="token function">command</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">AsyncCommand<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">Create</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncCommand<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>_ <span class="token operator">=&gt;</span> <span class="token function">command</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">AsyncCommand<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>CancellationToken<span class="token punctuation">,</span>Task<span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncCommand<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">async</span> token <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">await</span> <span class="token function">command</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">AsyncCommand<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">Create</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>CancellationToken<span class="token punctuation">,</span>Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AsyncCommand<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
<li>
<p>异步执行状态通知</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">NotifyTaskCompletion<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">NotifyTaskCompletion</span><span class="token punctuation">(</span><span class="token class-name">Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span><span class="token punctuation">{</span>
        Task <span class="token operator">=</span> task<span class="token punctuation">;</span>
        TaskCompletion <span class="token operator">=</span> <span class="token function">WatchTaskAsync</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">WatchTaskAsync</span><span class="token punctuation">(</span><span class="token class-name">Task</span> task<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token keyword">await</span> task<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

        <span class="token class-name"><span class="token keyword">var</span></span> propertyChanged <span class="token operator">=</span> PropertyChanged<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>propertyChanged <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"Status"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"IsCompleted"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"IsNotCompleted"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>IsCanceled<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"IsCanceled"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">.</span>IsFaulted<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"IsFaulted"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"Exception"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"InnerException"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"ErrorMessage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"IsSuccessfullyCompleted"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">propertyChanged</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span><span class="token string">"Result"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TResult<span class="token punctuation">&gt;</span></span> Task <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> TaskCompletion <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">private</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">TResult</span> Result<span class="token punctuation">{</span>
        <span class="token keyword">get</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>Task<span class="token punctuation">.</span>Status <span class="token operator">==</span> TaskStatus<span class="token punctuation">.</span>RanToCompletion<span class="token punctuation">)</span> <span class="token punctuation">?</span>
                Task<span class="token punctuation">.</span>Result <span class="token punctuation">:</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token type-expression class-name">TResult</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">TaskStatus</span> Status <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Task<span class="token punctuation">.</span>Status<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsCompleted <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Task<span class="token punctuation">.</span>IsCompleted<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsNotCompleted <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">!</span>Task<span class="token punctuation">.</span>IsCompleted<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsSuccessfullyCompleted<span class="token punctuation">{</span>
        <span class="token keyword">get</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Task<span class="token punctuation">.</span>Status <span class="token operator">==</span>
                TaskStatus<span class="token punctuation">.</span>RanToCompletion<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsCanceled <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Task<span class="token punctuation">.</span>IsCanceled<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsFaulted <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Task<span class="token punctuation">.</span>IsFaulted<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">AggregateException</span> Exception <span class="token punctuation">{</span> <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Task<span class="token punctuation">.</span>Exception<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Exception</span> InnerException<span class="token punctuation">{</span>
        <span class="token keyword">get</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>Exception <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">?</span>
                <span class="token keyword">null</span> <span class="token punctuation">:</span> Exception<span class="token punctuation">.</span>InnerException<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ErrorMessage<span class="token punctuation">{</span>
        <span class="token keyword">get</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>InnerException <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">?</span>
                <span class="token keyword">null</span> <span class="token punctuation">:</span> InnerException<span class="token punctuation">.</span>Message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler</span> PropertyChanged<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>屏幕比</title>
      <link>https://ilyl.life/cs/wpf/ratio.html</link>
      <guid>https://ilyl.life/cs/wpf/ratio.html</guid>
      <source url="https://ilyl.life/rss.xml">屏幕比</source>
      <description>之前使用WPF配合FFMPEG进行转码显示海康视频，本次将转码的视频近一步处理，按指定比例显示。 屏幕比 屏幕比例即屏幕的宽度和高度的比例。 常见的有:4:3,16:9。 这里需要用到它们的比值即： 4:3: 4/3=1.33D 16:9:16/9=1.77D 转换方式 当视频源固定按指定屏幕比显示转换有两种方式： 使用FFMPEG进行转换时同时更改输...</description>
      <category>C#</category>
      <pubDate>Thu, 10 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>之前使用WPF配合FFMPEG进行转码显示海康视频，本次将转码的视频近一步处理，按指定比例显示。</p>
<h2>屏幕比</h2>
<p>屏幕比例即屏幕的宽度和高度的比例。</p>
<p>常见的有:<code>4:3</code>,<code>16:9</code>。</p>
<p>这里需要用到它们的比值即：</p>
<p><code>4:3</code>: 4/3=1.33D</p>
<p><code>16:9</code>:16/9=1.77D</p>
<h2>转换方式</h2>
<p>当视频源固定按指定屏幕比显示转换有两种方式：</p>
<ol>
<li>使用FFMPEG进行转换时同时更改输出大小</li>
<li>通过布局调整显示的大小</li>
</ol>
<p>优缺点各自取舍。</p>
<p>例如：当预览按指定屏幕比显示时，两种方式都没问题，当对预览的视频进行截图或者录像时就产生差异。</p>
<p>这里又涉及到另外一个问题，<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.image.stretch?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">Image.Stretch</a>属性，<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.media.stretch?view=windowsdesktop-7.0#system-windows-media-stretch-uniform" target="_blank" rel="noopener noreferrer">Stretch枚举</a>效果。</p>
<p>上部分显示视频通过装饰器调整显示比例，下部分视频为原始视频大小,只调整了Stretch模式。</p>
<ol>
<li>
<p><code>Stretch="None"</code>：Image比输出源区域小，不能完整的显示视频源大小</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/none.gif" alt="Stretch=&quot;None&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch="None"</figcaption></figure>
</li>
<li>
<p><code>Stretch="Fill"</code>：Image能完整的显示视频源大小，但是区分不了屏幕比</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/fill.gif" alt="Stretch=&quot;Fill&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch="Fill"</figcaption></figure>
</li>
<li>
<p><code>Stretch="Uniform"</code>：Image能完整的显示视频源大小，也能区分屏幕比，但是需要调整视频源大小</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/uniform.gif" alt="Stretch=&quot;Uniform&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch="Uniform"</figcaption></figure>
</li>
<li>
<p><code>Stretch="UniformToFill"</code>：Image能完整的显示视频源大小，但是区分不了屏幕比</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/uniformtofill.gif" alt="Stretch=&quot;UniformToFill&quot;" width="420" height="200" tabindex="0" loading="lazy"><figcaption>Stretch="UniformToFill"</figcaption></figure>
</li>
</ol>
<p>这里通过布局的方式，完成最终屏蔽比显示</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/ratio.gif" alt="屏幕比" width="420" height="200" tabindex="0" loading="lazy"><figcaption>屏幕比</figcaption></figure>
<h3>布局</h3>
<p>通过布局调整屏幕比显示效果，即视频的输出源不变、只改变显示的数据源大小。</p>
<p>以视频源的宽度<code>640</code>，高度<code>360</code>为例：</p>
<table>
<thead>
<tr>
<th style="text-align:left">模式</th>
<th style="text-align:left">屏幕比</th>
<th style="text-align:left">宽度</th>
<th style="text-align:left">高度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">横向拉伸</td>
<td style="text-align:left"><code>16:9</code></td>
<td style="text-align:left">640</td>
<td style="text-align:left">360</td>
</tr>
<tr>
<td style="text-align:left">横向拉伸</td>
<td style="text-align:left"><code>4:3</code></td>
<td style="text-align:left"><code>478</code></td>
<td style="text-align:left">360</td>
</tr>
<tr>
<td style="text-align:left">纵向拉伸</td>
<td style="text-align:left"><code>16:9</code></td>
<td style="text-align:left">640</td>
<td style="text-align:left">360</td>
</tr>
<tr>
<td style="text-align:left">纵向拉伸</td>
<td style="text-align:left"><code>4:3</code></td>
<td style="text-align:left">640</td>
<td style="text-align:left"><code>480</code></td>
</tr>
</tbody>
</table>
<p>其中，黑色部分是显示的区域，绿色部分为视频输出显示的区域。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/ratio_layout.gif" alt="屏幕比布局" width="420" height="200" tabindex="0" loading="lazy"><figcaption>屏幕比布局</figcaption></figure>
<p>关键在于<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.decorator?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">Decorator</a>装饰器</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span>
    <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid_Container<span class="token punctuation">"</span></span>
    <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
    <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">theme:</span>RatioBox</span> <span class="token attr-name">Ratio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding Ratio}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Border</span> <span class="token attr-name">Background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Green<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span>
                <span class="token attr-name">Panel.ZIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
                <span class="token attr-name">RenderOptions.BitmapScalingMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HighQuality<span class="token punctuation">"</span></span>
                <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{Binding VedioSource}<span class="token punctuation">"</span></span>
                <span class="token attr-name">Stretch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fill<span class="token punctuation">"</span></span>
                <span class="token attr-name">UseLayoutRounding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">theme:</span>RatioBox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Border</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RatioBox</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Decorator</span></span>
 <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">double</span></span> Ratio
     <span class="token punctuation">{</span>
         <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">GetValue</span><span class="token punctuation">(</span>RatioProperty<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
         <span class="token keyword">set</span> <span class="token punctuation">{</span> <span class="token function">SetValue</span><span class="token punctuation">(</span>RatioProperty<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name">DependencyProperty</span> RatioProperty <span class="token operator">=</span>
         DependencyProperty<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token string">"Ratio"</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">double</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">RatioBox</span><span class="token punctuation">)</span>
             <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FrameworkPropertyMetadata</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span>NaN<span class="token punctuation">,</span> 
                 FrameworkPropertyMetadataOptions<span class="token punctuation">.</span>AffectsMeasure <span class="token operator">|</span> FrameworkPropertyMetadataOptions<span class="token punctuation">.</span>AffectsArrange<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Size</span> <span class="token function">MeasureOverride</span><span class="token punctuation">(</span><span class="token class-name">Size</span> constraint<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span><span class="token function">IsNaN</span><span class="token punctuation">(</span>Ratio<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">{</span>
             <span class="token keyword">return</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">MeasureOverride</span><span class="token punctuation">(</span>constraint<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span>
         <span class="token punctuation">{</span>
             <span class="token class-name">UIElement</span> child <span class="token operator">=</span> Child<span class="token punctuation">;</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> h <span class="token operator">=</span> constraint<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> w <span class="token operator">=</span> h <span class="token operator">*</span> Ratio<span class="token punctuation">;</span>
                 <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&gt;</span> constraint<span class="token punctuation">.</span>Width<span class="token punctuation">)</span>
                 <span class="token punctuation">{</span>
                     w <span class="token operator">=</span> constraint<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
                     h <span class="token operator">=</span> w <span class="token operator">/</span> Ratio<span class="token punctuation">;</span>
                 <span class="token punctuation">}</span>
                 child<span class="token punctuation">.</span><span class="token function">Measure</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
             <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">Size</span> <span class="token function">ArrangeOverride</span><span class="token punctuation">(</span><span class="token class-name">Size</span> arrangeSize<span class="token punctuation">)</span>
     <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span><span class="token function">IsNaN</span><span class="token punctuation">(</span>Ratio<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">{</span>
             <span class="token keyword">return</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ArrangeOverride</span><span class="token punctuation">(</span>arrangeSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span>
         <span class="token punctuation">{</span>
             <span class="token class-name">UIElement</span> child <span class="token operator">=</span> Child<span class="token punctuation">;</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
             <span class="token punctuation">{</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> h <span class="token operator">=</span> arrangeSize<span class="token punctuation">.</span>Height<span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> w <span class="token operator">=</span> h <span class="token operator">*</span> Ratio<span class="token punctuation">;</span>
                 <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">&gt;</span> arrangeSize<span class="token punctuation">.</span>Width<span class="token punctuation">)</span>
                 <span class="token punctuation">{</span>
                     w <span class="token operator">=</span> arrangeSize<span class="token punctuation">.</span>Width<span class="token punctuation">;</span>
                     h <span class="token operator">=</span> w <span class="token operator">/</span> Ratio<span class="token punctuation">;</span>
                 <span class="token punctuation">}</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> x <span class="token operator">=</span> <span class="token punctuation">(</span>arrangeSize<span class="token punctuation">.</span>Width <span class="token operator">-</span> w<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">double</span></span> y <span class="token operator">=</span> <span class="token punctuation">(</span>arrangeSize<span class="token punctuation">.</span>Height <span class="token operator">-</span> h<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
                 <span class="token class-name"><span class="token keyword">var</span></span> cb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
                 child<span class="token punctuation">.</span><span class="token function">Arrange</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
             <span class="token keyword">return</span> arrangeSize<span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div><h3>FFMPEG</h3>
<p>通过调整<code>AVFrame</code>类型的参数即可，改变输出源大小。</p>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/none.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>element-plus</title>
      <link>https://ilyl.life/web/vue/element-plus.html</link>
      <guid>https://ilyl.life/web/vue/element-plus.html</guid>
      <source url="https://ilyl.life/rss.xml">element-plus</source>
      <description> </description>
      <category>Web</category>
      <pubDate>Fri, 28 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
]]></content:encoded>
    </item>
    <item>
      <title>必填项*</title>
      <link>https://ilyl.life/web/vue/star.html</link>
      <guid>https://ilyl.life/web/vue/star.html</guid>
      <source url="https://ilyl.life/rss.xml">必填项*</source>
      <description>在某些情况下需要在内容的前方加一些特殊内容显示，使用::before能很好的解决这个问题。 </description>
      <category>Web</category>
      <pubDate>Fri, 28 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在某些情况下需要在内容的前方加一些特殊内容显示，使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::before" target="_blank" rel="noopener noreferrer">::before</a>能很好的解决这个问题。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> label<span class="token punctuation">.</span>xrequired<span class="token punctuation">::</span>before <span class="token punctuation">{</span>
    color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    content<span class="token punctuation">:</span> <span class="token char">'*'</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>私有仓库</title>
      <link>https://ilyl.life/tools/docker/registry.html</link>
      <guid>https://ilyl.life/tools/docker/registry.html</guid>
      <source url="https://ilyl.life/rss.xml">私有仓库</source>
      <description>为了使用自己开发的而生。 同时解决无法登录及发布Docker Hub的问题。 包括SSL、基本认证、Docker Registry UI、删除镜像内容。 更多的配置可在Docker Resistry和Docker Resistry UI找到。 docker-compose.yml 第8行: Registry UI的域名SSL证书目录 第9行: 自己的N...</description>
      <category>DOCKER</category>
      <pubDate>Mon, 17 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>为了使用自己开发的<a href="/tools/docker/aliyun-ddns.html" target="_blank">阿里云解析</a>而生。</p>
<p>同时解决无法登录及发布Docker Hub的问题。</p>
<p>包括SSL、基本认证、Docker Registry UI、删除镜像内容。</p>
<p>更多的配置可在<a href="https://docs.docker.com/registry/deploying/" target="_blank" rel="noopener noreferrer">Docker Resistry</a>和<a href="https://github.com/Joxit/docker-registry-ui" target="_blank" rel="noopener noreferrer">Docker Resistry UI</a>找到。</p>
<h2>docker-compose.yml</h2>
<ul>
<li><code>第8行</code>: Registry UI的域名SSL证书目录</li>
<li><code>第9行</code>: 自己的Nginx配置文件</li>
<li><code>第13行</code>: Registry的URL地址</li>
<li><code>第29行</code>: Registry的仓库存储目录</li>
<li><code>第30行</code>: Registry的域名SSL证书目录</li>
<li><code>第31行</code>: Registry的基本认证目录</li>
<li><code>第33行</code>: Registry允许跨域访问的地址</li>
</ul>
<div class="language-yaml" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">registry-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> REGISTRY_UI
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'joxit/docker-registry-ui:2.5.2'</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> &lt;SSL证书目录<span class="token punctuation">&gt;</span><span class="token punctuation">:</span>/etc/nginx/certs
      <span class="token punctuation">-</span> &lt;nginx的conf.d配置目录<span class="token punctuation">&gt;</span><span class="token punctuation">:</span>/etc/nginx/conf.d/
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 443<span class="token punctuation">:</span><span class="token number">443</span>
     <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> NGINX_PROXY_PASS_URL=&lt;REGISTRY的URL<span class="token punctuation">&gt;</span>
      <span class="token punctuation">-</span> SHOW_CATALOG_NB_TAGS=false
      <span class="token punctuation">-</span> DELETE_IMAGES=true
      <span class="token punctuation">-</span> REGISTRY_TITLE=Neverland
      <span class="token punctuation">-</span> SINGLE_REGISTRY=true
      <span class="token punctuation">-</span> CATALOG_MIN_BRANCHES=1
      <span class="token punctuation">-</span> CATALOG_MAX_BRANCHES=1
      <span class="token punctuation">-</span> CATALOG_ELEMENTS_LIMIT=1000
      <span class="token punctuation">-</span> SHOW_CONTENT_DIGEST=true
      <span class="token punctuation">-</span> TAGLIST_PAGE_SIZE=100
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> registry
  <span class="token key atrule">registry</span><span class="token punctuation">:</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> REGISTRY
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'registry:2.8.2'</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> &lt;Registry存储目录<span class="token punctuation">&gt;</span><span class="token punctuation">:</span>/var/lib/registry
      <span class="token punctuation">-</span> &lt;Registry SSL证书目录<span class="token punctuation">&gt;</span><span class="token punctuation">:</span>/certs
      <span class="token punctuation">-</span> &lt;Registry 用户认证目录<span class="token punctuation">&gt;</span><span class="token punctuation">:</span>/auth
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> REGISTRY_HTTP_HEADERS_Access<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Allow<span class="token punctuation">-</span>Origin=<span class="token punctuation">[</span>&lt;Docker Registry UI地址<span class="token punctuation">&gt;</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> REGISTRY_HTTP_ADDR=0.0.0.0<span class="token punctuation">:</span><span class="token number">443</span>
      <span class="token punctuation">-</span> REGISTRY_HTTP_TLS_CERTIFICATE=/certs/docker.pem
      <span class="token punctuation">-</span> REGISTRY_HTTP_TLS_KEY=/certs/docker.key
      <span class="token punctuation">-</span> REGISTRY_AUTH=htpasswd
      <span class="token punctuation">-</span> REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm
      <span class="token punctuation">-</span> REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
      <span class="token punctuation">-</span> REGISTRY_HTTP_HEADERS_Access<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Allow<span class="token punctuation">-</span>Methods=<span class="token punctuation">[</span><span class="token string">'HEAD'</span><span class="token punctuation">,</span> <span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'OPTIONS'</span><span class="token punctuation">,</span> <span class="token string">'DELETE'</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> REGISTRY_HTTP_HEADERS_Access<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Allow<span class="token punctuation">-</span>Credentials=<span class="token punctuation">[</span><span class="token string">'true'</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> REGISTRY_HTTP_HEADERS_Access<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Expose<span class="token punctuation">-</span>Headers=<span class="token punctuation">[</span><span class="token string">'Docker-Content-Digest'</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> REGISTRY_STORAGE_DELETE_ENABLED=true
      <span class="token punctuation">-</span> REGISTRY_HTTP_HEADERS_Access<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Allow<span class="token punctuation">-</span>Headers<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Allow<span class="token punctuation">-</span>Headers=<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">,</span> <span class="token string">'Accept'</span><span class="token punctuation">,</span> <span class="token string">'Cache-Control'</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> REGISTRY_HTTP_HEADERS_X<span class="token punctuation">-</span>Content<span class="token punctuation">-</span>Type<span class="token punctuation">-</span>Options=<span class="token punctuation">[</span>nosniff<span class="token punctuation">]</span>
      <span class="token punctuation">-</span> Access<span class="token punctuation">-</span>Control<span class="token punctuation">-</span>Max<span class="token punctuation">-</span>Age=<span class="token punctuation">[</span><span class="token number">1728000</span><span class="token punctuation">]</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 443<span class="token punctuation">:</span><span class="token number">443</span>  
</code></pre></div><h2><a class="header-anchor" href="#docker-registry"><span></span></a><a href="https://docs.docker.com/registry/deploying/" target="_blank" rel="noopener noreferrer">Docker Registry</a></h2>
<h3>拉取Registry</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker pull registry:latest
</code></pre></div><h3>启动Registry</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker run -d \
  --restart=always \
  --name registry \
  -p 5000:5000 \
  registry:latest
</code></pre></div><h3>预览Registry</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>curl http://127.0.0.1:5000/v2/_catalog
</code></pre></div><p>返回:</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>StatusCode        : 200
StatusDescription : OK
Content           : {"repositories":[]}

RawContent        : HTTP/1.1 200 OK
                    Docker-Distribution-Api-Version: registry/2.0
                    X-Content-Type-Options: nosniff
                    Content-Length: 25
                    Content-Type: application/json; charset=utf-8
                    Date: ... GMT...
Forms             : {}
Headers           : {[Docker-Distribution-Api-Version, registry/2.0], [X-Content-Type-Options, nosniff], [Content-Length, 25], [Content-Type, application/json; charset=utf-8]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        : System.__ComObject
RawContentLength  : 25
</code></pre></div><h3><a class="header-anchor" href="#修改配置-不安全"><span></span></a><a href="https://docs.docker.com/registry/insecure/" target="_blank" rel="noopener noreferrer">修改配置(<code>不安全</code>)</a></h3>
<p>打开<code>daemon.json</code>文件或者在Docker Desktop的<code>Docker Engine</code>添加如下配置，SSL无需此配置。</p>
<div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">"insecure-registries"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">"http://127.0.0.1:5000"</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre></div><h3>跨域</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>-e REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin="['*']"
</code></pre></div><h3>添加Docker Registry SSL</h3>
<p>证书从服务提供商获取，<a href="/tools/nas/domain.html#ssl" target="_blank">示例</a></p>
<p><code>.crt</code>证书大部分包含中间证书,所以这里用<code>.pem</code>来代替</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker run -d \
  --restart=always \
  --name registry \
  -v "$(pwd)"/certs:/certs \
  -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \
  -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.pem \
  -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
  -p 443:443 \
  registry:2
</code></pre></div><h3><a class="header-anchor" href="#添加认证"><span></span></a><a href="https://docs.docker.com/registry/deploying/#restricting-access" target="_blank" rel="noopener noreferrer">添加认证</a></h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>只用Docker界面配置时，可以将保存的用户密码文件<code>auth</code>目录挂载即可。</p>
</div>
<p>步骤按官网如下:</p>
<ol>
<li>
<p>为用户创建一个密码文件，其中包含一个条目，密码：testusertestpassword</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>mkdir auth
docker run \
  --entrypoint htpasswd \
  httpd:2 -Bbn testuser testpassword &gt; auth/htpasswd
</code></pre></div><p>在 Windows 上，请确保输出文件已正确编码：</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker run --rm --entrypoint htpasswd httpd:2 -Bbn testuser testpassword | Set-Content -Encoding ASCII auth/htpasswd
</code></pre></div></li>
<li>
<p>停止注册表。</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker container stop registry
</code></pre></div></li>
<li>
<p>使用基本身份验证启动注册表。</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker run -d \
  -p 5000:5000 \
  --restart=always \
  --name registry \
  -v "$(pwd)"/auth:/auth \
  -e "REGISTRY_AUTH=htpasswd" \
  -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
  -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
  -v "$(pwd)"/certs:/certs \
  -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
  -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
  registry:2
</code></pre></div></li>
<li>
<p>尝试从注册表中提取镜像，或将镜像推送到注册表。 这些命令失败。</p>
</li>
<li>
<p>登录到注册表。</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker login myregistrydomain.com:5000
</code></pre></div><p>提供第一步中的用户名和密码。</p>
<p>测试您现在可以从注册表中提取镜像或将镜像推送到 注册表</p>
</li>
</ol>
<h2><a class="header-anchor" href="#docker-registry-ui"><span></span></a><a href="https://github.com/Joxit/docker-registry-ui" target="_blank" rel="noopener noreferrer">Docker Registry UI</a></h2>
<h3>拉取Docker Registry UI</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker pull joxit/docker-registry-ui
</code></pre></div><h3>启动Docker Registry UI</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker run -d -p 8080:80 -e REGISTRY_URL=http://localhost:5000 --name docker-registry-ui joxit/docker-registry-ui
</code></pre></div><h3>预览Docker Registry UI</h3>
<p>浏览器输入<code>http//localhost:8080</code></p>
<figure><img src="https://nas.ilyl.life:8092/docker/docker-registry-ui.png" alt="docker-registry-ui" width="420" height="200" tabindex="0" loading="lazy"><figcaption>docker-registry-ui</figcaption></figure>
<h3>添加Docker Registry UI SSL</h3>
<p>内部使用<code>nginx</code>代理，配置<code>.conf</code>文件即可,其中需要改动的地方以高亮显示。</p>
<p><code>5-6行</code>:对应的证书位置</p>
<p><code>18行</code>:对应Docker Registry 访问地址</p>
<p><code>26行</code>:对应Docker Registry UI访问地址</p>
<div class="language-conf" data-ext="conf" data-title="conf"><pre class="language-conf"><code>server {
  listen              443 ssl;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.key;
  root /usr/share/nginx/html;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  location /v2 {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(.[0-9]-dev))|Go ).*$" ) {
          return 404;
      }
      proxy_pass http://registry:5000;
  }
}

server {
  listen 80;
  location /  {
    # Force HTTPS
    return 301 https://$host$request_uri;
  }
}
</code></pre></div><h2>上传镜像</h2>
<h3>标记镜像</h3>
<p><a href="https://docs.docker.com/engine/reference/commandline/tag/" target="_blank" rel="noopener noreferrer">Docker tag</a></p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker tag ali.ddns-image 127.0.0.1:5000/ali.ddns-image:v1
</code></pre></div><h3>推送镜像</h3>
<p><a href="https://docs.docker.com/engine/reference/commandline/push/" target="_blank" rel="noopener noreferrer">Docker push</a>，将本地镜像推送到<code>registry</code>仓库中</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker push 127.0.0.1:5000/ali.ddns-image:v1
</code></pre></div><h3>拉取镜像</h3>
<p>删除本地已有镜像，从私有仓库拉取</p>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>docker pull 127.0.0.1:5000/ali.ddns-image:v1
</code></pre></div><h3>Docker Registry</h3>
<div class="language-command" data-ext="command" data-title="command"><pre class="language-command"><code>curl http://127.0.0.1:5000/v2/_catalog
</code></pre></div><p>返回：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>StatusCode        : 200
StatusDescription : OK
Content           : {"repositories":["ali.ddns-image"]}

RawContent        : HTTP/1.1 200 OK
                    Docker-Distribution-Api-Version: registry/2.0
                    X-Content-Type-Options: nosniff
                    Content-Length: 25
                    Content-Type: application/json; charset=utf-8
                    Date: ... GMT...
Forms             : {}
Headers           : {[Docker-Distribution-Api-Version, registry/2.0], [X-Content-Type-Options, nosniff], [Content-Length, 25], [Content-Type, application/json; charset=utf-8]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        : System.__ComObject
RawContentLength  : 25
</code></pre></div><h3>Docker-Registry-UI</h3>
<p>浏览器输入<code>http//localhost:8080</code></p>
<figure><img src="https://nas.ilyl.life:8092/docker/docker-registry-ui2.png" alt="docker-registry-ui" width="420" height="200" tabindex="0" loading="lazy"><figcaption>docker-registry-ui</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/docker/docker-registry-ui.png =420x200" type="image/"/>
    </item>
    <item>
      <title>禁止事件</title>
      <link>https://ilyl.life/web/vue/event.html</link>
      <guid>https://ilyl.life/web/vue/event.html</guid>
      <source url="https://ilyl.life/rss.xml">禁止事件</source>
      <description>在某些情况下需要禁用事件，通常会提供disabled或者readonly满足，但是会存在部分局限性。 例如：disabled是置灰了，而readonly不是每个控件都有，这时需要其他方式控制禁用事件。 场景: ant-design-vue里的checkbox-group禁用，disabled置灰了，调整原样，但是不能点击。 CSS 使用CSS来禁用，p...</description>
      <category>Web</category>
      <pubDate>Fri, 14 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在某些情况下需要禁用事件，通常会提供<code>disabled</code>或者<code>readonly</code>满足，但是会存在部分局限性。</p>
<p>例如：<code>disabled</code>是置灰了，而<code>readonly</code>不是每个控件都有，这时需要其他方式控制禁用事件。</p>
<p>场景: <code>ant-design-vue</code>里的<code>checkbox-group</code>禁用，<code>disabled</code>置灰了，调整原样，但是不能点击。</p>
<h2>CSS</h2>
<p>使用CSS来禁用，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/pointer-events" target="_blank" rel="noopener noreferrer">pointer-events</a></p>


<h2>event</h2>
<p>使用VUE提供的<a href="https://cn.vuejs.org/guide/essentials/event-handling.html#event-modifiers" target="_blank" rel="noopener noreferrer">事件</a></p>


]]></content:encoded>
    </item>
    <item>
      <title>阿里云DDNS</title>
      <link>https://ilyl.life/tools/docker/aliyun-ddns.html</link>
      <guid>https://ilyl.life/tools/docker/aliyun-ddns.html</guid>
      <source url="https://ilyl.life/rss.xml">阿里云DDNS</source>
      <description>在上使用的是chenhw2/aliyun-ddns-cli:latest，使用的是Go。 作为一名普通的C#开发者，有必要自己来实现，以及顺便学习下Docker，原代码地址。 已升级到.NET 8,AOT对Web开发很好,本机AOT限制很多.... .NET 8 获取公网地址 获取环境变量参数 阿里云解析记录 强签名 支持Docker部署 资料 Dok...</description>
      <category>DOCKER</category>
      <pubDate>Thu, 13 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在<a href="/tools/nas/cloud.html#%E7%A7%81%E6%9C%89%E4%BA%91%E5%8A%A8%E6%80%81ip%E9%97%AE%E9%A2%98" target="_blank">NAS自动同步DDNS</a>上使用的是<a href="chenhw2/aliyun-ddns-cli:latest">chenhw2/aliyun-ddns-cli:latest</a>，使用的是Go。</p>
<p>作为一名普通的C#开发者，有必要自己来实现，以及顺便学习下Docker，<a href="https://github.com/Ly2JR/aliyun.ddns" target="_blank" rel="noopener noreferrer">原代码地址</a>。</p>
<p>已升级到.NET 8,AOT对Web开发很好,本机AOT限制很多....</p>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> .NET 8</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 获取公网地址</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 获取环境变量参数</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 阿里云解析记录</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 强签名</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 支持Docker部署</label></li>
</ul>
<h2>资料</h2>
<ul>
<li>
<p><a href="https://docs.docker.com/language/dotnet/" target="_blank" rel="noopener noreferrer">Dokcer</a></p>
</li>
<li>
<p><a href="https://next.api.aliyun.com/api-tools/sdk/Alidns?version=2015-01-09&amp;language=csharp-tea&amp;tab=primer-doc" target="_blank" rel="noopener noreferrer">阿里云OPENAPI</a></p>
</li>
<li>
<p><a href="https://dotnet.microsoft.com/zh-cn/learn/aspnet/microservice-tutorial/intro" target="_blank" rel="noopener noreferrer">.NET 微服务</a></p>
</li>
<li>
<p><a href="https://learn.microsoft.com/zh-cn/dotnet/core/docker/introduction" target="_blank" rel="noopener noreferrer">Docker与.NET Core</a></p>
</li>
<li>
<p><a href="https://mcr.microsoft.com/en-us/catalog?page=1" target="_blank" rel="noopener noreferrer">.NET 官方镜像</a></p>
</li>
</ul>
<h2>docker-compose.yml</h2>
<div class="language-yaml" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.4'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">neverland.aliyun.ddns</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>DOCKER_REGISTRY<span class="token punctuation">-</span><span class="token punctuation">}</span>ali.ddns<span class="token punctuation">:</span>1.0.0
    <span class="token key atrule">build</span><span class="token punctuation">:</span>
      <span class="token key atrule">context</span><span class="token punctuation">:</span> .
      <span class="token key atrule">dockerfile</span><span class="token punctuation">:</span> Dockerfile
</code></pre></div><h3>docker-compose.override.yml</h3>
<div class="language-yaml" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">neverland.aliyun.ddns</span><span class="token punctuation">:</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ALIYUN<span class="token punctuation">-</span>DDNS
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> product<span class="token punctuation">-</span>network
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ALIKID=
      <span class="token punctuation">-</span> ALIKSCT=
      <span class="token punctuation">-</span> ALIDOMAIN=ilyl.life
      <span class="token punctuation">-</span> ALITTL=600
<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">product-network</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge
</code></pre></div><h2>Dockerfile</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>最简单的方式是使用VS2022，添加Docker支持，自动生成</p>
</div>
<div class="language-docker" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token comment">#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/runtime:8.0 <span class="token keyword">AS</span> base</span>
<span class="token instruction"><span class="token keyword">USER</span> app</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/sdk:8.0 <span class="token keyword">AS</span> build</span>
<span class="token comment"># Install clang/zlib1g-dev dependencies for publishing to native</span>
<span class="token instruction"><span class="token keyword">RUN</span> apt-get update <span class="token operator">\</span>
    &amp;&amp; apt-get install -y --no-install-recommends <span class="token operator">\</span>
    clang zlib1g-dev</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /src</span>
<span class="token instruction"><span class="token keyword">COPY</span> [<span class="token string">"neverland.aliyun.ddns.csproj"</span>, <span class="token string">"."</span>]</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet restore <span class="token string">"./././neverland.aliyun.ddns.csproj"</span></span>
<span class="token instruction"><span class="token keyword">COPY</span> . .</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token string">"/src/."</span></span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet build <span class="token string">"./neverland.aliyun.ddns.csproj"</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/build</span>

<span class="token instruction"><span class="token keyword">FROM</span> build <span class="token keyword">AS</span> publish</span>
<span class="token instruction"><span class="token keyword">ARG</span> BUILD_CONFIGURATION=Release</span>
<span class="token instruction"><span class="token keyword">RUN</span> dotnet publish <span class="token string">"./neverland.aliyun.ddns.csproj"</span> -c <span class="token variable">$BUILD_CONFIGURATION</span> -o /app/publish /p:UseAppHost=true</span>

<span class="token instruction"><span class="token keyword">FROM</span> mcr.microsoft.com/dotnet/runtime-deps:8.0 <span class="token keyword">AS</span> final</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">publish</span></span> /app/publish .</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">"./neverland.aliyun.ddns"</span>]</span>

<span class="token instruction"><span class="token keyword">LABEL</span> MAINTAINER=乌龙茶有点甜&lt;982474256@qq.com&gt;</span>

<span class="token instruction"><span class="token keyword">ENV</span> ALIKID= <span class="token operator">\</span>
    ALIKSCT= <span class="token operator">\</span>
    ALIDOMAIN=ilyl.life <span class="token operator">\</span>
    ALITTL=600</span>
</code></pre></div><h2>公网IP</h2>
<p>有很多种获取外网IP的方式，这里选用<a href="https://ip-api.com/" target="_blank" rel="noopener noreferrer">ip-api</a>，个人够用。</p>
<p>利用<code>http://ip-api.com/json/?lang=zh-CN&amp;fields=status,query</code>获取到公网地址。</p>
<p><a href="http://ip-api.com/json/?lang=zh-CN&amp;fields=status,query" target="_blank" rel="noopener noreferrer">测试当前公网IP</a></p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>.NET 8 开启AOT时，<code>ReadFromJsonAsync</code>方法警告,JSON序列化受限</p>
<p>因此需要禁用</p>
</div>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    client<span class="token punctuation">.</span>BaseAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_URL<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//不使用这个是因为有使用限制,https://ip-api.com/docs/api:json</span>
    <span class="token comment">//var query = await client.GetFromJsonAsync&lt;IPModelResult&gt;(Contracts.QUERY_IPADDRESS_RESOURCE, cancelllationToken)</span>
    <span class="token comment">//     .ConfigureAwait(false);</span>

    <span class="token keyword">try</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span>Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_RESOURCE<span class="token punctuation">,</span> cancelllationToken<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">EnsureSuccessStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WriteRequestToConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//检查受限情况</span>
        <span class="token class-name"><span class="token keyword">var</span></span> ri <span class="token operator">=</span> response<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Key <span class="token operator">==</span> Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_HEADER_RI<span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ri <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ri<span class="token punctuation">.</span><span class="token function">ElementAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"0"</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> ttl <span class="token operator">=</span> response<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span>it <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span>Key <span class="token operator">==</span> Contracts<span class="token punctuation">.</span>QUERY_IPADDRESS_HEADER_TTL<span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Contracts<span class="token punctuation">.</span>TITLE</span><span class="token punctuation">}</span></span><span class="token string">ip地址查询受限,等待</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ttl<span class="token punctuation">.</span><span class="token function">ElementAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">秒后重试"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name"><span class="token keyword">var</span></span> jsonResponse <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ReadFromJsonAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IPModelResult<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jsonResponse <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jsonResponse<span class="token punctuation">.</span>Status <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> jsonResponse<span class="token punctuation">.</span>Status <span class="token operator">==</span> <span class="token string">"success"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> networkIp <span class="token operator">=</span> jsonResponse<span class="token punctuation">.</span>Query<span class="token operator">!</span><span class="token punctuation">;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"公网IP:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">networkIp</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> networkIp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TaskCanceledException</span> ex<span class="token punctuation">)</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>ex<span class="token punctuation">.</span>InnerException <span class="token keyword">is</span> <span class="token class-name">TimeoutException</span> tex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"Timed out: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">tex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HttpRequestException</span> ex<span class="token punctuation">)</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>ex <span class="token keyword">is</span> <span class="token punctuation">{</span> StatusCode<span class="token punctuation">:</span> HttpStatusCode<span class="token punctuation">.</span>NotFound <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"Not found: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HttpRequestException</span> ex<span class="token punctuation">)</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>ex <span class="token keyword">is</span> <span class="token punctuation">{</span> StatusCode<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"网络连接失败: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ex<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
</code></pre></div><h2>环境变量</h2>
<p>使用<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.environment.getenvironmentvariable?view=net-6.0" target="_blank" rel="noopener noreferrer">Environment.GetEnvironmentVariable</a>获取环境变量</p>
<p>一是因为账号安全问题</p>
<p>二是Docker运行配置</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>项目<code>属性</code>，<code>调试</code>，打开<code>调试启动配置文件UI</code></li>
<li>通过<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.environment.setenvironmentvariable?view=net-7.0" target="_blank" rel="noopener noreferrer">Environment.SetEnvironmentVariable</a>配合<code>#if DEBUG</code>条件编译设置环境变量</li>
</ol>
</div>
<h2>云解析</h2>

]]></content:encoded>
    </item>
    <item>
      <title>COM</title>
      <link>https://ilyl.life/tools/csharp/com.html</link>
      <guid>https://ilyl.life/tools/csharp/com.html</guid>
      <source url="https://ilyl.life/rss.xml">COM</source>
      <description>Com激活说明 “COM”用于表示除 .NET 以外的任何 COM 环境（例如 C/C++）。 反射和直接引用都可以，示例源代码地址 DemoVB.Client：VB客户端 DemoWin.Client：.NETFramework Winform客户端 DemoWin.Contract：.NETFramework公开服务 DemoWin.Plugin：...</description>
      <category>工具箱</category>
      <pubDate>Thu, 06 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="https://github.com/dotnet/runtime/blob/main/docs/design/features/COM-activation.md" target="_blank" rel="noopener noreferrer">Com激活说明</a></p>
<p>| Server | Client | Current Support |
|</p>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/com1.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>IOC</title>
      <link>https://ilyl.life/tools/csharp/ioc.html</link>
      <guid>https://ilyl.life/tools/csharp/ioc.html</guid>
      <source url="https://ilyl.life/rss.xml">IOC</source>
      <description>Winform使用IOC 在Winfrom里使用Microsoft.Extensions.DependencyInjection、SqlSugar、Quartz、Serilog、Sqlite。源代码地址。 ORM 以Sqlite作为数据库及日志数据库，在Nuget安装Sqlite和SqlSugar DbManager类用于创建表、初始化数据库，使用Sq...</description>
      <category>工具箱</category>
      <pubDate>Tue, 04 Jul 2023 08:28:53 GMT</pubDate>
      <content:encoded><![CDATA[<h2>Winform使用IOC</h2>
<p>在Winfrom里使用<a href="https://learn.microsoft.com/zh-cn/dotnet/core/extensions/dependency-injection-usage" target="_blank" rel="noopener noreferrer">Microsoft.Extensions.DependencyInjection</a>、<a href="https://www.donet5.com/Home/Doc" target="_blank" rel="noopener noreferrer">SqlSugar</a>、<a href="https://www.quartz-scheduler.net/" target="_blank" rel="noopener noreferrer">Quartz</a>、<a href="https://serilog.net/" target="_blank" rel="noopener noreferrer">Serilog</a>、<a href="https://www.sqlite.org/index.html" target="_blank" rel="noopener noreferrer">Sqlite</a>。<a href="https://github.com/Ly2JR/wpf-samples/tree/main/src/WindowsFormsApp1" target="_blank" rel="noopener noreferrer">源代码地址</a>。</p>
<h3>ORM</h3>
<p>以Sqlite作为数据库及日志数据库，在Nuget安装<code>Sqlite</code>和<code>SqlSugar</code></p>
<p><code>DbManager</code>类用于创建表、初始化数据库，使用<code>SqlSugar</code>提供的ORM，CodeFirst优先。为了简便，动态见表及初始化。</p>
<p>将所有表结构实体放在单独类库中，新建用户类:</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarTable</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">"Login"</span><span class="token punctuation">,</span> <span class="token string">"用户表"</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarIndex</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">"index_login_name"</span><span class="token punctuation">,</span> <span class="token keyword">nameof</span><span class="token punctuation">(</span>Login<span class="token punctuation">.</span>Code<span class="token punctuation">)</span><span class="token punctuation">,</span> OrderByType<span class="token punctuation">.</span>Desc<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Login</span>
<span class="token punctuation">{</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IsPrimaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> IsIdentity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Length <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Code <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SugarColumn</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Length <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在<code>DbManager</code>类中，初始化新建表如下,<code>XXXXXX</code>为表结构的类库文件</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code> <span class="token comment">//初始化表</span>
<span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> types <span class="token operator">=</span> Assembly
<span class="token punctuation">.</span><span class="token function">LoadFrom</span><span class="token punctuation">(</span><span class="token string">"XXXXXX"</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">GetTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ISqlSugarClient<span class="token punctuation">.</span>CodeFirst<span class="token punctuation">.</span><span class="token function">InitTables</span><span class="token punctuation">(</span>types<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>使用<code>AnyAsync</code>检查表数据是否存在，不存在则添加默认数据，为了提高查询时间使用了<code>Task.WhenAny</code></p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//表数据是否存在</span>
<span class="token class-name"><span class="token keyword">var</span></span> queryLogin <span class="token operator">=</span> ISqlSugarClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Queryable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Login<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AnyAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> queryTasks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> queryLogin<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>queryTasks<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> query <span class="token operator">=</span> <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">WhenAny</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>queryTasks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token boolean">false</span><span class="token punctuation">:</span>
            <span class="token comment">//不存在则默认添加</span>
            <span class="token keyword">await</span> _dbClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Insertable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Login<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>Logins<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecuteCommandAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    queryTasks<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>注入SqlSugar实体：</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">SqlSugarScope</span> sqlSugar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlSugarScope</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ConnectionConfig<span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ConfigId<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
        DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
        ConnectionString <span class="token operator">=</span> <span class="token string">"DataSource="</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>DbPath<span class="token punctuation">,</span>
        IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ConfigId<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
        DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
        ConnectionString <span class="token operator">=</span> <span class="token string">"DataSource="</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>LogPath<span class="token punctuation">,</span>
        IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    db <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        db<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>OnLogExecuting <span class="token operator">=</span> <span class="token punctuation">(</span>sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> cmd <span class="token operator">=</span> UtilMethods<span class="token punctuation">.</span><span class="token function">GetSqlString</span><span class="token punctuation">(</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISqlSugarClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>sqlSugar<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3>配置文件</h3>
<p>使用自定义配置文件<code>appsettings.json</code>，需要将文件右击属性设置为<code>始终复制</code>和<code>内容</code>。</p>
<p><code>AppServiceOptions</code>类就是<code>appsettings.json</code>的实体类，节点一一对应。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//配置文件</span>
<span class="token class-name">IConfigurationBuilder</span> configbuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetBasePath</span><span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">"appsettings.json"</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">optional</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">reloadOnChange</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> configuration <span class="token operator">=</span> configbuilder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//配置文件的实体类</span>
<span class="token class-name"><span class="token keyword">var</span></span> section <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>AppServiceOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppServiceOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
section<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IConfiguration<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token function">AddOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3>Quartz</h3>
<p>自定义一个类<code>TimeJob</code>实现<code>IJob</code>接口，在IOC中注入</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TimeJob</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IJob</span><span class="token punctuation">,</span> <span class="token class-name">IDisposable</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ILogger</span> _logger<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">TimeJob</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token punctuation">}</span></span><span class="token string">执行完同步作业"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Execute</span><span class="token punctuation">(</span><span class="token class-name">IJobExecutionContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> Task<span class="token punctuation">.</span>CompletedTask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//注册Quartz</span>
IServiceCollection<span class="token punctuation">.</span><span class="token function">AddQuartz</span><span class="token punctuation">(</span>q <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    q<span class="token punctuation">.</span>SchedulerId <span class="token operator">=</span> <span class="token string">"Scheduler-Core"</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token function">UseMicrosoftDependencyInjectionJobFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ScheduleJob</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>trigger <span class="token operator">=&gt;</span> trigger
    <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">"TimeJobTrigger"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">StartNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithDailyTimeIntervalSchedule</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">WithInterval</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>JobTimeInterval<span class="token punctuation">,</span> IntervalUnit<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
IServiceCollection<span class="token punctuation">.</span><span class="token function">AddQuartzHostedService</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    o<span class="token punctuation">.</span>WaitForJobsToComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    o<span class="token punctuation">.</span>StartDelay <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3>Serilog</h3>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//注册Logger</span>
LogProvider<span class="token punctuation">.</span>IsDisabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> providers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerProviderCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Log<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>MinimumLevel<span class="token punctuation">.</span><span class="token function">Information</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">SQLite</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>LogPath<span class="token punctuation">)</span>
        <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Providers</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token function">AddLogging</span><span class="token punctuation">(</span>loggingBuilder <span class="token operator">=&gt;</span> loggingBuilder<span class="token punctuation">.</span><span class="token function">AddSerilog</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">dispose</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3>关键注入</h3>
<p>核心部分在于IOC，定义一个扩展方法<code>BuildWinform</code>，完整代码如下</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ConfigService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IServiceProvider</span> <span class="token function">BuildWinform</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//注册登录页面</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddScoped</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FrmLogin<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册单例</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DBManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册Quartz作业</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//配置文件</span>
        <span class="token class-name">IConfigurationBuilder</span> configbuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">SetBasePath</span><span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">"appsettings.json"</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">optional</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">reloadOnChange</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> configuration <span class="token operator">=</span> configbuilder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//配置文件的实体类</span>
        <span class="token class-name"><span class="token keyword">var</span></span> section <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>AppServiceOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppServiceOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        section<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IConfiguration<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//注册Logger,写入Sqlite数据库</span>
        LogProvider<span class="token punctuation">.</span>IsDisabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> providers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerProviderCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LoggerConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span>MinimumLevel<span class="token punctuation">.</span><span class="token function">Information</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">SQLite</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>LogPath<span class="token punctuation">)</span>
                <span class="token punctuation">.</span>WriteTo<span class="token punctuation">.</span><span class="token function">Providers</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">CreateLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>providers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddLogging</span><span class="token punctuation">(</span>loggingBuilder <span class="token operator">=&gt;</span> loggingBuilder<span class="token punctuation">.</span><span class="token function">AddSerilog</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">dispose</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//注册Quartz</span>
        services<span class="token punctuation">.</span><span class="token function">AddQuartz</span><span class="token punctuation">(</span>q <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            q<span class="token punctuation">.</span>SchedulerId <span class="token operator">=</span> <span class="token string">"Scheduler-Core"</span><span class="token punctuation">;</span>
            q<span class="token punctuation">.</span><span class="token function">UseMicrosoftDependencyInjectionJobFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            q<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ScheduleJob</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TimeJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>trigger <span class="token operator">=&gt;</span> trigger
            <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">"TimeJobTrigger"</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">StartNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">WithDailyTimeIntervalSchedule</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">WithInterval</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>JobTimeInterval<span class="token punctuation">,</span> IntervalUnit<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token function">AddQuartzHostedService</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span>WaitForJobsToComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            o<span class="token punctuation">.</span>StartDelay <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//注册SugarSql</span>
        <span class="token class-name">SqlSugarScope</span> sqlSugar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlSugarScope</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ConnectionConfig<span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ConfigId<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
                DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
                ConnectionString <span class="token operator">=</span> <span class="token string">"DataSource="</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>DbPath<span class="token punctuation">,</span>
                IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConnectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                ConfigId<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                DbType <span class="token operator">=</span> SqlSugar<span class="token punctuation">.</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span>
                ConnectionString <span class="token operator">=</span> <span class="token string">"DataSource="</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>LogPath<span class="token punctuation">,</span>
                IsAutoCloseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        db <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            db<span class="token punctuation">.</span>Aop<span class="token punctuation">.</span>OnLogExecuting <span class="token operator">=</span> <span class="token punctuation">(</span>sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> cmd <span class="token operator">=</span> UtilMethods<span class="token punctuation">.</span><span class="token function">GetSqlString</span><span class="token punctuation">(</span>DbType<span class="token punctuation">.</span>Sqlite<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> pars<span class="token punctuation">)</span><span class="token punctuation">;</span>
                Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISqlSugarClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>sqlSugar<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> serviceProvider <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token function">BuildServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> serviceProvider<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在<code>Program.cs</code>文件里</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Mutex</span> mutex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Mutex</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> Application<span class="token punctuation">.</span>ProductName<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">bool</span></span> createNew<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>createNew<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">IServiceCollection</span> services <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServiceCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> serviceProvider <span class="token operator">=</span> services<span class="token punctuation">.</span><span class="token function">BuildWinform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> frmLogin <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>FrmLogin<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> schedulerFactory <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ISchedulerFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> scheduler <span class="token operator">=</span> schedulerFactory<span class="token punctuation">.</span><span class="token function">GetScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scheduler<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> serviceProvider<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DBManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            db<span class="token punctuation">.</span><span class="token function">InitDataBaseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Application<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>frmLogin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>Message<span class="token punctuation">,</span> <span class="token string">"提示"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span>
        <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">CloseAndFlush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">"应用程序已经在运行中..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>WPF使用IOC</h2>
<p>WPF使用IOC，一般配合<code>Prism</code>或者其他框架，基本都带IOC。PWF使用Prism的IOC示例，查看<a href="/cs/wpf/plugin.html" target="_blank">模块</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>格式化</title>
      <link>https://ilyl.life/cs/wpf/format.html</link>
      <guid>https://ilyl.life/cs/wpf/format.html</guid>
      <source url="https://ilyl.life/rss.xml">格式化</source>
      <description>StringFormat和ContentStringFormat的区别，示例代码高亮显示。 格式显示格式显示 代码示例: </description>
      <category>C#</category>
      <pubDate>Wed, 28 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.data.bindingbase.stringformat?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">StringFormat</a>和<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.contentcontrol.contentstringformat?view=windowsdesktop-7.0" target="_blank" rel="noopener noreferrer">ContentStringFormat</a>的区别，示例代码高亮显示。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/stringformat.png" alt="格式显示" width="420" height="200" tabindex="0" loading="lazy"><figcaption>格式显示</figcaption></figure>
<p>代码示例:</p>
<div class="language-xaml" data-ext="xaml" data-title="xaml"><pre class="language-xaml"><code>&lt;Window
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    ...&gt;
    &lt;Window.Resources&gt;
        &lt;sys:String x:Key="k1"&gt;1000&lt;/sys:String&gt;
        &lt;sys:String x:Key="k2"&gt;2000&lt;/sys:String&gt;
    &lt;/Window.Resources&gt;
    &lt;Grid&gt;
        &lt;Grid.RowDefinitions&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="30" /&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="*" /&gt;
            &lt;RowDefinition Height="*" /&gt;
        &lt;/Grid.RowDefinitions&gt;
        &lt;TextBlock Grid.Row="0" Text="{StaticResource k1}" /&gt;
        &lt;TextBlock Grid.Row="1"&gt;
            &lt;TextBlock.Text&gt;
                &lt;MultiBinding StringFormat="{}{0} -- {1}"&gt;
                    &lt;Binding Source="{StaticResource k1}" /&gt;
                    &lt;Binding Source="{StaticResource k2}" /&gt;
                &lt;/MultiBinding&gt;
            &lt;/TextBlock.Text&gt;
        &lt;/TextBlock&gt;
        &lt;TextBlock Grid.Row="2"&gt;
            &lt;Run Text="{StaticResource k1}" /&gt;
            &lt;Run Text="--" /&gt;
            &lt;Run Text="{StaticResource k2}" /&gt;
        &lt;/TextBlock&gt;
        &lt;TextBlock Grid.Row="3" Text="{Binding Source={StaticResource k1}, StringFormat={}{0} -- 123}" /&gt;
        &lt;Label Grid.Row="5" Content="{Binding Source={StaticResource k2}, StringFormat={}{0}}" /&gt;
        &lt;Label Grid.Row="6" Content="{Binding Source={StaticResource k2}, StringFormat={}{0}</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/stringformat.png =420x200" type="image/"/>
    </item>
    <item>
      <title>软件更新</title>
      <link>https://ilyl.life/cs/wpf/update.html</link>
      <guid>https://ilyl.life/cs/wpf/update.html</guid>
      <source url="https://ilyl.life/rss.xml">软件更新</source>
      <description>之前一篇用控制台演示了下载的功能，而本次更新是在这基础上加了UI界面实现软件更新的功能，源代码地址。 受异步编程启发，借用了大量代码。 更新更新 更新日志说明 显示进度条 显示文件大小 显示下载速度 显示下载时间 支持批量更新文件 支持文件下载重命名 支持文件下载后删除重名文件 支持相同文件重复下载自动重命名 更多功能扩展update.xml配置文件 ...</description>
      <category>C#</category>
      <pubDate>Wed, 28 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>之前一篇<a href="/cs/wpf/download.html" target="_blank">下载</a>用控制台演示了下载的功能，而本次更新是在这基础上加了UI界面实现软件更新的功能，<a href="https://github.com/Ly2JR/wpf-samples/tree/main/src/update" target="_blank" rel="noopener noreferrer">源代码地址</a>。</p>
<p>受<a href="https://learn.microsoft.com/zh-cn/archive/msdn-magazine/2014/april/async-programming-patterns-for-asynchronous-mvvm-applications-commands" target="_blank" rel="noopener noreferrer">异步编程</a>启发，借用了大量代码。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/update.gif" alt="更新" width="420" height="200" tabindex="0" loading="lazy"><figcaption>更新</figcaption></figure>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 更新日志说明</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 显示进度条</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 显示文件大小</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 显示下载速度</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 显示下载时间</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 支持批量更新文件</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 支持文件下载重命名</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 支持文件下载后删除重名文件</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 支持相同文件重复下载自动重命名</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 更多功能扩展<code>update.xml</code>配置文件</label></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>Environment.Exit(0);</code> 用于退出程序</p>
<p><code>Process</code> 用于启动其他程序</p>
</div>
<p>虽说是更新，本质还是下载，更新又跟程序设计有关，例如：</p>
<ol>
<li>
<p>本身就一个exe程序</p>
<p>更新就是替换本身，先退出在启动新的程序</p>
</li>
<li>
<p>主程序是一个exe程序，其他为dll文件，像<a href="/cs/wpf/plugin.html" target="_blank">模块化</a>一样</p>
<p>主程序exe不动，而是直接更新替换dll文件</p>
</li>
<li>
<p>启动器，程序及相关dll</p>
<p>同2类似，只是多个启动器，启动器不变，更新相关dll</p>
</li>
</ol>
<p>更新首先要有一个信息源用来比对，需要更新哪些内容，这里以<code>IIS</code>的本身<code>80</code>端口服务器，用<code>xml</code>来做文件更新配置文件，相关更新文件放在<code>80</code>端口目录下</p>
<h2>配置文件</h2>
<p>配置文件按实际需求进行额外扩展。</p>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iisstart<span class="token punctuation">"</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>htm<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iisstart<span class="token punctuation">"</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>png<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>exe<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logs</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>1.更新html文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>2.更新图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>3.更新主程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><a href="/tools/csharp/xml.html" target="_blank">读取XML文件</a>:</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Xml</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> UpdateUrl <span class="token operator">=</span> <span class="token string">"http://localhost:80/update.xml"</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> updateXml <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XmlDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
updateXml<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>UpdateUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> logs <span class="token operator">=</span> updateXml<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span><span class="token string">"update/logs/log"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>logs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> log <span class="token keyword">in</span> logs<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> logTxt <span class="token operator">=</span> log<span class="token punctuation">.</span>InnerText<span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>logTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> files <span class="token operator">=</span> updateXml<span class="token punctuation">.</span><span class="token function">SelectNodes</span><span class="token punctuation">(</span><span class="token string">"update/file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>files <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">XmlNode</span> file <span class="token keyword">in</span> files<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> name <span class="token operator">=</span> file<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>Attributes<span class="token punctuation">[</span><span class="token string">"suffix"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suffix</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>更新本身</h2>
<p>对应场景一，就一个主程序。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/update1.gif" alt="更新自身" width="420" height="200" tabindex="0" loading="lazy"><figcaption>更新自身</figcaption></figure>
<p>将<code>update</code>项目文件拷贝到需要更新的程序目录下，这里为<code>WindowsFormsApp1</code>项目的Bin目录下。<a href="https://github.com/Ly2JR/wpf-samples/tree/main/src/WindowsFormsApp1" target="_blank" rel="noopener noreferrer">源码地址</a></p>
<h3>调整配置文件</h3>
<ol>
<li>添加<code>delete</code>属性，用来判断当前下载的文件是覆盖还是累加。</li>
<li>添加<code>autorun</code>属性，用来判断下载的文件在全部下载完成之后是否自动启动，并退出下载器</li>
</ol>
<div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>WindowsFormsApp1<span class="token punctuation">"</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>exe<span class="token punctuation">"</span></span> <span class="token attr-name">delete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">autorun</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logs</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span><span class="token punctuation">&gt;</span></span>1.更新主程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logs</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3>调整下载器</h3>
<p>默认是手动点击执行的，需要扩展下，支持自动执行和实现自动启动及退出功能。</p>
<p>因为下载器是用WPF开发，所以需要在<code>App.xaml.cs</code>文件里，重写<code>OnStartup</code>方法，用来接受启动参数，这里为<code>adl</code>。</p>
<p>下载器用来接受参数部分</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStartup</span><span class="token punctuation">(</span><span class="token class-name">StartupEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Args <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Args<span class="token punctuation">.</span>Length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> args <span class="token operator">=</span> e<span class="token punctuation">.</span>Args<span class="token punctuation">;</span>
        Consts<span class="token punctuation">.</span>AutoDownLoad <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>Consts<span class="token punctuation">.</span>AutoDownloadArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnStartup</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>MainWindowViewModel.cs</code>用于自动下载和自动启动并退出自身，额外声明了一个<code>FindishedList</code>属性用来存储已经下载完成的记录，用于判别文件是否全部下载完成，自动启动并退出自身需要在全部下载完成之后执行。</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> FinishedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">MainWindowViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Operations <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ObservableCollection<span class="token punctuation">&lt;</span>CountUrlBytesViewModel<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    FinishedList<span class="token punctuation">.</span>CollectionChanged <span class="token operator">+=</span> FinishedList_CollectionChanged<span class="token punctuation">;</span>
    RunCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DelegateComand</span><span class="token punctuation">(</span>Run<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Consts<span class="token punctuation">.</span>AutoDownLoad<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Task<span class="token punctuation">.</span>Factory<span class="token punctuation">.</span><span class="token function">StartNew</span><span class="token punctuation">(</span>Run<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>当已经下载完成的记录等于需要下载的文件记录，则启动程序并退出自身</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">FinishedList_CollectionChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Specialized<span class="token punctuation">.</span>NotifyCollectionChangedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Action <span class="token operator">==</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Specialized<span class="token punctuation">.</span>NotifyCollectionChangedAction<span class="token punctuation">.</span>Add<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>autoRun<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>FinishedList<span class="token punctuation">.</span>Count <span class="token operator">==</span> Operations<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProcessStartInfo</span>
            <span class="token punctuation">{</span>
                FileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span>BaseDirectory</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suffix</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            Process<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>

            Environment<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>下载部分，新增了是删除文件还是重命名文件的判断，根据配置文件<code>delete</code>来区分</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">DownloadAndCountBytesAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> suffix<span class="token punctuation">,</span><span class="token class-name">CancellationToken</span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">bool</span></span> deleteOld<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token range operator">..</span><span class="token punctuation">.</span>
  <span class="token class-name"><span class="token keyword">var</span></span> savePath <span class="token operator">=</span> Environment<span class="token punctuation">.</span>CurrentDirectory<span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">var</span></span> saveFileName <span class="token operator">=</span> FileName<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>deleteOld<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> files <span class="token operator">=</span> Directory<span class="token punctuation">.</span><span class="token function">GetFiles</span><span class="token punctuation">(</span>savePath<span class="token punctuation">,</span> searchPattern<span class="token punctuation">,</span> SearchOption<span class="token punctuation">.</span>TopDirectoryOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name"><span class="token keyword">var</span></span> hasFiles <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasFiles <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          saveFileName <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">hasFiles</span><span class="token punctuation">}</span></span><span class="token string">).</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">suffix</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
  <span class="token punctuation">{</span>
      File<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">savePath</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">FileName</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  savePath <span class="token operator">+=</span> <span class="token interpolation-string"><span class="token string">$"/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">saveFileName</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
  <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre></div><h2>更新模块化文件</h2>
<p>对应场景二，主程序就是一个exe显示，其他业务逻辑或者资源文件分开，只更新这些文件即可。<a href="https://github.com/Ly2JR/wpf-samples/tree/main/src/demo" target="_blank" rel="noopener noreferrer">源代码地址</a></p>
<figure><img src="https://nas.ilyl.life:8092/wpf/update2.gif" alt="更新模块化文件" width="420" height="200" tabindex="0" loading="lazy"><figcaption>更新模块化文件</figcaption></figure>
<p>因为Prism模块，在已经加载模块化文件后无法卸载，这是无解的。所以在程序启动时进行检查。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>正常来说主程序exe也可以更新，但是通常不这么做，如有可能还是用场景三的方式来更新。</p>
</div>
<h2>启动器，更新主程序及模块化文件</h2>
<p>对应场景三，是场景二的升级版本,既更新了主程序也更新了其他文件，详情参考<a href="/tools/csharp/com.html" target="_blank">COM</a>。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/update3.gif" alt="VB调用.NET Core" width="420" height="200" tabindex="0" loading="lazy"><figcaption>VB调用.NET Core</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/update.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>属性通知</title>
      <link>https://ilyl.life/cs/wpf/notifyproperty.html</link>
      <guid>https://ilyl.life/cs/wpf/notifyproperty.html</guid>
      <source url="https://ilyl.life/rss.xml">属性通知</source>
      <description>WPF的VM中常用到INotifyPropertyChanged接口，来通知属性变更，但需要填写具体属性名。 这里有个编译器解释属性CallerMemberName可以简化这部分工作量。 简化前： 简化后： </description>
      <category>C#</category>
      <pubDate>Wed, 28 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>WPF的VM中常用到<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.componentmodel.inotifypropertychanged?view=net-7.0" target="_blank" rel="noopener noreferrer">INotifyPropertyChanged</a>接口，来通知属性变更，但需要填写具体属性名。</p>
<p>这里有个编译器解释属性<a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/attributes/caller-information" target="_blank" rel="noopener noreferrer">CallerMemberName</a>可以简化这部分工作量。</p>
<p>简化前：</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dto</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler<span class="token punctuation">?</span></span> PropertyChanged<span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _name <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _name<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> _name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> propertyName<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            PropertyChanged<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre></div><p>简化后：</p>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dto</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">INotifyPropertyChanged</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">event</span> <span class="token class-name">PropertyChangedEventHandler<span class="token punctuation">?</span></span> PropertyChanged<span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _name <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _name<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">set</span> <span class="token punctuation">{</span> _name <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CallerMemberName</span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span></span> propertyName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            PropertyChanged<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyChangedEventArgs</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>下载</title>
      <link>https://ilyl.life/cs/wpf/download.html</link>
      <guid>https://ilyl.life/cs/wpf/download.html</guid>
      <source url="https://ilyl.life/rss.xml">下载</source>
      <description>下载时太快UI不显示时，可以加个延时，代码高亮处。 下载下载 </description>
      <category>C#</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>下载时太快UI不显示时，可以加个延时，代码高亮处。</p>
<figure><img src="https://nas.ilyl.life:8092/wpf/download.gif" alt="下载" width="420" height="200" tabindex="0" loading="lazy"><figcaption>下载</figcaption></figure>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">//主机地址</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> BASE_URL <span class="token operator">=</span> <span class="token string">"http://localhost:80/"</span><span class="token punctuation">;</span>
<span class="token comment">//文件大小Byte</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> ByteSize <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token comment">//文件大小Kb</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> KByteSize <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token comment">//缓存大小</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> DEFAULT_BUFFER_SIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token comment">//下载文件长度</span>
<span class="token class-name"><span class="token keyword">string</span></span> FileLength <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token comment">//已下载文件长度</span>
<span class="token class-name"><span class="token keyword">string</span></span> CurrentLength <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token comment">//下载文件最大进度</span>
<span class="token class-name"><span class="token keyword">int</span></span> MaxProgress <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">//已下载文件当前进度</span>
<span class="token class-name"><span class="token keyword">int</span></span> CurrentProgress <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"任意键开始下载..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">ReadKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> <span class="token function">ExecuteDownFileAsync</span><span class="token punctuation">(</span><span class="token string">"iisstart.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">ExecuteDownFileAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> fileName<span class="token punctuation">,</span> <span class="token class-name">CancellationToken</span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> url <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">BASE_URL</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">fileName</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> httpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> httpClient<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>IsSuccessStatusCode<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> allFileLength <span class="token operator">=</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span>ContentLength<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allFileLength<span class="token punctuation">.</span>HasValue<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>allFileLength <span class="token operator">&lt;</span> ByteSize<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            FileLength <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">allFileLength</span><span class="token punctuation">}</span></span><span class="token string">B"</span></span><span class="token punctuation">;</span>
            MaxProgress <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>allFileLength<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>allFileLength <span class="token operator">&gt;</span> KByteSize<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            FileLength <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">allFileLength<span class="token punctuation">.</span>Value <span class="token operator">/</span> KByteSize</span><span class="token format-string"><span class="token punctuation">:</span>F2</span><span class="token punctuation">}</span></span><span class="token string">MB"</span></span><span class="token punctuation">;</span>
            MaxProgress <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>allFileLength <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            FileLength <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">allFileLength<span class="token punctuation">.</span>Value <span class="token operator">/</span> ByteSize</span><span class="token format-string"><span class="token punctuation">:</span>F2</span><span class="token punctuation">}</span></span><span class="token string">KB"</span></span><span class="token punctuation">;</span>
            MaxProgress <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>allFileLength <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name"><span class="token keyword">var</span></span> title <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"正在下载:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">url</span><span class="token punctuation">}</span></span><span class="token string">\t文件大小:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">FileLength</span><span class="token punctuation">}</span></span><span class="token string">\t"</span></span><span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> savePath <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Environment<span class="token punctuation">.</span>CurrentDirectory</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">fileName</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>savePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            File<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>savePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStreamAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>stream <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> fileStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileStream</span><span class="token punctuation">(</span>savePath<span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Create<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Write<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> streamReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> bufferByte <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>DEFAULT_BUFFER_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token class-name"><span class="token keyword">int</span></span> startByte <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

                <span class="token keyword">while</span> <span class="token punctuation">(</span>allFileLength <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> downByte <span class="token operator">=</span> <span class="token keyword">await</span> stream<span class="token punctuation">.</span><span class="token function">ReadAsync</span><span class="token punctuation">(</span>bufferByte<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bufferByte<span class="token punctuation">.</span>Length<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>downByte <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>

                    fileStream<span class="token punctuation">.</span>Position <span class="token operator">=</span> startByte<span class="token punctuation">;</span>
                    
                    <span class="token keyword">await</span> fileStream<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span>bufferByte<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> downByte<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    startByte <span class="token operator">+=</span> downByte<span class="token punctuation">;</span>
                    allFileLength <span class="token operator">-=</span> downByte<span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>startByte <span class="token operator">&lt;</span> ByteSize<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        CurrentLength <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">startByte</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">;</span>
                        CurrentProgress <span class="token operator">=</span> startByte<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>startByte <span class="token operator">&gt;</span> KByteSize<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        CurrentLength <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">startByte <span class="token operator">/</span> KByteSize</span><span class="token format-string"><span class="token punctuation">:</span>F2</span><span class="token punctuation">}</span></span><span class="token string">MB"</span></span><span class="token punctuation">;</span>
                        CurrentProgress <span class="token operator">=</span> startByte <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        CurrentLength <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">startByte <span class="token operator">/</span> ByteSize</span><span class="token format-string"><span class="token punctuation">:</span>F2</span><span class="token punctuation">}</span></span><span class="token string">KB"</span></span><span class="token punctuation">;</span>
                        CurrentProgress <span class="token operator">=</span> startByte <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    Console<span class="token punctuation">.</span><span class="token function">SetCursorPosition</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span>Length<span class="token operator">+</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"已完成:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">CurrentLength</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            fileStream<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/wpf/download.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>互操作</title>
      <link>https://ilyl.life/cs/vb/Interop.html</link>
      <guid>https://ilyl.life/cs/vb/Interop.html</guid>
      <source url="https://ilyl.life/rss.xml">互操作</source>
      <description>互操作是将代码进行抽象分离，供其它地方及语言使用，更多说明见 这里以C#调用VB为例 提示 C#调用VB：在开发环境生产xxx.dll时自动注册，生产环境需要regsvr32进行注册 VB调用C#：需要将C#类库设置为互COM操作,开发环境自动注册，生产环境需要regasm生成tlb文件。 效果效果 VB和C#互操作有很多细节部分： 定义好接口及数据交...</description>
      <category>VB</category>
      <pubDate>Sun, 25 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="https://learn.microsoft.com/zh-cn/previous-versions/dotnet/articles/ms973800(v=msdn.10)?redirectedfrom=MSDN" target="_blank" rel="noopener noreferrer">互操作</a>是将代码进行抽象分离，供其它地方及语言使用，更多说明见<a href="/tools/csharp/com.html" target="_blank">COM</a></p>
<p>这里以C#调用VB为例</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>C#调用VB：在开发环境生产xxx.dll时自动注册，生产环境需要<a href="https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/regsvr32" target="_blank" rel="noopener noreferrer">regsvr32</a>进行注册</p>
<p>VB调用C#：需要将C#类库设置为互COM操作,开发环境自动注册，生产环境需要<a href="https://learn.microsoft.com/zh-cn/dotnet/framework/tools/regasm-exe-assembly-registration-tool" target="_blank" rel="noopener noreferrer">regasm</a>生成tlb文件。</p>
</div>
<figure><img src="https://nas.ilyl.life:8092/vb/vb5.gif" alt="效果" width="420" height="200" tabindex="0" loading="lazy"><figcaption>效果</figcaption></figure>

<p>VB和C#互操作有很多细节部分：</p>
<ol>
<li>定义好接口及数据交互部分</li>
<li>设置<code>二进制兼容</code></li>
<li>Visual Basic 常用<code>DomDocument</code>来处理数据</li>
<li>C#不直接引用及注册VB动态链接库，而是使用<code>Interop.</code>文件</li>
</ol>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/vb/vb5.gif =420x200" type="image/"/>
    </item>
    <item>
      <title>CRUD</title>
      <link>https://ilyl.life/cs/vb/crud.html</link>
      <guid>https://ilyl.life/cs/vb/crud.html</guid>
      <source url="https://ilyl.life/rss.xml">CRUD</source>
      <description>Visual Basic 对数据库操作，引用Microsoft ActiveX Data Objects 2.6 Library，两个对象ADODB.Connection和ADODB.Recordset 表结构 界面 界面布局界面布局 引用Microsoft ActiveX Data Objects 2.6 Library引用Microsoft Act...</description>
      <category>VB</category>
      <pubDate>Sun, 25 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Visual Basic 对数据库操作，引用<code>Microsoft ActiveX Data Objects 2.6 Library</code>，两个对象<code>ADODB.Connection</code>和<code>ADODB.Recordset</code></p>
<h2>表结构</h2>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">Create</span> <span class="token keyword">table</span> Test
<span class="token punctuation">(</span>
  id <span class="token keyword">int</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  content nvarchar<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre></div><h2>界面</h2>
<figure><img src="https://nas.ilyl.life:8092/vb/vb1.png" alt="界面布局" width="420" height="200" tabindex="0" loading="lazy"><figcaption>界面布局</figcaption></figure>
<figure><img src="https://nas.ilyl.life:8092/vb/vb2.png" alt="引用Microsoft ActiveX Data Objects 2.6 Library" width="420" height="200" tabindex="0" loading="lazy"><figcaption>引用Microsoft ActiveX Data Objects 2.6 Library</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>新增、修改、删除代码差不多，区别在于sql语句部分</p>
</div>
<h3>新增</h3>
<figure><img src="https://nas.ilyl.life:8092/vb/vb3.png" alt="代码" width="420" height="200" tabindex="0" loading="lazy"><figcaption>代码</figcaption></figure>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Dim</span> connString <span class="token keyword">as</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> affected <span class="token keyword">As</span> <span class="token keyword">Integer</span>
conn<span class="token punctuation">.</span>Open <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=...;Password=..."</span>

sSql <span class="token operator">=</span> <span class="token string">"Insert into Test(content) values('"</span> <span class="token operator">&amp;</span> Text1<span class="token punctuation">.</span>Text <span class="token operator">&amp;</span> <span class="token string">"')"</span>
conn<span class="token punctuation">.</span>Execute sSql<span class="token punctuation">,</span> affected

conn<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>

MsgBox IIf<span class="token punctuation">(</span>affected <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"新增成功"</span><span class="token punctuation">,</span> <span class="token string">"新增失败"</span><span class="token punctuation">)</span>
</code></pre></div><figure><img src="https://nas.ilyl.life:8092/vb/vb4.png" alt="结果" width="420" height="200" tabindex="0" loading="lazy"><figcaption>结果</figcaption></figure>
<h3>修改</h3>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Private</span> <span class="token keyword">Sub</span> Command2_Click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Dim</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> affected <span class="token keyword">As</span> <span class="token keyword">Integer</span>
conn<span class="token punctuation">.</span>Open <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=...;Password=..."</span>

sSql <span class="token operator">=</span> <span class="token string">"update Test set content='"</span> <span class="token operator">&amp;</span> Text1<span class="token punctuation">.</span>Text <span class="token operator">&amp;</span> <span class="token string">"' where id=1 "</span>
conn<span class="token punctuation">.</span>Execute sSql<span class="token punctuation">,</span> affected

conn<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>

MsgBox IIf<span class="token punctuation">(</span>affected <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"修改成功"</span><span class="token punctuation">,</span> <span class="token string">"修改失败"</span><span class="token punctuation">)</span>

<span class="token keyword">End</span> <span class="token keyword">Sub</span>

</code></pre></div><h3>删除</h3>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Dim</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> affected <span class="token keyword">As</span> <span class="token keyword">Integer</span>
conn<span class="token punctuation">.</span>Open <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=...;Password=..."</span>

sSql <span class="token operator">=</span> <span class="token string">"update Test set content='"</span> <span class="token operator">&amp;</span> Text1<span class="token punctuation">.</span>Text <span class="token operator">&amp;</span> <span class="token string">"' where id=1 "</span>
conn<span class="token punctuation">.</span>Execute sSql<span class="token punctuation">,</span> affected

conn<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>

MsgBox IIf<span class="token punctuation">(</span>affected <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"修改成功"</span><span class="token punctuation">,</span> <span class="token string">"修改失败"</span><span class="token punctuation">)</span>
</code></pre></div><h3>查询</h3>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Dim</span> connString <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> rest <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset

connString <span class="token operator">=</span> <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=...;Password=..."</span>
conn<span class="token punctuation">.</span>Open connString

sSql <span class="token operator">=</span> <span class="token string">"select * from test"</span>

<span class="token keyword">If</span> rest<span class="token punctuation">.</span>State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">Then</span> rest<span class="token punctuation">.</span>Close
rest<span class="token punctuation">.</span>Open sSql<span class="token punctuation">,</span> conn<span class="token punctuation">,</span> adOpenStatic<span class="token punctuation">,</span> adLockReadOnly

List1<span class="token punctuation">.</span>Clear

<span class="token keyword">Do</span> <span class="token keyword">While</span> <span class="token keyword">Not</span> rest<span class="token punctuation">.</span>EOF
    
    List1<span class="token punctuation">.</span>AddItem rest<span class="token operator">!</span>content

    rest<span class="token punctuation">.</span>MoveNext
<span class="token keyword">Loop</span>

rest<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> rest <span class="token operator">=</span> <span class="token boolean">Nothing</span>

conn<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
</code></pre></div>]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/vb/vb1.png =420x200" type="image/"/>
    </item>
    <item>
      <title>函数、类、模块</title>
      <link>https://ilyl.life/cs/vb/fun.html</link>
      <guid>https://ilyl.life/cs/vb/fun.html</guid>
      <source url="https://ilyl.life/rss.xml">函数、类、模块</source>
      <description>在基础的CRUD操作中，发现很多代码都是重复的，可能就是SQL语句的区别。 函数 Visual Basic函数有两种形式，无返回值的Sub和有返回值的Function 将CRUD操作中的对数据库部分进行提取为Function函数，事件本身就是一个Sub函数 类 类配合属性使用，另外类中有两个事件Class_Initialize和Class_Termin...</description>
      <category>VB</category>
      <pubDate>Sun, 25 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在基础的CRUD操作中，发现很多代码都是重复的，可能就是SQL语句的区别。</p>
<h2>函数</h2>
<p>Visual Basic函数有两种形式，无返回值的<code>Sub</code>和有返回值的<code>Function</code></p>

<p>将CRUD操作中的对数据库部分进行提取为<code>Function</code>函数，事件本身就是一个<code>Sub</code>函数</p>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Public</span> <span class="token keyword">Function</span> CRUD<span class="token punctuation">(</span><span class="token keyword">ByVal</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Integer</span>
<span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Dim</span> connString <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> affected <span class="token keyword">As</span> <span class="token keyword">Integer</span>
CRUD <span class="token operator">=</span> <span class="token number">0</span>
connString <span class="token operator">=</span> <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=...;Password=..."</span>
conn<span class="token punctuation">.</span>Open connString

conn<span class="token punctuation">.</span>Execute sSql<span class="token punctuation">,</span> CRUD

conn<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
<span class="token keyword">End</span> <span class="token keyword">Function</span>
</code></pre></div><h2>类</h2>
<p>类配合属性使用，另外类中有两个事件<code>Class_Initialize</code>和<code>Class_Terminate</code>，使用时需要<code>New</code></p>

<p>完整的类定义如下：</p>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Option</span> Explicit

<span class="token keyword">Private</span> content <span class="token keyword">As</span> <span class="token keyword">String</span>

<span class="token keyword">Private</span> rest <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset

<span class="token keyword">Public</span> <span class="token keyword">Property</span> <span class="token keyword">Get</span> TestContent<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">String</span>
    TestContent <span class="token operator">=</span> content
<span class="token keyword">End</span> <span class="token keyword">Property</span>

<span class="token keyword">Public</span> <span class="token keyword">Property</span> <span class="token keyword">Let</span> TestContent<span class="token punctuation">(</span>vData <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">)</span>
    content <span class="token operator">=</span> vData
<span class="token keyword">End</span> <span class="token keyword">Property</span>

<span class="token keyword">Public</span> <span class="token keyword">Property</span> <span class="token keyword">Get</span> TestDescription<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">String</span>
TestDescription <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">If</span> <span class="token keyword">Not</span> rest <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
        <span class="token keyword">If</span> <span class="token keyword">Not</span> rest<span class="token punctuation">.</span>EOF <span class="token keyword">Then</span>
            TestDescription <span class="token operator">=</span> rest<span class="token operator">!</span>id <span class="token operator">&amp;</span> <span class="token string">"  "</span> <span class="token operator">&amp;</span> rest<span class="token operator">!</span>content
        <span class="token keyword">End</span> <span class="token keyword">If</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Property</span>

<span class="token keyword">Public</span> <span class="token keyword">Property</span> <span class="token keyword">Get</span> TestRecordSet<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset
    <span class="token keyword">Set</span> TestRecordSet <span class="token operator">=</span> rest
<span class="token keyword">End</span> <span class="token keyword">Property</span>

<span class="token keyword">Public</span> <span class="token keyword">Property</span> <span class="token keyword">Set</span> TestRecordSet<span class="token punctuation">(</span>vData <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset<span class="token punctuation">)</span>
    <span class="token keyword">Set</span> rest <span class="token operator">=</span> vData
<span class="token keyword">End</span> <span class="token keyword">Property</span>

<span class="token keyword">Private</span> <span class="token keyword">Sub</span> Class_Initialize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">If</span> rest <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
        <span class="token keyword">Set</span> rest <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
    <span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>

<span class="token keyword">Private</span> <span class="token keyword">Sub</span> Class_Terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">If</span> <span class="token keyword">Not</span> rest <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
        <span class="token keyword">If</span> rest<span class="token punctuation">.</span>State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">Then</span> rest<span class="token punctuation">.</span>Close
        <span class="token keyword">Set</span> rest <span class="token operator">=</span> <span class="token boolean">Nothing</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
</code></pre></div><p>查询代码如下:</p>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Dim</span> conn <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">Dim</span> connString <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span>
<span class="token keyword">Dim</span> rest <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
<span class="token keyword">Dim</span> test <span class="token keyword">As</span> <span class="token keyword">New</span> testCls
connString <span class="token operator">=</span> <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=sa;Password=..."</span>
conn<span class="token punctuation">.</span>Open connString

sSql <span class="token operator">=</span> <span class="token string">"select * from test"</span>

<span class="token keyword">If</span> rest<span class="token punctuation">.</span>State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">Then</span> rest<span class="token punctuation">.</span>Close
rest<span class="token punctuation">.</span>Open sSql<span class="token punctuation">,</span> conn<span class="token punctuation">,</span> adOpenStatic<span class="token punctuation">,</span> adLockReadOnly

<span class="token keyword">Set</span> test<span class="token punctuation">.</span>TestRecordSet <span class="token operator">=</span> rest

List1<span class="token punctuation">.</span>Clear

<span class="token keyword">Do</span> <span class="token keyword">While</span> <span class="token keyword">Not</span> test<span class="token punctuation">.</span>TestRecordSet<span class="token punctuation">.</span>EOF
    
    List1<span class="token punctuation">.</span>AddItem test<span class="token punctuation">.</span>TestDescription

    test<span class="token punctuation">.</span>TestRecordSet<span class="token punctuation">.</span>MoveNext
<span class="token keyword">Loop</span>

<span class="token keyword">Set</span> test <span class="token operator">=</span> <span class="token boolean">Nothing</span>

conn<span class="token punctuation">.</span>Close
<span class="token keyword">Set</span> conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
</code></pre></div><h2>模块</h2>
<p>模块与类相识，区别在于模块内的代码是全局变量。</p>
<p>一个数据库操作的全局模块</p>
<div class="language-vb" data-ext="vb" data-title="vb"><pre class="language-vb"><code><span class="token keyword">Option</span> Explicit

<span class="token keyword">Private</span> <span class="token keyword">Const</span> g_connString <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">"Provider=SQLOLEDB.1;Data Source=...;Initial Catalog=...;Uid=sa;Password=..."</span>

<span class="token keyword">Private</span> g_conn <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Connection

<span class="token keyword">Public</span> <span class="token keyword">Sub</span> ConnectDb<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">If</span> g_conn <span class="token keyword">Is</span> <span class="token boolean">Nothing</span> <span class="token keyword">Then</span>
    <span class="token keyword">Set</span> g_conn <span class="token operator">=</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Connection
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">If</span> g_conn<span class="token punctuation">.</span>State <span class="token operator">&lt;</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">Then</span>
    g_conn<span class="token punctuation">.</span>Open g_connString
<span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>

<span class="token keyword">Public</span> <span class="token keyword">Sub</span> CloseDb<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">If</span> g_conn<span class="token punctuation">.</span>State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">Then</span> g_conn<span class="token punctuation">.</span>Close
 <span class="token keyword">Set</span> g_conn <span class="token operator">=</span> <span class="token boolean">Nothing</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>


<span class="token keyword">Public</span> <span class="token keyword">Function</span> G_CRUD<span class="token punctuation">(</span><span class="token keyword">ByVal</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Integer</span>
<span class="token keyword">On</span> <span class="token keyword">Error</span> <span class="token keyword">GoTo</span> ErrHandler<span class="token punctuation">:</span>
<span class="token keyword">Dim</span> affected <span class="token keyword">As</span> <span class="token keyword">Integer</span>
G_CRUD <span class="token operator">=</span> <span class="token number">0</span>
ConnectDb
g_conn<span class="token punctuation">.</span>Execute sSql<span class="token punctuation">,</span> G_CRUD
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    <span class="token keyword">Exit</span> <span class="token keyword">Function</span>
ErrHandler<span class="token punctuation">:</span>
    MsgBox VBA<span class="token punctuation">.</span>Err<span class="token punctuation">.</span>Description
    <span class="token keyword">GoTo</span> <span class="token keyword">finally</span>
<span class="token keyword">End</span> <span class="token keyword">Function</span>

<span class="token keyword">Public</span> <span class="token keyword">Function</span> G_Query<span class="token punctuation">(</span><span class="token keyword">ByVal</span> sSql <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">)</span> <span class="token keyword">As</span> ADODB<span class="token punctuation">.</span>Recordset
<span class="token keyword">On</span> <span class="token keyword">Error</span> <span class="token keyword">GoTo</span> ErrHandler<span class="token punctuation">:</span>
<span class="token keyword">Dim</span> rest <span class="token keyword">As</span> <span class="token keyword">New</span> ADODB<span class="token punctuation">.</span>Recordset
<span class="token keyword">If</span> rest<span class="token punctuation">.</span>State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">Then</span> rest<span class="token punctuation">.</span>Close
ConnectDb
rest<span class="token punctuation">.</span>Open sSql<span class="token punctuation">,</span> g_conn<span class="token punctuation">,</span> adOpenStatic<span class="token punctuation">,</span> adLockReadOnly
<span class="token keyword">Set</span> G_Query <span class="token operator">=</span> rest
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    <span class="token keyword">Exit</span> <span class="token keyword">Function</span>
ErrHandler<span class="token punctuation">:</span>
    MsgBox VBA<span class="token punctuation">.</span>Err<span class="token punctuation">.</span>Description
    <span class="token keyword">GoTo</span> <span class="token keyword">finally</span>
<span class="token keyword">End</span> <span class="token keyword">Function</span>
</code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>增广贤文</title>
      <link>https://ilyl.life/books/</link>
      <guid>https://ilyl.life/books/</guid>
      <source url="https://ilyl.life/rss.xml">增广贤文</source>
      <description>昔 时 贤 文 , 诲 汝 谆 谆 , 集 韵 增 文 , 多 见 多 闻 。 观 今 宜 鉴 古 , 无 古 不 成 今 。 知 己 知 彼 , 将 心 比 心 。 酒 逢 知 己 饮 , 诗 向 会 人 吟 。 相 识 满 天 下 , 知 心 能 几 人 。 相 逢 好 似 初 相 识 , 到 老 终 无 怨 恨 心 。 近 水 知 鱼 性 , 近...</description>
      <category>书籍</category>
      <pubDate>Tue, 20 Jun 2023 03:28:24 GMT</pubDate>
      <content:encoded><![CDATA[<p>昔 时 贤 文 , 诲 汝 谆 谆 , 集 韵 增 文 , 多 见 多 闻 。</p>
<p>观 今 宜 鉴 古 , 无 古 不 成 今 。</p>
<p>知 己 知 彼 , 将 心 比 心 。</p>
<p>酒 逢 知 己 饮 , 诗 向 会 人 吟 。</p>
<p>相 识 满 天 下 , 知 心 能 几 人 。</p>
<p>相 逢 好 似 初 相 识 , 到 老 终 无 怨 恨 心 。</p>
<p>近 水 知 鱼 性 , 近 山 识 鸟 音 。</p>
<p>易 涨 易 退 山 溪 水 , 易 反 易 覆 小 人 心 。</p>
<p>运 去 金 成 铁 , 时 来 铁 似 金 , 读 书 须 用 意 , 一 字 值 千 金 。</p>
<p>逢 人 且 说 三 分 话 , 未 可 全 抛 一 片 心 。</p>
<p>有 意 栽 花 花 不 发 , 无 心 插 柳 柳 成 阴 。</p>
<p>画 虎 画 皮 难 画 骨 , 知 人 知 面 不 知 心 。</p>
<p>钱 财 如 粪 土 , 仁 义 值 千 金 。</p>
<p>流 水 下 滩 非 有 意 , 白 云 出 岫 本 无 心 。</p>
<p>当 时 若 不 登 高 望 , 谁 信 东 流 海 洋 深 。</p>
<p>路 遥 知 马 力 , 事 久 见 人 心 。</p>
<p>两 人 一 般 心 , 无 钱 堪 买 金 , 一 人 一 般 心 , 有 钱 难 买 针 。</p>
<p>相 见 易 得 好 , 久 住 难 为 人 。</p>
<p>马 行 无 力 皆 因 瘦 , 人 不 风 流 只 为 贫 。</p>
<p>饶 人 不 是 痴 汉 , 痴 汉 不 会 饶 人 。</p>
<p>是 亲 不 是 亲 , 非 亲 却 是 亲 。</p>
<p>美 不 美 , 乡 中 水 , 亲 不 亲 , 故 乡 人 。</p>
<p>莺 花 犹 怕 春 光 老 , 岂 可 教 人 枉 度 春 。</p>
<p>相 逢 不 饮 空 归 去 , 洞 口 桃 花 也 笑 人 。</p>
<p>红 粉 佳 人 休 使 老 , 风 流 浪 子 莫 教 贫 。</p>
<p>在 家 不 会 迎 宾 客 , 出 外 方 知 少 主 人 。</p>
<p>黄 金 无 假 , 阿 魏 无 真 。</p>
<p>客 来 主 不 顾 , 应 恐 是 痴 人 。</p>
<p>贫 居 闹 市 无 人 问 , 富 在 深 山 有 远 亲 。</p>
<p>谁 人 背 后 无 人 说 , 哪 个 人 前 不 说 人 。</p>
<p>有 钱 道 真 语 , 无 钱 语 不 真 。</p>
<p>不 信 但 看 筵 中 酒 , 杯 杯 先 劝 有 钱 人 。</p>
<p>闹 里 有 钱 , 静 处 安 身 。</p>
<p>来 如 风 雨 , 去 似 微 尘 。</p>
<p>长 江 后 浪 推 前 浪 , 世 上 新 人 赶 旧 人 。</p>
<p>近 水 楼 台 先 得 月 , 向 阳 花 木 早 逢 春 。</p>
<p>莫 道 君 行 早 , 更 有 早 行 人 。</p>
<p>莫 信 直 中 直 , 须 防 仁 不 仁 。</p>
<p>山 中 有 直 树 , 世 上 无 直 人 。</p>
<p>自 恨 枝 无 叶 , 莫 怨 太 阳 偏 。</p>
<p>大 家 都 是 命 , 半 点 不 由 人 。</p>
<p>一 年 之 计 在 于 春 , 一 日 之 计 在 于 寅 , 一 家 之 计 在 于 和 , 一 生 之 计 在 于 勤 。</p>
<p>责 人 之 心 责 己 , 恕 己 之 心 恕 人 。</p>
<p>守 口 如 瓶 , 防 意 如 城 。</p>
<p>宁 可 人 负 我 , 切 莫 我 负 人 。</p>
<p>再 三 须 慎 意 , 第 一 莫 欺 心 。</p>
<p>虎 生 犹 可 近 , 人 熟 不 堪 亲 。</p>
<p>来 说 是 非 者 , 便 是 是 非 人 。</p>
<p>远 水 难 救 近 火 , 远 亲 不 如 近 邻 。</p>
<p>有 茶 有 酒 多 兄 弟 , 急 难 何 曾 见 一 人 。</p>
<p>人 情 似 纸 张 张 薄 , 世 事 如 棋 局 局 新 。</p>
<p>山 中 也 有 千 年 树 , 世 上 难 逢 百 岁 人 。</p>
<p>力 微 休 负 重 , 言 轻 莫 劝 人 。</p>
<p>无 钱 休 入 众 , 遭 难 莫 寻 亲 。</p>
<p>平 生 莫 作 皱 眉 事 , 世 上 应 无 切 齿 人 。</p>
<p>士 者 国 之 宝 , 儒 为 席 上 珍 。</p>
<p>若 要 断 酒 法 , 醒 眼 看 醉 人 。</p>
<p>求 人 须 求 大 丈 夫 , 济 人 须 济 急 时 无 。</p>
<p>渴 时 一 滴 如 甘 露 , 醉 后 添 杯 不 如 无 。</p>
<p>久 住 令 人 贱 , 频 来 亲 也 疏 。</p>
<p>酒 中 不 语 真 君 子 , 财 上 分 明 大 丈 夫 。</p>
<p>出 家 如 初 , 成 佛 有 余 。</p>
<p>积 金 千 两 , 不 如 明 解 经 书 。</p>
<p>养 子 不 教 如 养 驴 , 养 女 不 教 如 养 猪 。</p>
<p>有 田 不 耕 仓 廪 虚 , 有 书 不 读 子 孙 愚 。</p>
<p>仓 廪 虚 兮 岁 月 乏 , 子 孙 愚 兮 礼 义 疏 。</p>
<p>同 君 一 席 话 , 胜 读 十 年 书 。</p>
<p>人 不 通 今 古 , 马 牛 如 襟 裾</p>
<p>茫 茫 四 海 人 无 数 , 哪个男儿是丈夫 。</p>
<p>白 酒 酿 成 缘 好 客 , 黄 金 散 尽 为 收 书 。</p>
<p>救 人 一 命 , 胜 造 七 级 浮 屠 。</p>
<p>城 门 失 火 , 殃 及 池 鱼 。</p>
<p>庭 前 生 瑞 草 , 好 事 不 如 无 。</p>
<p>欲 求 生 富 贵 , 须 下 死 工 夫 。</p>
<p>百 年 成 之 不 足 , 一 旦 败 之 有 余 。</p>
<p>人 心 似 铁 , 官 法 如 炉 。</p>
<p>善 化 不 足 , 恶 化 有 余 。</p>
<p>水 太 清 则 无 鱼 , 人 至 察 则 无 徒 。</p>
<p>知 者 减 半 , 省 者 全 无 。</p>
<p>在 家 由 父 , 出 家 从 夫 。</p>
<p>痴 人 畏 妇 , 贤 女 敬 夫 。</p>
<p>是 非 终 日 有 , 不 停 自 然 无 。</p>
<p>宁 客 正 而 不 足 , 不 可 邪 而 有 余 。</p>
<p>宁 可 信 其 有 , 不 可 信 其 无 。</p>
<p>竹 篱 茅 舍 风 光 好 , 道 院 僧 堂 终 不 如 。</p>
<p>命 力 有 时 终 须 有 , 命 力 无 时 莫 强 求 。</p>
<p>道 院 迎 仙 客 , 书 堂 隐 相 儒 。</p>
<p>庭 栽 牺 凤 竹 , 池 养 化 龙 鱼 。</p>
<p>结 交 须 胜 已 , 似 我 无 如 无 。</p>
<p>但 看 三 五 日 , 相 见 不 如 初 。</p>
<p>人 情 似 水 分 高 下 , 世 事 如 云 任 卷 舒 。</p>
<p>会 说 说 都 是 , 不 会 说 无 礼 。</p>
<p>磨 刀 恨 不 利 , 刀 利 伤 人 指 。</p>
<p>求 财 恨 不 得 , 财 务 害 自 己 。</p>
<p>知 足 常 足 , 终 身 不 辱 。</p>
<p>知 止 常 止 , 终 身 不 耻 。</p>
<p>有 福 伤 财 , 无 福 伤 己 。</p>
<p>差 之 毫 厘 , 失 之 千 里 。</p>
<p>若 登 高 必 自 卑 , 若 涉 远 必 自 迩 。</p>
<p>三 思 而 行 , 再 思 可 矣 。</p>
<p>使 口 不 如 自 走 , 求 人 不 如 求 己 。</p>
<p>小 时 是 兄 弟 , 长 大 各 乡 里 。</p>
<p>妒 财 莫 妒 食 , 怨 生 莫 怨 死 。</p>
<p>人 见 白 头 嗔 , 我 见 白 头 喜 。</p>
<p>多 少 少 年 亡 , 不 到 白 头 死 。</p>
<p>墙 有 逢 , 壁 有 耳 。</p>
<p>好 事 不 出 门 , 恶 事 传 千 里 。</p>
<p>贼 是 小 人 , 知 过 君 子 。</p>
<p>君 子 固 穷 , 小 人 穷 斯 滥 也 。</p>
<p>贫 穷 自 在 , 富 贵 多 忧 。</p>
<p>不 以 我 为 德 , 反 以 我 为 仇 。</p>
<p>宁 向 直 中 取 , 不 可 曲 中 求 。</p>
<p>人 无 远 虑 , 必 有 近 忧 。</p>
<p>知 我 者 为 我 心 忧 , 不 知 我 者 谓 我 何 求 。</p>
<p>晴 天 不 肯 去 , 只 待 雨 淋 头 。</p>
<p>成 事 莫 说 , 覆 水 难 收 。</p>
<p>是 否 只 为 多 开 口 , 烦 恼 皆 因 强 出 头 。</p>
<p>忍 得 一 时 之 气 , 免 得 百 日 之 忧 。</p>
<p>近 来 学 得 乌 龟 法 , 得 缩 头 时 且 缩 头 。</p>
<p>惧 法 朝 朝 乐 , 欺 公 日 日 忧 。</p>
<p>人 生 一 世 , 草 生 一 春 。</p>
<p>黑 发 不 如 勤 学 早 , 看 看 又 是 白 头 翁 。</p>
<p>月 到 十 五 光 明 少 , 人 到 中 年 万 事 休 。</p>
<p>儿 孙 自 有 儿 孙 福 , 莫 为 儿 孙 作 马 牛 。</p>
<p>人 生 不 满 百 , 常 怀 千 岁 忧 。</p>
<p>今 朝 有 酒 今 朝 醉 , 明 日 愁 来 明 日 忧 。</p>
<p>路 逢 险 处 回 避 , 事 到 头 来 不 自 由 。</p>
<p>药 能 医 假 病 , 酒 不 解 真 愁 。</p>
<p>人 贫 不 语 , 水 平 不 流 。</p>
<p>一 家 有 女 百 家 求 , 一 马 不 行 百 马 忧 。</p>
<p>有 花 方 酌 酒 , 无 月 不 登 楼 。</p>
<p>三 杯 通 大 道 , 一 醉 解 千 愁 。</p>
<p>深 山 毕 竟 藏 猛 虎 , 大 海 终 须 纳 细 流 。</p>
<p>惜 花 须 检 点 , 爱 月 不 梳 头 。</p>
<p>大 抵 选 他 肌 骨 好 , 不 擦 红 粉 也 风 流 。</p>
<p>受 恩 深 处 宜 先 退 , 得 意 浓 时 便 可 休 。</p>
<p>莫 待 是 否 来 入 耳 , 从 前 恩 爱 反 为 仇 。</p>
<p>留 得 五 湖 明 月 在 , 不 愁 无 处 下 金 钩 。</p>
<p>休 别 有 鱼 处 , 莫 恋 浅 滩 头 。</p>
<p>去 时 终 须 去 , 再 三 留 不 住 。</p>
<p>忍 一 句 , 息 一 怒 , 饶 一 着 , 退 一 步 。</p>
<p>三 十 不 豪 , 四 十 不 富 , 五 十 将 来 寻 死 路 。</p>
<p>生 不 论 魂 , 死 不 认 尸 。</p>
<p>父 母 恩 深 终 有 别 , 夫 妻 义 重 也 分 离 。</p>
<p>人 生 似 鸟 同 林 宿 , 大 限 来 时 各 自 飞 。</p>
<p>人 善 被 人 欺 , 马 善 被 人 骑 。</p>
<p>人 无 横 财 不 富 , 马 无 野 草 不 肥 。</p>
<p>人 恶 人 怕 天 不 怕 , 人 善 人 欺 天 不 欺 。</p>
<p>善 恶 到 头 终 有 报 , 只 争 来 早 与 来 迟 。</p>
<p>黄 河 尚 有 澄 清 日 , 岂 可 人 无 得 运 时 。</p>
<p>得 宠 思 辱 , 安 居 思 危 。</p>
<p>念 念 有 如 临 敌 日 , 心 心 常 似 过 桥 时 。</p>
<p>英 雄 行 险 道 , 富 贵 似 花 枝 。</p>
<p>人 情 莫 道 春 光 好 , 只 怕 秋 来 有 冷 时 。</p>
<p>送 君 千 里 , 终 须 一 别 。</p>
<p>但 将 冷 眼 看 螃 蟹 , 看 你 横 行 到 几 时 。</p>
<p>见 事 莫 说 , 问 事 不 知 。</p>
<p>闲 事 休 管 , 无 事 早 归 。</p>
<p>假 缎 染 就 真 红 色 , 也 被 旁 人 说 是 非 。</p>
<p>善 事 可 作 , 恶 事 莫 为 。</p>
<p>许 人 一 物 , 千 金 不 移 。</p>
<p>龙 生 龙 子 , 虎 生 豹 儿 。</p>
<p>龙 游 浅 水 遭 虾 戏 , 虎 落 平 阳 被 犬 欺 。</p>
<p>一 举 首 登 龙 虎 榜 , 十 年 身 到 凤 凰 池 。</p>
<p>十 年 窗 下 无 人 问 , 一 举 成 名 天 下 知 。</p>
<p>酒 债 寻 常 行 处 有 , 人 生 七 十 古 来 稀 。</p>
<p>养 儿 待 老 , 积 谷 防 饥 。</p>
<p>鸡 豚 狗 彘 之 畜 , 无 失 其 时 。</p>
<p>数 家 之 口 , 可 以 无 饥 矣 。</p>
<p>常 将 有 日 思 无 日 , 莫 把 无 时 当 有 时 。</p>
<p>时 来 风 送 滕 王 阁 , 运 去 雷 轰 荐 福 碑 。</p>
<p>入 门 休 问 枯 荣 事 , 观 看 容 颜 便 得 知 。</p>
<p>官 清 书 吏 瘦 , 神 灵 庙 祝 肥 。</p>
<p>息 却 雷 霆 之 怒 , 摆 却 虎 狼 之 威 。</p>
<p>饶 人 算 人 之 本 , 输 人 算 人 之 机 。</p>
<p>好 言 难 得 , 恶 语 易 施 。</p>
<p>一 言 既 出 , 驷 马 难 追 。</p>
<p>道 吾 好 者 是 吾 贼 , 道 吾 恶 者 是 吾 师 。</p>
<p>路 逢 侠 客 须 呈 剑 , 不 是 才 人 莫 献 诗 。</p>
<p>三 人 同 行 , 必 有 我 师 , 择 其 善 者 而 从 之 , 其 不 善 者 而 改 之 。</p>
<p>少 壮 不 努 力 , 老 大 徒 悲 伤 。</p>
<p>人 有 善 愿 , 天 必 佑 之 。</p>
<p>莫 饮 卯 时 酒 , 昏 昏 醉 到 酉 。</p>
<p>莫 骂 酉 时 妻 , 一 夜 受 孤 妻 。</p>
<p>种 麻 得 麻 , 种 豆 得 豆 。</p>
<p>天 眼 恢 恢 , 疏 而 不 漏 。</p>
<p>见 官 莫 向 前 , 做 客 莫 在 后 。</p>
<p>宁 添 一 斗 , 莫 添 一 口 。</p>
<p>螳 螂 捕 蝉 , 岂 知 黄 雀 在 后 。</p>
<p>不 求 金 玉 重 重 贵 , 但 愿 儿 孙 个 个 贤 。</p>
<p>一 日 夫 妻 , 百 世 姻 缘 。</p>
<p>百 世 修 来 同 船 渡 , 千 世 修 来 共 枕 眠 。</p>
<p>杀 人 一 万 , 自 损 三 千 。</p>
<p>伤 人 一 语 , 利 如 刀 割 。</p>
<p>枯 木 逢 春 犹 再 发 , 人 无 两 度 再 少 年 。</p>
<p>未 晚 先 投 宿 , 鸡 鸣 早 看 天 。</p>
<p>将 相 胸 前 堪 走 马 , 公 候 肚 里 好 撑 船 。</p>
<p>富 人 思 来 年 , 穷 人 思 眼 前 。</p>
<p>世 上 若 要 人 情 好 , 赊 去 物 件 莫 取 钱 。</p>
<p>死 生 有 命 , 富 贵 在 天 。</p>
<p>击 石 原 有 火 , 不 击 乃 无 烟 。</p>
<p>为 学 始 知 道 , 不 学 亦 徒 然 。</p>
<p>莫 笑 他 人 老 , 终 须 还 到 老 。</p>
<p>但 能 依 本 法 , 终 须 无 烦 恼 。</p>
<p>君 子 爱 财 , 取 之 有 道 。</p>
<p>贞 妇 爱 色 , 纳 之 以 礼 。</p>
<p>善 有 善 报 , 恶 有 恶 报 。</p>
<p>不 是 不 报 , 日 子 不 到 。</p>
<p>人 而 无 信 , 不 知 其 可 也 。</p>
<p>一 人 道 好 , 千 人 传 实 。</p>
<p>凡 事 要 好 , 须 问 三 老 。</p>
<p>若 争 小 可 , 便 失 大 道 。</p>
<p>年 年 防 饥 , 夜 夜 防 盗 。</p>
<p>学 者 如 禾 如 稻 , 不 学 者 如 蒿 如 草 。</p>
<p>遇 饮 酒 时 须 饮 酒 , 得 高 歌 处 且 高 歌 。</p>
<p>因 风 吹 火 , 用 力 不 多 。</p>
<p>不 因 渔 父 引 , 怎 得 见 波 涛 。</p>
<p>无 求 到 处 人 情 好 , 不 饮 从 他 酒 价 高 。</p>
<p>知 事 少 时 烦 恼 少 , 识 人 多 处 是 非 多 。</p>
<p>入 山 不 怕 伤 人 虎 , 只 怕 人 情 两 面 刀 。</p>
<p>强 中 更 有 强 中 手 , 恶 人 须 用 恶 人 磨 。</p>
<p>会 使 不 在 家 富 豪 , 风 流 不 用 着 衣 多 。</p>
<p>光 阴 似 箭 , 日 月 如 梭 。</p>
<p>天 时 不 如 地 利 , 地 利 不 如 人 和 。</p>
<p>黄 金 未 为 贵 , 安 乐 值 钱 多 。</p>
<p>世 上 万 般 皆 下 品 , 思 量 唯 有 读 书 高 。</p>
<p>世 间 好 语 书 说 尽 , 天 下 名 山 僧 占 多 。</p>
<p>为 善 最 乐 , 为 恶 难 逃 。</p>
<p>羊 有 跪 儒 之 恩 , 鸦 有 反 哺 之 义 。</p>
<p>你 急 他 未 急 , 人 闲 心 不 闲 。</p>
<p>隐 恶 扬 善 , 执 其 两 端 。</p>
<p>妻 贤 夫 祸 少 , 子 孝 父 心 宽 。</p>
<p>即 坠 釜 甑 , 反 顾 无 益 。</p>
<p>翻 覆 之 水 , 收 之 实 难 。</p>
<p>人 生 知 足 何 时 足 , 人 老 偷 闲 且 是 闲 。</p>
<p>但 又 绿 扬 堪 系 马 , 处 处 有 路 透 长 安 。</p>
<p>见 者 易 , 学 者 难 。</p>
<p>莫 将 容 易 得 , 便 作 等 闲 看 。</p>
<p>用 心 计 较 般 般 错 , 退 步 思 量 事 事 难 。</p>
<p>道 路 各 别 , 养 家 一 般 。</p>
<p>从 俭 入 奢 易 , 从 奢 入 俭 难 。</p>
<p>知 音 说 与 知 音 听 , 不 是 知 音 莫 与 弹 。</p>
<p>点 石 化 成 金 , 人 心 犹 未 足 。</p>
<p>信 了 肚 , 卖 了 屋 。</p>
<p>他 人 观 花 , 不 涉 你 目 。</p>
<p>他 人 碌 碌 , 不 涉 你 足 。</p>
<p>谁 人 不 爱 子 孙 贤 , 谁 人 不 爱 千 钟 栗 。</p>
<p>莫 把 真 心 空 计 较 , 五 行 不 是 这 题 目 。</p>
<p>与 人 不 和 , 劝 人 养 鹅 。</p>
<p>与 人 不 睦 , 劝 人 架 屋 。</p>
<p>但 行 好 事 , 莫 问 前 程 。</p>
<p>河 狭 水 急 , 人 急 计 生 。</p>
<p>明 知 山 有 虎 , 莫 向 虎 山 行 。</p>
<p>路 不 行 不 到 , 事 不 为 不 成 。</p>
<p>人 不 劝 不 善 , 钟 不 打 不 鸣 。</p>
<p>无 钱 方 断 酒 , 临 老 始 看 经 。</p>
<p>点 塔 七 层 , 不 如 暗 处 一 灯 。</p>
<p>万 事 劝 人 休 瞒 昧 , 举 头 三 尺 有 神 明 。</p>
<p>但 存 方 寸 土 , 留 与 子 孙 耕 。</p>
<p>灭 却 心 头 火 , 剔 起 佛 前 灯 。</p>
<p>惺 惺 常 步 足 , 懵 懵 作 公 卿 。</p>
<p>众 星 朗 朗 , 不 如 孤 月 独 明 。</p>
<p>兄 弟 相 害 , 不 如 自 生 。</p>
<p>合 理 可 作 , 小 利 莫 争 。</p>
<p>杜 丹 花 好 空 入 目 , 枣 花 虽 小 结 实 成 。</p>
<p>欺 老 莫 欺 小 , 欺 人 心 不 明 。</p>
<p>随 分 耕 锄 收 地 利 , 他 时 饱 满 谢 苍 天 。</p>
<p>得 忍 且 忍 , 得 耐 且 耐 。</p>
<p>不 忍 不 耐 , 小 事 成 大 。</p>
<p>相 论 逞 英 雄 , 家 计 渐 渐 退 。</p>
<p>贤 妇 令 夫 贵 , 恶 妇 令 夫 败 。</p>
<p>一 人 有 庆 , 兆 民 咸 赖 。</p>
<p>人 老 心 未 老 , 人 穷 志 莫 穷 。</p>
<p>人 无 千 日 好 , 花 无 百 日 红 。</p>
<p>杀 人 可 怒 , 情 理 难 容 。</p>
<p>乍 富 不 知 新 受 用 , 乍 贫 难 改 旧 家 风 。</p>
<p>座 上 客 常 满 , 樽 钟 酒 不 空 。</p>
<p>屋 漏 更 遭 连 年 雨 , 行 船 又 遇 打 头 风 。</p>
<p>笋 因 落 箨 方 成 竹 , 鱼 为 奔 波 始 化 龙 。</p>
<p>记 得 少 年 骑 竹 马 , 看 看 又 是 白 头 翁 。</p>
<p>礼 义 生 于 富 足 , 盗 贼 出 于 贫 穷 。</p>
<p>天 上 众 星 皆 拱 北 , 世 间 无 水 不 朝 东 。</p>
<p>君 子 安 平 , 达 人 知 命 。</p>
<p>忠 言 逆 耳 利 于 行 , 良 药 苦 口 利 于 病 。</p>
<p>顺 天 者 存 , 逆 天 者 亡 。</p>
<p>人 为 财 死 , 鸟 为 食 亡 。</p>
<p>夫 妻 相 合 好 , 琴 瑟 与 笙 簧 。</p>
<p>有 儿 贫 不 久 , 无 子 富 不 长 。</p>
<p>善 必 寿 老 , 恶 必 早 亡 。</p>
<p>爽 口 食 多 偏 作 药 , 快 心 事 过 恐 生 殃 。</p>
<p>富 贵 定 药 安 本 分 , 贫 穷 不 必 枉 思 量 。</p>
<p>画 水 无 风 空 作 浪 , 绣 花 虽 好 不 闻 香 。</p>
<p>贪 他 一 斗 米 , 失 却 半 年 粮 。</p>
<p>争 他 一 脚 豚 , 反 失 一 肘 羊 。</p>
<p>龙 归 晚 洞 云 犹 湿 , 麝 过 春 山 草 木 香 。</p>
<p>平 生 只 会 量 人 短 , 何 不 回 头 把 自 量 。</p>
<p>见 善 如 不 及 , 见 恶 如 探 汤 。</p>
<p>人 贫 志 短 , 马 瘦 毛 长 。</p>
<p>自 家 心 里 急 , 他 人 未 知 忙 。</p>
<p>贫 无 达 士 将 金 赠 , 病 有 高 人 说 药 方 。</p>
<p>触 来 莫 与 说 , 事 过 心 清 凉 。</p>
<p>秋 至 满 山 多 秀 色 , 春 赖 无 处 不 花 香 。</p>
<p>凡 人 不 可 貌 相 , 海 水 不 可 斗 量 。</p>
<p>清 清 之 水 , 为 士 所 防 。</p>
<p>济 济 之 士 , 为 酒 所 伤 。</p>
<p>篙 草 之 下 , 或 有 兰 香 。</p>
<p>茅 茨 之 屋 , 或 有 侯 王 。</p>
<p>无 限 朱 门 生 饿 殍 , 几 多 白 屋 出 公 卿 。</p>
<p>醉 后 乾 坤 达 , 壶 中 日 月 长 。</p>
<p>万 事 皆 已 定 , 浮 生 空 白 茫 。</p>
<p>千 里 送 毫 毛 , 礼 轻 仁 义 重 。</p>
<p>一 人 传 虚 , 百 人 传 实 。</p>
<p>世 事 明 如 镜 , 前 程 暗 似 漆 。</p>
<p>光 阴 黄 金 难 买 , 一 世 如 驹 过 隙 。</p>
<p>良 田 万 顷 , 日 食 一 升 。</p>
<p>大 厦 千 间 , 夜 眠 八 尺 。</p>
<p>千 经 万 典 , 孝 义 为 先 。</p>
<p>一 字 入 公 门 , 九 牛 拖 不 出 。</p>
<p>衙 门 八 字 开 , 有 理 无 钱 莫 进 来 。</p>
<p>富 从 升 合 起 , 贫 因 不 算 来 。</p>
<p>家 中 无 才 子 , 官 从 何 处 来 。</p>
<p>万 事 不 由 人 计 较 , 一 生 都 是 命 安 排 。</p>
<p>急 行 慢 行 , 前 程 只 有 多 少 路 。</p>
<p>人 间 私 语 , 天 闻 若 雷 。</p>
<p>暗 室 亏 心 , 神 目 如 电 。</p>
<p>一 毫 之 恶 , 劝 人 莫 作 。</p>
<p>一 毫 之 善 , 与 人 方 便 。</p>
<p>欺 人 是 祸 , 饶 人 是 福 。</p>
<p>天 眼 恢 恢 , 报 应 甚 速 。</p>
<p>圣 贤 言 语 , 神 钦 鬼 伏 。</p>
<p>人 各 有 心 , 心 各 有 见 。</p>
<p>口 说 不 如 身 逢 , 耳 闻 不 如 目 见 。</p>
<p>养 军 千 日 , 用 在 一 朝 。</p>
<p>国 清 才 子 贵 , 家 富 小 儿 骄 。</p>
<p>利 刀 割 体 痕 易 合 , 恶 语 伤 人 恨 不 消 。</p>
<p>公 道 实 践 唯 白 发 , 贵 人 头 上 不 曾 饶 。</p>
<p>有 钱 堪 出 众 , 无 衣 懒 出 门 。</p>
<p>为 官  须 作 相 , 及 第 必 争 先 。</p>
<p>苗 从 地 发 , 树 向 枝 分 。</p>
<p>父 子 和 而 家 不 退 , 兄 弟 和 而 家 不 分 。</p>
<p>官 有 正 条 , 民 有 和 约 。</p>
<p>闲 时 不 烧 香 , 急 时 抱 佛 脚 。</p>
<p>幸 生 太 平 无 事 日 , 恐 逢 年 老 不 多 时 。</p>
<p>国 乱 思 良 将 , 家 贫 思 贤 妻 。</p>
<p>池 塘 积 水 须 防 旱 , 田 地 勤 耕 足 养 家 。</p>
<p>根 深 不 怕 风 摇 动 , 树 正 无 愁 月 影 斜 。</p>
<p>奉 劝 君 子 , 各 宜 守 己 。</p>
<p>只 此 程 式 , 万 无 一 失 。</p>
]]></content:encoded>
    </item>
    <item>
      <title>识别不到ISO文件</title>
      <link>https://ilyl.life/tools/vmware/cd.html</link>
      <guid>https://ilyl.life/tools/vmware/cd.html</guid>
      <source url="https://ilyl.life/rss.xml">识别不到ISO文件</source>
      <description>在编辑虚拟机设置,CD/DVD(SATA)高级选项里SATA选择SATA 0:0 识别不到ISO问题识别不到ISO问题 </description>
      <category>工具箱</category>
      <pubDate>Tue, 23 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在<code>编辑虚拟机设置</code>,<code>CD/DVD(SATA)</code>高级选项里<code>SATA</code>选择<code>SATA 0:0</code></p>
<figure><img src="https://nas.ilyl.life:8092/vmware/vm1.png" alt="识别不到ISO问题" width="420" height="200" tabindex="0" loading="lazy"><figcaption>识别不到ISO问题</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/vmware/vm1.png =420x200" type="image/"/>
    </item>
    <item>
      <title>关于接口</title>
      <link>https://ilyl.life/tools/yonyou/</link>
      <guid>https://ilyl.life/tools/yonyou/</guid>
      <source url="https://ilyl.life/rss.xml">关于接口</source>
      <description>不在维护及更新，仅此怀念。 通用接口 通用支持yonyou U8 10.1及以上版本 定制开发 定制开发支持yonyou U8 10.1及以上版本，涉及门户按钮、档案、单据、预警、定时、打包等常用开发功能。 JSON数据基本结构 提示 其他特殊结构请参考具体示例 资源符 create：新增 edit：修改 delete：删除 verify：审核 unv...</description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>不在维护及更新，仅此怀念。</p>
<h2>通用接口</h2>
<p>通用支持yonyou U8 10.1及以上版本</p>
<h2>定制开发</h2>
<p>定制开发支持yonyou U8 10.1及以上版本，涉及<code>门户按钮</code>、<code>档案</code>、<code>单据</code>、<code>预警</code>、<code>定时</code>、<code>打包</code>等常用开发功能。</p>
<h2>JSON数据基本结构</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>其他特殊结构请参考具体示例</p>
</div>

<h2>资源符</h2>
<p><code>create</code>：新增</p>
<p><code>edit</code>：修改</p>
<p><code>delete</code>：删除</p>
<p><code>verify</code>：审核</p>
<p><code>unverify</code>：弃审</p>
<p>其他个别资源符查看对应文档</p>
<h2>返回参数</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">errcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">错误码</td>
</tr>
<tr>
<td style="text-align:left">errmsg</td>
<td style="text-align:left">string</td>
<td style="text-align:left">错误描述</td>
</tr>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">单据ID</td>
</tr>
<tr>
<td style="text-align:left">tradeid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">唯一号</td>
</tr>
</tbody>
</table>
<h2>错误码</h2>
<table>
<thead>
<tr>
<th style="text-align:left">返回码</th>
<th style="text-align:left">返回消息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">0</td>
<td style="text-align:left">成功</td>
</tr>
<tr>
<td style="text-align:left">10002</td>
<td style="text-align:left">不支持的操作</td>
</tr>
<tr>
<td style="text-align:left">10010</td>
<td style="text-align:left">获取默认模板失败</td>
</tr>
<tr>
<td style="text-align:left">18000</td>
<td style="text-align:left">内部错误</td>
</tr>
<tr>
<td style="text-align:left">18001</td>
<td style="text-align:left">服务错误</td>
</tr>
<tr>
<td style="text-align:left">18002</td>
<td style="text-align:left">客户端错误</td>
</tr>
<tr>
<td style="text-align:left">18003</td>
<td style="text-align:left">服务未启动</td>
</tr>
<tr>
<td style="text-align:left">19000</td>
<td style="text-align:left">无效的身份验证</td>
</tr>
<tr>
<td style="text-align:left">19999</td>
<td style="text-align:left">意外的错误</td>
</tr>
<tr>
<td style="text-align:left">20000</td>
<td style="text-align:left">单据加载失败</td>
</tr>
<tr>
<td style="text-align:left">20001</td>
<td style="text-align:left">单据新增失败</td>
</tr>
<tr>
<td style="text-align:left">20002</td>
<td style="text-align:left">单据修改失败</td>
</tr>
<tr>
<td style="text-align:left">20003</td>
<td style="text-align:left">单据删除失败</td>
</tr>
<tr>
<td style="text-align:left">20004</td>
<td style="text-align:left">单据审核失败</td>
</tr>
<tr>
<td style="text-align:left">20005</td>
<td style="text-align:left">单据弃审失败</td>
</tr>
</tbody>
</table>
<h2>如何使用</h2>

]]></content:encoded>
    </item>
    <item>
      <title>收款单</title>
      <link>https://ilyl.life/tools/yonyou/financial/accept.html</link>
      <guid>https://ilyl.life/tools/yonyou/financial/accept.html</guid>
      <source url="https://ilyl.life/rss.xml">收款单</source>
      <description>收款单收款单 资源符 accept 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/accept.gif" alt="收款单" tabindex="0" loading="lazy"><figcaption>收款单</figcaption></figure>
<h2>资源符</h2>
<p><code>accept</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">vouchtype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据类型</td>
</tr>
<tr>
<td style="text-align:left">vouchcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据编号</td>
</tr>
<tr>
<td style="text-align:left">vouchdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据日期</td>
</tr>
<tr>
<td style="text-align:left">period</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">期间</td>
</tr>
<tr>
<td style="text-align:left">customercode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客商编码</td>
</tr>
<tr>
<td style="text-align:left">departmentcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">personcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职员编码</td>
</tr>
<tr>
<td style="text-align:left">itemclasscode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">项目大类编号</td>
</tr>
<tr>
<td style="text-align:left">itemcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">项目编码</td>
</tr>
<tr>
<td style="text-align:left">itemname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">项目名称</td>
</tr>
<tr>
<td style="text-align:left">orderid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">订单号</td>
</tr>
<tr>
<td style="text-align:left">balancecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">结算方式</td>
</tr>
<tr>
<td style="text-align:left">notecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">应收应付票据编号</td>
</tr>
<tr>
<td style="text-align:left">digest</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">oppositebankcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行帐号</td>
</tr>
<tr>
<td style="text-align:left">foreigncurrency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">currencyrate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本币金额</td>
</tr>
<tr>
<td style="text-align:left">originalamount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币金额</td>
</tr>
<tr>
<td style="text-align:left">operator</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">录入人</td>
</tr>
<tr>
<td style="text-align:left">balanceitemcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码(结算科目)</td>
</tr>
<tr>
<td style="text-align:left">flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">应收应付标志</td>
</tr>
<tr>
<td style="text-align:left">sitemcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结算项目</td>
</tr>
<tr>
<td style="text-align:left">oppositebankname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对方单位银行名称</td>
</tr>
<tr>
<td style="text-align:left">bankname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本单位银行名称</td>
</tr>
<tr>
<td style="text-align:left">bankaccount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本单位银行账号</td>
</tr>
<tr>
<td style="text-align:left">define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项1</td>
</tr>
<tr>
<td style="text-align:left">define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项2</td>
</tr>
<tr>
<td style="text-align:left">define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项3</td>
</tr>
<tr>
<td style="text-align:left">define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项4</td>
</tr>
<tr>
<td style="text-align:left">define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项5</td>
</tr>
<tr>
<td style="text-align:left">define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项6</td>
</tr>
<tr>
<td style="text-align:left">define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项7</td>
</tr>
<tr>
<td style="text-align:left">define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项8</td>
</tr>
<tr>
<td style="text-align:left">define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项9</td>
</tr>
<tr>
<td style="text-align:left">define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项10</td>
</tr>
<tr>
<td style="text-align:left">define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项11</td>
</tr>
<tr>
<td style="text-align:left">define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项12</td>
</tr>
<tr>
<td style="text-align:left">define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项13</td>
</tr>
<tr>
<td style="text-align:left">define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项14</td>
</tr>
<tr>
<td style="text-align:left">define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项15</td>
</tr>
<tr>
<td style="text-align:left">define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项16</td>
</tr>
<tr>
<td style="text-align:left">ccontracttype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">合同类型</td>
</tr>
<tr>
<td style="text-align:left">ccontractid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">合同号</td>
</tr>
<tr>
<td style="text-align:left">iamount_s</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">数量</td>
</tr>
<tr>
<td style="text-align:left">startflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期初标志</td>
</tr>
<tr>
<td style="text-align:left">mainid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">主子表关联</td>
</tr>
<tr>
<td style="text-align:left">type</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">款项类型</td>
</tr>
<tr>
<td style="text-align:left">customercode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">客商编码</td>
</tr>
<tr>
<td style="text-align:left">originalamount</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币金额</td>
</tr>
<tr>
<td style="text-align:left">amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">本币金额</td>
</tr>
<tr>
<td style="text-align:left">itemcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目</td>
</tr>
<tr>
<td style="text-align:left">projectclass</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类编号</td>
</tr>
<tr>
<td style="text-align:left">project</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目编号</td>
</tr>
<tr>
<td style="text-align:left">departmentcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">personcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">职员编码</td>
</tr>
<tr>
<td style="text-align:left">orderid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">订单号</td>
</tr>
<tr>
<td style="text-align:left">itemname</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目名称</td>
</tr>
<tr>
<td style="text-align:left">ccontype</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">合同类型</td>
</tr>
<tr>
<td style="text-align:left">cconid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">合同号</td>
</tr>
<tr>
<td style="text-align:left">iamt_s</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">数量</td>
</tr>
<tr>
<td style="text-align:left">iramt_s</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">剩余数量</td>
</tr>
<tr>
<td style="text-align:left">define22</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项1</td>
</tr>
<tr>
<td style="text-align:left">define23</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项2</td>
</tr>
<tr>
<td style="text-align:left">define24</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项3</td>
</tr>
<tr>
<td style="text-align:left">define25</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项4</td>
</tr>
<tr>
<td style="text-align:left">define26</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项5</td>
</tr>
<tr>
<td style="text-align:left">define27</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项6</td>
</tr>
<tr>
<td style="text-align:left">define28</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项7</td>
</tr>
<tr>
<td style="text-align:left">define29</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项8</td>
</tr>
<tr>
<td style="text-align:left">define30</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项9</td>
</tr>
<tr>
<td style="text-align:left">define31</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项10</td>
</tr>
<tr>
<td style="text-align:left">define32</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项11</td>
</tr>
<tr>
<td style="text-align:left">define33</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项12</td>
</tr>
<tr>
<td style="text-align:left">define34</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项13</td>
</tr>
<tr>
<td style="text-align:left">define35</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项14</td>
</tr>
<tr>
<td style="text-align:left">define36</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项15</td>
</tr>
<tr>
<td style="text-align:left">define37</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项16</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/accept.gif" type="image/gif"/>
    </item>
    <item>
      <title>固定资产变动单</title>
      <link>https://ilyl.life/tools/yonyou/financial/capital-vouchers.html</link>
      <guid>https://ilyl.life/tools/yonyou/financial/capital-vouchers.html</guid>
      <source url="https://ilyl.life/rss.xml">固定资产变动单</source>
      <description>固定资产变动单固定资产变动单 资源符 capitalvouchers 操作符 create 请求参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/capitalvouchers.gif" alt="固定资产变动单" tabindex="0" loading="lazy"><figcaption>固定资产变动单</figcaption></figure>
<h2>资源符</h2>
<p><code>capitalvouchers</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>请求参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">vouchertype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变动单类型</td>
</tr>
<tr>
<td style="text-align:left">assetno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">资产编号</td>
</tr>
<tr>
<td style="text-align:left">voucherdata</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变动内容</td>
</tr>
<tr>
<td style="text-align:left">currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">币种名称</td>
</tr>
<tr>
<td style="text-align:left">exchangerate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">memreason</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变动原因</td>
</tr>
<tr>
<td style="text-align:left">siteafter</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变动后存放地点</td>
</tr>
<tr>
<td style="text-align:left">worktotal</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">工作总量</td>
</tr>
<tr>
<td style="text-align:left">accwork</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计工作量</td>
</tr>
<tr>
<td style="text-align:left">workunit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">工作量单位</td>
</tr>
<tr>
<td style="text-align:left">transdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变动日期</td>
</tr>
<tr>
<td style="text-align:left">transperiod</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变动期间</td>
</tr>
<tr>
<td style="text-align:left">operator</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">经手人</td>
</tr>
<tr>
<td style="text-align:left">assetno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">资产编号</td>
</tr>
<tr>
<td style="text-align:left">deptno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">使用比例</td>
</tr>
<tr>
<td style="text-align:left">depreciationitemno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应折旧科目编码</td>
</tr>
<tr>
<td style="text-align:left">depreciationitemname</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应折旧科目名称</td>
</tr>
<tr>
<td style="text-align:left">relativeprojectno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应项目编码</td>
</tr>
<tr>
<td style="text-align:left">relativeprojectname</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应项目名称</td>
</tr>
<tr>
<td style="text-align:left">relativecItemclsId</td>
<td style="text-align:left">string</td>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">项目大类</td>
</tr>
<tr>
<td style="text-align:left">assetno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">deptno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">depreciationitemno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">depreciationitemname</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">relativeprojectno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">relativeprojectname</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">relativecItemclsId</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\deptscale</td>
<td style="text-align:left">是</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">sourceno</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\sourcescale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应折旧科目编码</td>
</tr>
<tr>
<td style="text-align:left">sourcescale</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry\sourcescale</td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应折旧科目编码</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/capitalvouchers.gif" type="image/gif"/>
    </item>
    <item>
      <title>应付单</title>
      <link>https://ilyl.life/tools/yonyou/financial/ought-pay.html</link>
      <guid>https://ilyl.life/tools/yonyou/financial/ought-pay.html</guid>
      <source url="https://ilyl.life/rss.xml">应付单</source>
      <description>应付单应付单 资源符 oughtpay 操作符 create 请求参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/oughtpay.gif" alt="应付单" tabindex="0" loading="lazy"><figcaption>应付单</figcaption></figure>
<h2>资源符</h2>
<p><code>oughtpay</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>请求参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">子表关联项</td>
</tr>
<tr>
<td style="text-align:left">vouchertype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据类型</td>
</tr>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">应收付单据号</td>
</tr>
<tr>
<td style="text-align:left">relatevouchercode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对应单据号</td>
</tr>
<tr>
<td style="text-align:left">date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据日期</td>
</tr>
<tr>
<td style="text-align:left">cust_vendor_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客商编号</td>
</tr>
<tr>
<td style="text-align:left">deptcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">personcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职员编码</td>
</tr>
<tr>
<td style="text-align:left">item_classcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类编码</td>
</tr>
<tr>
<td style="text-align:left">item_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目编码</td>
</tr>
<tr>
<td style="text-align:left">digest</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">subjectcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">currency_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">currency_rate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">bdebitcredit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">借贷方向</td>
</tr>
<tr>
<td style="text-align:left">natamount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本币金额</td>
</tr>
<tr>
<td style="text-align:left">amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币金额</td>
</tr>
<tr>
<td style="text-align:left">paycondition_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">付款条件</td>
</tr>
<tr>
<td style="text-align:left">operator</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">操作员姓名</td>
</tr>
<tr>
<td style="text-align:left">flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">标志</td>
</tr>
<tr>
<td style="text-align:left">quantity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">数量</td>
</tr>
<tr>
<td style="text-align:left">define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段1</td>
</tr>
<tr>
<td style="text-align:left">define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段2</td>
</tr>
<tr>
<td style="text-align:left">define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段3</td>
</tr>
<tr>
<td style="text-align:left">define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段4</td>
</tr>
<tr>
<td style="text-align:left">define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段5</td>
</tr>
<tr>
<td style="text-align:left">define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段6</td>
</tr>
<tr>
<td style="text-align:left">define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段7</td>
</tr>
<tr>
<td style="text-align:left">define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段8</td>
</tr>
<tr>
<td style="text-align:left">define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段9</td>
</tr>
<tr>
<td style="text-align:left">define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段10</td>
</tr>
<tr>
<td style="text-align:left">define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段11</td>
</tr>
<tr>
<td style="text-align:left">define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段12</td>
</tr>
<tr>
<td style="text-align:left">define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段13</td>
</tr>
<tr>
<td style="text-align:left">define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段14</td>
</tr>
<tr>
<td style="text-align:left">define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段15</td>
</tr>
<tr>
<td style="text-align:left">define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段16</td>
</tr>
<tr>
<td style="text-align:left">startflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期初标志</td>
</tr>
<tr>
<td style="text-align:left">headid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">主表关联项</td>
</tr>
<tr>
<td style="text-align:left">cust_vendor_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">客商编号</td>
</tr>
<tr>
<td style="text-align:left">deptcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">personcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">职员编码</td>
</tr>
<tr>
<td style="text-align:left">item_classcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类编码</td>
</tr>
<tr>
<td style="text-align:left">item_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目编码</td>
</tr>
<tr>
<td style="text-align:left">digest</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">subjectcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">currency_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">currency_rate</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">bdebitcredit</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">借贷方向</td>
</tr>
<tr>
<td style="text-align:left">natamount</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">本币金额</td>
</tr>
<tr>
<td style="text-align:left">amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币金额</td>
</tr>
<tr>
<td style="text-align:left">define22</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项1</td>
</tr>
<tr>
<td style="text-align:left">define23</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项2</td>
</tr>
<tr>
<td style="text-align:left">define24</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项3</td>
</tr>
<tr>
<td style="text-align:left">define25</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项4</td>
</tr>
<tr>
<td style="text-align:left">define26</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项5</td>
</tr>
<tr>
<td style="text-align:left">define27</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项6</td>
</tr>
<tr>
<td style="text-align:left">define28</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项7</td>
</tr>
<tr>
<td style="text-align:left">define29</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项8</td>
</tr>
<tr>
<td style="text-align:left">define30</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项9</td>
</tr>
<tr>
<td style="text-align:left">define31</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项10</td>
</tr>
<tr>
<td style="text-align:left">define32</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项11</td>
</tr>
<tr>
<td style="text-align:left">define33</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项12</td>
</tr>
<tr>
<td style="text-align:left">define34</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项13</td>
</tr>
<tr>
<td style="text-align:left">define35</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项14</td>
</tr>
<tr>
<td style="text-align:left">define36</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项15</td>
</tr>
<tr>
<td style="text-align:left">define37</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项16</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/oughtpay.gif" type="image/gif"/>
    </item>
    <item>
      <title>应收单</title>
      <link>https://ilyl.life/tools/yonyou/financial/ought-receive.html</link>
      <guid>https://ilyl.life/tools/yonyou/financial/ought-receive.html</guid>
      <source url="https://ilyl.life/rss.xml">应收单</source>
      <description>应收单应收单 资源符 oughreceive 操作符 create 请求参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/oughreceive.gif" alt="应收单" tabindex="0" loading="lazy"><figcaption>应收单</figcaption></figure>
<h2>资源符</h2>
<p><code>oughreceive</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>请求参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">子表关联项</td>
</tr>
<tr>
<td style="text-align:left">vouchertype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据类型</td>
</tr>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">应收付单据号</td>
</tr>
<tr>
<td style="text-align:left">relatevouchercode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对应单据号</td>
</tr>
<tr>
<td style="text-align:left">date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">单据日期</td>
</tr>
<tr>
<td style="text-align:left">cust_vendor_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客商编号</td>
</tr>
<tr>
<td style="text-align:left">deptcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">personcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职员编码</td>
</tr>
<tr>
<td style="text-align:left">item_classcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类编码</td>
</tr>
<tr>
<td style="text-align:left">item_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目编码</td>
</tr>
<tr>
<td style="text-align:left">digest</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">subjectcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">currency_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">currency_rate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">bdebitcredit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">借贷方向</td>
</tr>
<tr>
<td style="text-align:left">natamount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本币金额</td>
</tr>
<tr>
<td style="text-align:left">amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币金额</td>
</tr>
<tr>
<td style="text-align:left">paycondition_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">付款条件</td>
</tr>
<tr>
<td style="text-align:left">operator</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">操作员姓名</td>
</tr>
<tr>
<td style="text-align:left">flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">标志</td>
</tr>
<tr>
<td style="text-align:left">quantity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">数量</td>
</tr>
<tr>
<td style="text-align:left">define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段1</td>
</tr>
<tr>
<td style="text-align:left">define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段2</td>
</tr>
<tr>
<td style="text-align:left">define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段3</td>
</tr>
<tr>
<td style="text-align:left">define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段4</td>
</tr>
<tr>
<td style="text-align:left">define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段5</td>
</tr>
<tr>
<td style="text-align:left">define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段6</td>
</tr>
<tr>
<td style="text-align:left">define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段7</td>
</tr>
<tr>
<td style="text-align:left">define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段8</td>
</tr>
<tr>
<td style="text-align:left">define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段9</td>
</tr>
<tr>
<td style="text-align:left">define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段10</td>
</tr>
<tr>
<td style="text-align:left">define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段11</td>
</tr>
<tr>
<td style="text-align:left">define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段12</td>
</tr>
<tr>
<td style="text-align:left">define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段13</td>
</tr>
<tr>
<td style="text-align:left">define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段14</td>
</tr>
<tr>
<td style="text-align:left">define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段15</td>
</tr>
<tr>
<td style="text-align:left">define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段16</td>
</tr>
<tr>
<td style="text-align:left">startflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期初标志</td>
</tr>
<tr>
<td style="text-align:left">headid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">主表关联项</td>
</tr>
<tr>
<td style="text-align:left">cust_vendor_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">客商编号</td>
</tr>
<tr>
<td style="text-align:left">deptcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">personcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">职员编码</td>
</tr>
<tr>
<td style="text-align:left">item_classcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类编码</td>
</tr>
<tr>
<td style="text-align:left">item_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目编码</td>
</tr>
<tr>
<td style="text-align:left">digest</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">subjectcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">currency_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">currency_rate</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">bdebitcredit</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">借贷方向</td>
</tr>
<tr>
<td style="text-align:left">natamount</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">本币金额</td>
</tr>
<tr>
<td style="text-align:left">amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币金额</td>
</tr>
<tr>
<td style="text-align:left">define22</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项1</td>
</tr>
<tr>
<td style="text-align:left">define23</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项2</td>
</tr>
<tr>
<td style="text-align:left">define24</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项3</td>
</tr>
<tr>
<td style="text-align:left">define25</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项4</td>
</tr>
<tr>
<td style="text-align:left">define26</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项5</td>
</tr>
<tr>
<td style="text-align:left">define27</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项6</td>
</tr>
<tr>
<td style="text-align:left">define28</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项7</td>
</tr>
<tr>
<td style="text-align:left">define29</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项8</td>
</tr>
<tr>
<td style="text-align:left">define30</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项9</td>
</tr>
<tr>
<td style="text-align:left">define31</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项10</td>
</tr>
<tr>
<td style="text-align:left">define32</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项11</td>
</tr>
<tr>
<td style="text-align:left">define33</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项12</td>
</tr>
<tr>
<td style="text-align:left">define34</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项13</td>
</tr>
<tr>
<td style="text-align:left">define35</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项14</td>
</tr>
<tr>
<td style="text-align:left">define36</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项15</td>
</tr>
<tr>
<td style="text-align:left">define37</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">表体自定义项16</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/oughreceive.gif" type="image/gif"/>
    </item>
    <item>
      <title>凭证</title>
      <link>https://ilyl.life/tools/yonyou/financial/voucher.html</link>
      <guid>https://ilyl.life/tools/yonyou/financial/voucher.html</guid>
      <source url="https://ilyl.life/rss.xml">凭证</source>
      <description>凭证凭证 资源符 voucher 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/voucher.gif" alt="凭证" tabindex="0" loading="lazy"><figcaption>凭证</figcaption></figure>
<h2>资源符</h2>
<p><code>voucher</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">voucher_type</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">凭证类别</td>
</tr>
<tr>
<td style="text-align:left">fiscal_year</td>
<td style="text-align:left">number</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">凭证所属的会计年度，不填写取当前年</td>
</tr>
<tr>
<td style="text-align:left">accounting_period</td>
<td style="text-align:left">number</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">所属的会计期间，不填写取当前月份</td>
</tr>
<tr>
<td style="text-align:left">voucher_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">凭证号</td>
</tr>
<tr>
<td style="text-align:left">date</td>
<td style="text-align:left">date</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">制单日期</td>
</tr>
<tr>
<td style="text-align:left">enter</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">制单人名称</td>
</tr>
<tr>
<td style="text-align:left">cashier</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">出纳名称</td>
</tr>
<tr>
<td style="text-align:left">attachment_number</td>
<td style="text-align:left">number</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">附单据数</td>
</tr>
<tr>
<td style="text-align:left">voucher_making_system</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">外部系统类型</td>
</tr>
<tr>
<td style="text-align:left">reserve2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">外部凭证业务号</td>
</tr>
<tr>
<td style="text-align:left">account_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">abstract</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种，默认人民币</td>
</tr>
<tr>
<td style="text-align:left">unit_price</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">单价,在科目有数量核算时，填写此项</td>
</tr>
<tr>
<td style="text-align:left">exchange_rate1</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率1，主辅币核算时使用，NC用户使用</td>
</tr>
<tr>
<td style="text-align:left">exchange_rate2</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率2，折本汇率，U8用户使用</td>
</tr>
<tr>
<td style="text-align:left">quantity</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">借方数量,在科目有数量核算时，填写此项</td>
</tr>
<tr>
<td style="text-align:left">primary_amount</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">原币借方发生额</td>
</tr>
<tr>
<td style="text-align:left">secondary_amount</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">辅币借方发生额</td>
</tr>
<tr>
<td style="text-align:left">natural_currency</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">是</td>
<td style="text-align:left">本币借方发生额*与本币贷方发生额不能同时为空</td>
</tr>
<tr>
<td style="text-align:left">dept_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门</td>
</tr>
<tr>
<td style="text-align:left">personnel_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">人员</td>
</tr>
<tr>
<td style="text-align:left">cust_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户</td>
</tr>
<tr>
<td style="text-align:left">supplier_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应商</td>
</tr>
<tr>
<td style="text-align:left">item_class</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类</td>
</tr>
<tr>
<td style="text-align:left">item_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目档案</td>
</tr>
<tr>
<td style="text-align:left">operator</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">业务员</td>
</tr>
<tr>
<td style="text-align:left">self_define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段1</td>
</tr>
<tr>
<td style="text-align:left">self_define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段2</td>
</tr>
<tr>
<td style="text-align:left">self_define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段3</td>
</tr>
<tr>
<td style="text-align:left">self_define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段4</td>
</tr>
<tr>
<td style="text-align:left">self_define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段5</td>
</tr>
<tr>
<td style="text-align:left">self_define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段6</td>
</tr>
<tr>
<td style="text-align:left">self_define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段7</td>
</tr>
<tr>
<td style="text-align:left">self_define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段8</td>
</tr>
<tr>
<td style="text-align:left">self_define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段9</td>
</tr>
<tr>
<td style="text-align:left">self_define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段10</td>
</tr>
<tr>
<td style="text-align:left">self_define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段11</td>
</tr>
<tr>
<td style="text-align:left">self_define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段12</td>
</tr>
<tr>
<td style="text-align:left">self_define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段13</td>
</tr>
<tr>
<td style="text-align:left">self_define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段14</td>
</tr>
<tr>
<td style="text-align:left">self_define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段15</td>
</tr>
<tr>
<td style="text-align:left">self_define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/auxiliary</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段16</td>
</tr>
<tr>
<td style="text-align:left">cexch_name</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">RowGuid</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">行标识</td>
</tr>
<tr>
<td style="text-align:left">iYPeriod</td>
<td style="text-align:left">date</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">年期间</td>
</tr>
<tr>
<td style="text-align:left">iyear</td>
<td style="text-align:left">date</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">年</td>
</tr>
<tr>
<td style="text-align:left">csign</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">凭证类别字</td>
</tr>
<tr>
<td style="text-align:left">nd_s</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">数量借方</td>
</tr>
<tr>
<td style="text-align:left">md_f</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">外币借方</td>
</tr>
<tr>
<td style="text-align:left">ccode</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">md</td>
<td style="text-align:left">number</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">借方金额</td>
</tr>
<tr>
<td style="text-align:left">cCashItem</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">现金项目</td>
</tr>
<tr>
<td style="text-align:left">cash_item</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">现金项目</td>
</tr>
<tr>
<td style="text-align:left">natural_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">是</td>
<td style="text-align:left">本币借方发生额*与本币贷方发生额不能同时为空</td>
</tr>
<tr>
<td style="text-align:left">cdept_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门</td>
</tr>
<tr>
<td style="text-align:left">cperson_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">人员</td>
</tr>
<tr>
<td style="text-align:left">ccus_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户</td>
</tr>
<tr>
<td style="text-align:left">csup_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应商</td>
</tr>
<tr>
<td style="text-align:left">citem_class</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类</td>
</tr>
<tr>
<td style="text-align:left">citem_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目档案</td>
</tr>
<tr>
<td style="text-align:left">cDefine1</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段1</td>
</tr>
<tr>
<td style="text-align:left">cDefine2</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段2</td>
</tr>
<tr>
<td style="text-align:left">cDefine3</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段3</td>
</tr>
<tr>
<td style="text-align:left">cDefine4</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段4</td>
</tr>
<tr>
<td style="text-align:left">cDefine5</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段5</td>
</tr>
<tr>
<td style="text-align:left">cDefine6</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段6</td>
</tr>
<tr>
<td style="text-align:left">cDefine7</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段7</td>
</tr>
<tr>
<td style="text-align:left">cDefine8</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段8</td>
</tr>
<tr>
<td style="text-align:left">cDefine9</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段9</td>
</tr>
<tr>
<td style="text-align:left">cDefine10</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段10</td>
</tr>
<tr>
<td style="text-align:left">cDefine11</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段11</td>
</tr>
<tr>
<td style="text-align:left">cDefine12</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段12</td>
</tr>
<tr>
<td style="text-align:left">cDefine13</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段13</td>
</tr>
<tr>
<td style="text-align:left">cDefine14</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段14</td>
</tr>
<tr>
<td style="text-align:left">cDefine15</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段15</td>
</tr>
<tr>
<td style="text-align:left">cDefine16</td>
<td style="text-align:left">string</td>
<td style="text-align:left">entry/cash_flow</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段16</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/voucher.gif" type="image/gif"/>
    </item>
    <item>
      <title>银行档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/aa_bank.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/aa_bank.html</guid>
      <source url="https://ilyl.life/rss.xml">银行档案</source>
      <description>银行档案银行档案 资源符 aa_bank 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/aa_bank.gif" alt="银行档案" tabindex="0" loading="lazy"><figcaption>银行档案</figcaption></figure>
<h2>资源符</h2>
<p><code>aa_bank</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">银行编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">银行名称</td>
</tr>
<tr>
<td style="text-align:left">bindfixlen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">个人账号是否定长</td>
</tr>
<tr>
<td style="text-align:left">iindaccnolen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">个人账号长度</td>
</tr>
<tr>
<td style="text-align:left">iindautoinputlen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自动带出的个人账号长度</td>
</tr>
<tr>
<td style="text-align:left">cindunitcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">单位编码</td>
</tr>
<tr>
<td style="text-align:left">bcomdfixlen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">企业账号是否定长</td>
</tr>
<tr>
<td style="text-align:left">icomaccnolen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">企业账号长度</td>
</tr>
<tr>
<td style="text-align:left">i_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行标识</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/aa_bank.gif" type="image/gif"/>
    </item>
    <item>
      <title>成套件</title>
      <link>https://ilyl.life/tools/yonyou/archives/assembly.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/assembly.html</guid>
      <source url="https://ilyl.life/rss.xml">成套件</source>
      <description>成套件成套件 资源符 assembly 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/assembly.gif" alt="成套件" tabindex="0" loading="lazy"><figcaption>成套件</figcaption></figure>
<h2>资源符</h2>
<p><code>assembly</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">assemblycode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">套装件编码</td>
</tr>
<tr>
<td style="text-align:left">fittingcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">单件编码</td>
</tr>
<tr>
<td style="text-align:left">fittingquantity</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">单件数量</td>
</tr>
<tr>
<td style="text-align:left">fittingnumber</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">单件件数</td>
</tr>
<tr>
<td style="text-align:left">fittingcost</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">单件成本</td>
</tr>
<tr>
<td style="text-align:left">fittingprice</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">单件单价</td>
</tr>
<tr>
<td style="text-align:left">cAComunitCode</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">辅计量单位编码</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/assembly.gif" type="image/gif"/>
    </item>
    <item>
      <title>结算方式</title>
      <link>https://ilyl.life/tools/yonyou/archives/balance-type.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/balance-type.html</guid>
      <source url="https://ilyl.life/rss.xml">结算方式</source>
      <description>结算方式结算方式 资源符 balancetype 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/balancetype.gif" alt="结算方式" tabindex="0" loading="lazy"><figcaption>结算方式</figcaption></figure>
<h2>资源符</h2>
<p><code>balancetype</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">结算方式编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">结算方式名称</td>
</tr>
<tr>
<td style="text-align:left">flag</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否票据管理</td>
</tr>
<tr>
<td style="text-align:left">code_rank</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">编码级次</td>
</tr>
<tr>
<td style="text-align:left">end_rank_flag</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否末级</td>
</tr>
<tr>
<td style="text-align:left">issbilltype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对应票据类型</td>
</tr>
<tr>
<td style="text-align:left">bPortalSettle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">允许门户结算</td>
</tr>
<tr>
<td style="text-align:left">iNEInBillType</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应网报支付方式</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/balancetype.gif" type="image/gif"/>
    </item>
    <item>
      <title>银行对账单</title>
      <link>https://ilyl.life/tools/yonyou/archives/bank-account.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/bank-account.html</guid>
      <source url="https://ilyl.life/rss.xml">银行对账单</source>
      <description>银行对账单银行对账单 资源符 bankacc 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/bankacc.gif" alt="银行对账单" tabindex="0" loading="lazy"><figcaption>银行对账单</figcaption></figure>
<h2>资源符</h2>
<p><code>bankacc</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行对账单日期</td>
</tr>
<tr>
<td style="text-align:left">subjectcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">balancetype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结算方式</td>
</tr>
<tr>
<td style="text-align:left">balanceno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结算号</td>
</tr>
<tr>
<td style="text-align:left">debitorcredit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">方向</td>
</tr>
<tr>
<td style="text-align:left">money</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">金额</td>
</tr>
<tr>
<td style="text-align:left">balance</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">余额</td>
</tr>
<tr>
<td style="text-align:left">flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对帐标志</td>
</tr>
<tr>
<td style="text-align:left">beginflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期初标志</td>
</tr>
<tr>
<td style="text-align:left">bdelete</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否核销</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/bankacc.gif" type="image/gif"/>
    </item>
    <item>
      <title>本单位开户银行</title>
      <link>https://ilyl.life/tools/yonyou/archives/bank.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/bank.html</guid>
      <source url="https://ilyl.life/rss.xml">本单位开户银行</source>
      <description>本单位开户银行本单位开户银行 资源符 bank 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/bank.gif" alt="本单位开户银行" tabindex="0" loading="lazy"><figcaption>本单位开户银行</figcaption></figure>
<h2>资源符</h2>
<p><code>bank</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">银行编号</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">开户银行名称</td>
</tr>
<tr>
<td style="text-align:left">account</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">银行帐号</td>
</tr>
<tr>
<td style="text-align:left">flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">暂封标志</td>
</tr>
<tr>
<td style="text-align:left">cbankcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">所属银行</td>
</tr>
<tr>
<td style="text-align:left">caccname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">账户名称</td>
</tr>
<tr>
<td style="text-align:left">copenaccaddr</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">开户银行地址</td>
</tr>
<tr>
<td style="text-align:left">cprovincename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">省/自治区</td>
</tr>
<tr>
<td style="text-align:left">ccountyname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">市/县</td>
</tr>
<tr>
<td style="text-align:left">ccurrencyname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">dopenaccdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">开户日期</td>
</tr>
<tr>
<td style="text-align:left">ccustomerno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户编号</td>
</tr>
<tr>
<td style="text-align:left">corgno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">机构号</td>
</tr>
<tr>
<td style="text-align:left">cunionbankno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">联行号</td>
</tr>
<tr>
<td style="text-align:left">isignflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">签约标志</td>
</tr>
<tr>
<td style="text-align:left">bpwdmng</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">进行密码管理</td>
</tr>
<tr>
<td style="text-align:left">iCcbAccountType</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">建行账号属性</td>
</tr>
<tr>
<td style="text-align:left">cTradeAddCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">交易代码</td>
</tr>
<tr>
<td style="text-align:left">iAccProperty</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">账户属性</td>
</tr>
<tr>
<td style="text-align:left">cCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对应科目</td>
</tr>
<tr>
<td style="text-align:left">fCurBalance</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">当前余额</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项1</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项2</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项3</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项4</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项5</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项6</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项7</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项8</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项9</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项10</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项11</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项12</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项13</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项14</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项15</td>
</tr>
<tr>
<td style="text-align:left">cBankDefine16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项16</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/bank.gif" type="image/gif"/>
    </item>
    <item>
      <title>批次档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/batch-property.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/batch-property.html</guid>
      <source url="https://ilyl.life/rss.xml">批次档案</source>
      <description>批次档案批次档案 资源符 batchproperty 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/batchproperty.gif" alt="批次档案" tabindex="0" loading="lazy"><figcaption>批次档案</figcaption></figure>
<h2>资源符</h2>
<p><code>batchproperty</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cinvcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货编码</td>
</tr>
<tr>
<td style="text-align:left">cbatch</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">批号</td>
</tr>
<tr>
<td style="text-align:left">cfree1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项1</td>
</tr>
<tr>
<td style="text-align:left">cfree2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项2</td>
</tr>
<tr>
<td style="text-align:left">cfree3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项3</td>
</tr>
<tr>
<td style="text-align:left">cfree4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项4</td>
</tr>
<tr>
<td style="text-align:left">cfree5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项5</td>
</tr>
<tr>
<td style="text-align:left">cfree6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项6</td>
</tr>
<tr>
<td style="text-align:left">cfree7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项7</td>
</tr>
<tr>
<td style="text-align:left">cfree8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项8</td>
</tr>
<tr>
<td style="text-align:left">cfree9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项9</td>
</tr>
<tr>
<td style="text-align:left">cfree10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项10</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性1</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性2</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性3</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性4</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性5</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性6</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性7</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性8</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性9</td>
</tr>
<tr>
<td style="text-align:left">cbatchproperty10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">属性10</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/batchproperty.gif" type="image/gif"/>
    </item>
    <item>
      <title>资产类别</title>
      <link>https://ilyl.life/tools/yonyou/archives/capital-asset-types.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/capital-asset-types.html</guid>
      <source url="https://ilyl.life/rss.xml">资产类别</source>
      <description>资产类别资产类别 资源符 capitalassettypes 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/capitalassettypes.gif" alt="资产类别" tabindex="0" loading="lazy"><figcaption>资产类别</figcaption></figure>
<h2>资源符</h2>
<p><code>capitalassettypes</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">assettypeno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">资产类别编码</td>
</tr>
<tr>
<td style="text-align:left">assettypename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">资产类别名称</td>
</tr>
<tr>
<td style="text-align:left">deprmethodnum</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">折旧方法编码</td>
</tr>
<tr>
<td style="text-align:left">deprtype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计提属性编码</td>
</tr>
<tr>
<td style="text-align:left">dblbvrate</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">净残值率</td>
</tr>
<tr>
<td style="text-align:left">unit</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计量单位</td>
</tr>
<tr>
<td style="text-align:left">life</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">使用年限</td>
</tr>
<tr>
<td style="text-align:left">modelid</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">卡片样式</td>
</tr>
<tr>
<td style="text-align:left">assetsubjectnum</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">固定资产入账科目</td>
</tr>
<tr>
<td style="text-align:left">deprtotalsubjectnum</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">累计折旧入账科目</td>
</tr>
<tr>
<td style="text-align:left">decpresubjectnum</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">减值准备入账科目</td>
</tr>
<tr>
<td style="text-align:left">bnotcanretdecvalue</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">不允许转回减值准备</td>
</tr>
<tr>
<td style="text-align:left">cleanupsubjectnum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">资产清理入账科目</td>
</tr>
<tr>
<td style="text-align:left">bnewassetdepr</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">新增当月计提折旧</td>
</tr>
<tr>
<td style="text-align:left">deprsubjectbytype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">按资产类别默认折旧科目</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/capitalassettypes.gif" type="image/gif"/>
    </item>
    <item>
      <title>固定资产卡片</title>
      <link>https://ilyl.life/tools/yonyou/archives/capital-assets.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/capital-assets.html</guid>
      <source url="https://ilyl.life/rss.xml">固定资产卡片</source>
      <description>固定资产卡片固定资产卡片 资源符 capitalasserts 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/capitalasserts.gif" alt="固定资产卡片" tabindex="0" loading="lazy"><figcaption>固定资产卡片</figcaption></figure>
<h2>资源符</h2>
<p><code>capitalasserts</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">assetno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">资产编号</td>
</tr>
<tr>
<td style="text-align:left">assetname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">固定资产名称</td>
</tr>
<tr>
<td style="text-align:left">typeno</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">类别编码</td>
</tr>
<tr>
<td style="text-align:left">originalvalue</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">原值</td>
</tr>
<tr>
<td style="text-align:left">startusedate</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">开始使用日期</td>
</tr>
<tr>
<td style="text-align:left">currency</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">币种名称</td>
</tr>
<tr>
<td style="text-align:left">foreigncurrencynumber</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">外币原值</td>
</tr>
<tr>
<td style="text-align:left">exchangerate</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">汇率</td>
</tr>
<tr>
<td style="text-align:left">worktotal</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">工作总量</td>
</tr>
<tr>
<td style="text-align:left">workunit</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">工作量单位</td>
</tr>
<tr>
<td style="text-align:left">accwork</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计工作量</td>
</tr>
<tr>
<td style="text-align:left">accdepr</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计折旧</td>
</tr>
<tr>
<td style="text-align:left">usedmonths</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">已使用月份</td>
</tr>
<tr>
<td style="text-align:left">accountaddmannerno</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">增加方式编号</td>
</tr>
<tr>
<td style="text-align:left">status</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">使用状况编号</td>
</tr>
<tr>
<td style="text-align:left">depreciationmanner</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">折旧方法编号</td>
</tr>
<tr>
<td style="text-align:left">life</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">可使用月份</td>
</tr>
<tr>
<td style="text-align:left">netleftvalue</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">净残值</td>
</tr>
<tr>
<td style="text-align:left">netleftvaluerate</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">净残值率</td>
</tr>
<tr>
<td style="text-align:left">style</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">规格型号</td>
</tr>
<tr>
<td style="text-align:left">buildingarea</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">建筑面积</td>
</tr>
<tr>
<td style="text-align:left">buildingquantity</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">间(座)数</td>
</tr>
<tr>
<td style="text-align:left">machinequantity</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">电机数量</td>
</tr>
<tr>
<td style="text-align:left">machinewatt</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">电机功率</td>
</tr>
<tr>
<td style="text-align:left">reservesite</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">存放地点</td>
</tr>
<tr>
<td style="text-align:left">decvalue</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">减值准备金额</td>
</tr>
<tr>
<td style="text-align:left">sgroupnum</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">资产组编码</td>
</tr>
<tr>
<td style="text-align:left">addtax</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">增值税</td>
</tr>
<tr>
<td style="text-align:left">skeeper</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保管人</td>
</tr>
<tr>
<td style="text-align:left">cVenCode</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应商编码</td>
</tr>
<tr>
<td style="text-align:left">cVenName</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应商名称</td>
</tr>
<tr>
<td style="text-align:left">dPurDate</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购日期</td>
</tr>
<tr>
<td style="text-align:left">sSeriesNum</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">序列号</td>
</tr>
<tr>
<td style="text-align:left">sCommodityCode</td>
<td style="text-align:left">float</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">商品码</td>
</tr>
<tr>
<td style="text-align:left">assetno</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">商品码</td>
</tr>
<tr>
<td style="text-align:left">deptno</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">deptscale</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">depreciationitemno</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">depreciationitemname</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">relativeprojectno</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">relativeprojectname</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">relativecItemclsId</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">sourceNum</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">sourceScale</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
<tr>
<td style="text-align:left">ProScale</td>
<td style="text-align:left">float</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门编号</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/capitalasserts.gif" type="image/gif"/>
    </item>
    <item>
      <title>期初余额</title>
      <link>https://ilyl.life/tools/yonyou/archives/code-balance.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/code-balance.html</guid>
      <source url="https://ilyl.life/rss.xml">期初余额</source>
      <description>期初余额期初余额 资源符 codebalance 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/codebalance.gif" alt="期初余额" tabindex="0" loading="lazy"><figcaption>期初余额</figcaption></figure>
<h2>资源符</h2>
<p><code>codebalance</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">account_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">auxiliary_accounting</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">辅助核算类型</td>
</tr>
<tr>
<td style="text-align:left">date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">凭证日期</td>
</tr>
<tr>
<td style="text-align:left">voucher_type</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">凭证类别</td>
</tr>
<tr>
<td style="text-align:left">voucher_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">凭证号</td>
</tr>
<tr>
<td style="text-align:left">abstract</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">摘要</td>
</tr>
<tr>
<td style="text-align:left">currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">币种名称</td>
</tr>
<tr>
<td style="text-align:left">direction</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">金额期初方向</td>
</tr>
<tr>
<td style="text-align:left">debit_quantity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">数量借方</td>
</tr>
<tr>
<td style="text-align:left">primary_debit_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计借方原币金额</td>
</tr>
<tr>
<td style="text-align:left">natural_debit_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计借方本币金额</td>
</tr>
<tr>
<td style="text-align:left">credit_quantity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">数量贷方</td>
</tr>
<tr>
<td style="text-align:left">primary_credit_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计贷方原币金额</td>
</tr>
<tr>
<td style="text-align:left">natural_credit_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">累计贷方本币金额</td>
</tr>
<tr>
<td style="text-align:left">end_quantity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">数量期末</td>
</tr>
<tr>
<td style="text-align:left">primary_end_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">原币期末</td>
</tr>
<tr>
<td style="text-align:left">natural_end_currency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">金额期末</td>
</tr>
<tr>
<td style="text-align:left">...</td>
<td style="text-align:left">...</td>
<td style="text-align:left"></td>
<td style="text-align:left">...</td>
<td style="text-align:left">...</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/codebalance.gif" type="image/gif"/>
    </item>
    <item>
      <title>会计科目</title>
      <link>https://ilyl.life/tools/yonyou/archives/code.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/code.html</guid>
      <source url="https://ilyl.life/rss.xml">会计科目</source>
      <description>会计科目会计科目 资源符 code 操作符 create 请求参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/code.gif" alt="会计科目" tabindex="0" loading="lazy"><figcaption>会计科目</figcaption></figure>
<h2>资源符</h2>
<p><code>code</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>请求参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自动编号</td>
</tr>
<tr>
<td style="text-align:left">type</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目类型</td>
</tr>
<tr>
<td style="text-align:left">type_ename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目类型英文名称</td>
</tr>
<tr>
<td style="text-align:left">analysis_type</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">财务分析类型</td>
</tr>
<tr>
<td style="text-align:left">analysis_type_ename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">财务分析类型英文名称</td>
</tr>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目名称</td>
</tr>
<tr>
<td style="text-align:left">ename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目英文名称</td>
</tr>
<tr>
<td style="text-align:left">grade</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目级次</td>
</tr>
<tr>
<td style="text-align:left">prop</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目性质</td>
</tr>
<tr>
<td style="text-align:left">acclist_style</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">帐页格式</td>
</tr>
<tr>
<td style="text-align:left">acclist_style_ename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">帐页格式英文名称</td>
</tr>
<tr>
<td style="text-align:left">ac_assist</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目助记码</td>
</tr>
<tr>
<td style="text-align:left">fc_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">外币名称</td>
</tr>
<tr>
<td style="text-align:left">measure_unit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计量单位</td>
</tr>
<tr>
<td style="text-align:left">person_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">个人往来核算</td>
</tr>
<tr>
<td style="text-align:left">cust_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户往来核算</td>
</tr>
<tr>
<td style="text-align:left">supplier_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应商往来核算</td>
</tr>
<tr>
<td style="text-align:left">dept_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门核算</td>
</tr>
<tr>
<td style="text-align:left">item_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目核算</td>
</tr>
<tr>
<td style="text-align:left">item_category</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目大类</td>
</tr>
<tr>
<td style="text-align:left">date_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">日记帐</td>
</tr>
<tr>
<td style="text-align:left">bank_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行帐</td>
</tr>
<tr>
<td style="text-align:left">sum_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否汇总打印</td>
</tr>
<tr>
<td style="text-align:left">end_item_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否末级科目</td>
</tr>
<tr>
<td style="text-align:left">exchange_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否参与汇兑损益计算</td>
</tr>
<tr>
<td style="text-align:left">cash_acc_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否现金科目</td>
</tr>
<tr>
<td style="text-align:left">bank_acc_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否银行科目</td>
</tr>
<tr>
<td style="text-align:left">bacc_enable_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行账科目是否启用</td>
</tr>
<tr>
<td style="text-align:left">bacc_balance_way</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行账科目对账方向</td>
</tr>
<tr>
<td style="text-align:left">bacc_begin</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行账科目启用日期</td>
</tr>
<tr>
<td style="text-align:left">bacc_end</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行账科目对账截止日期</td>
</tr>
<tr>
<td style="text-align:left">period_pl</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期间损益</td>
</tr>
<tr>
<td style="text-align:left">acc_seal_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目是否封存</td>
</tr>
<tr>
<td style="text-align:left">ctrled_acc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">受控科目</td>
</tr>
<tr>
<td style="text-align:left">other_use_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">其它系统是否使用</td>
</tr>
<tr>
<td style="text-align:left">self_define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段1</td>
</tr>
<tr>
<td style="text-align:left">self_define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段2</td>
</tr>
<tr>
<td style="text-align:left">self_define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段3</td>
</tr>
<tr>
<td style="text-align:left">self_define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段4</td>
</tr>
<tr>
<td style="text-align:left">self_define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段5</td>
</tr>
<tr>
<td style="text-align:left">self_define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段6</td>
</tr>
<tr>
<td style="text-align:left">self_define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段7</td>
</tr>
<tr>
<td style="text-align:left">self_define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段8</td>
</tr>
<tr>
<td style="text-align:left">self_define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段9</td>
</tr>
<tr>
<td style="text-align:left">self_define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段10</td>
</tr>
<tr>
<td style="text-align:left">self_define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段11</td>
</tr>
<tr>
<td style="text-align:left">self_define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段12</td>
</tr>
<tr>
<td style="text-align:left">self_define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段13</td>
</tr>
<tr>
<td style="text-align:left">self_define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段14</td>
</tr>
<tr>
<td style="text-align:left">self_define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段15</td>
</tr>
<tr>
<td style="text-align:left">self_define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义字段16</td>
</tr>
<tr>
<td style="text-align:left">itemtype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">在建工程项目科目类型</td>
</tr>
<tr>
<td style="text-align:left">proj_balance</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否工程结算科目</td>
</tr>
<tr>
<td style="text-align:left">cashitem</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否常用现金流量科目</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/code.gif" type="image/gif"/>
    </item>
    <item>
      <title>外币设置</title>
      <link>https://ilyl.life/tools/yonyou/archives/currency.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/currency.html</guid>
      <source url="https://ilyl.life/rss.xml">外币设置</source>
      <description>外币设置外币设置 资源符 currency 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/currency.gif" alt="外币设置" tabindex="0" loading="lazy"><figcaption>外币设置</figcaption></figure>
<h2>资源符</h2>
<p><code>currency</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自动编号</td>
</tr>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种名称</td>
</tr>
<tr>
<td style="text-align:left">caltype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">折算方式</td>
</tr>
<tr>
<td style="text-align:left">precision</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">小数位数</td>
</tr>
<tr>
<td style="text-align:left">error</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最大误差</td>
</tr>
<tr>
<td style="text-align:left">otherused</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">其它系统是否使用</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/currency.gif" type="image/gif"/>
    </item>
    <item>
      <title>客户分类</title>
      <link>https://ilyl.life/tools/yonyou/archives/customer-class.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/customer-class.html</guid>
      <source url="https://ilyl.life/rss.xml">客户分类</source>
      <description>客户分类客户分类 资源符 customerclass 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/customerclass.gif" alt="客户分类" tabindex="0" loading="lazy"><figcaption>客户分类</figcaption></figure>
<h2>资源符</h2>
<p><code>customerclass</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户分类编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户分类名称</td>
</tr>
<tr>
<td style="text-align:left">rank</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户分类编码级次</td>
</tr>
<tr>
<td style="text-align:left">end_rank_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">末级标志</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/customerclass.gif" type="image/gif"/>
    </item>
    <item>
      <title>客户存货对照表</title>
      <link>https://ilyl.life/tools/yonyou/archives/customer-inventory.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/customer-inventory.html</guid>
      <source url="https://ilyl.life/rss.xml">客户存货对照表</source>
      <description>客户存货对照表客户存货对照表 资源符 cusandinv 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/cusandinv.gif" alt="客户存货对照表" tabindex="0" loading="lazy"><figcaption>客户存货对照表</figcaption></figure>
<h2>资源符</h2>
<p><code>cusandinv</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ccuscode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户编码</td>
</tr>
<tr>
<td style="text-align:left">cinvcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货编码</td>
</tr>
<tr>
<td style="text-align:left">ccusinvcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户存货编码</td>
</tr>
<tr>
<td style="text-align:left">ccusinvname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户存货名称</td>
</tr>
<tr>
<td style="text-align:left">iteststyle</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验方式</td>
</tr>
<tr>
<td style="text-align:left">idtmethod</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检方案</td>
</tr>
<tr>
<td style="text-align:left">fdtrate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检率</td>
</tr>
<tr>
<td style="text-align:left">fdtnum</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检量</td>
</tr>
<tr>
<td style="text-align:left">cdtunit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验计量单位</td>
</tr>
<tr>
<td style="text-align:left">idtstyle</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检方式</td>
</tr>
<tr>
<td style="text-align:left">idtlevel</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验水平</td>
</tr>
<tr>
<td style="text-align:left">cdtaql</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">AQL</td>
</tr>
<tr>
<td style="text-align:left">boutinvdt</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否发货检验</td>
</tr>
<tr>
<td style="text-align:left">crulecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义抽检规则</td>
</tr>
<tr>
<td style="text-align:left">fcusinvwasterate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">发货合理损耗率%</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/cusandinv.gif" type="image/gif"/>
    </item>
    <item>
      <title>客户联系人</title>
      <link>https://ilyl.life/tools/yonyou/archives/customer-linker.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/customer-linker.html</guid>
      <source url="https://ilyl.life/rss.xml">客户联系人</source>
      <description>客户联系人客户联系人 资源符 customerlinker 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/customerlinker.gif" alt="客户联系人" tabindex="0" loading="lazy"><figcaption>客户联系人</figcaption></figure>
<h2>资源符</h2>
<p><code>customerlinker</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">联系人编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">联系人名称</td>
</tr>
<tr>
<td style="text-align:left">title</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">称呼</td>
</tr>
<tr>
<td style="text-align:left">of_customer</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">所属客户</td>
</tr>
<tr>
<td style="text-align:left">sex</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">性别</td>
</tr>
<tr>
<td style="text-align:left">birthday</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">生日</td>
</tr>
<tr>
<td style="text-align:left">native</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">籍贯</td>
</tr>
<tr>
<td style="text-align:left">position</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职务</td>
</tr>
<tr>
<td style="text-align:left">direct_leader</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">直接上级</td>
</tr>
<tr>
<td style="text-align:left">mobile</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">移动电话</td>
</tr>
<tr>
<td style="text-align:left">office_phone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">办公电话</td>
</tr>
<tr>
<td style="text-align:left">family_phone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">家庭电话</td>
</tr>
<tr>
<td style="text-align:left">bp</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">传呼</td>
</tr>
<tr>
<td style="text-align:left">email</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">电子邮件</td>
</tr>
<tr>
<td style="text-align:left">web</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">个人网址</td>
</tr>
<tr>
<td style="text-align:left">work_address</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">工作地址</td>
</tr>
<tr>
<td style="text-align:left">postcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">邮编</td>
</tr>
<tr>
<td style="text-align:left">marriage</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">婚姻状况</td>
</tr>
<tr>
<td style="text-align:left">family_member</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">家庭主要成员</td>
</tr>
<tr>
<td style="text-align:left">family_address</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">家庭地址</td>
</tr>
<tr>
<td style="text-align:left">favorite</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">个人爱好</td>
</tr>
<tr>
<td style="text-align:left">be_main_linker</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否主要联系人</td>
</tr>
<tr>
<td style="text-align:left">charge_person</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">负责人</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">备注</td>
</tr>
<tr>
<td style="text-align:left">founder</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">建档人</td>
</tr>
<tr>
<td style="text-align:left">fondertime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">建档时间</td>
</tr>
<tr>
<td style="text-align:left">change_person</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变更人</td>
</tr>
<tr>
<td style="text-align:left">change_time</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">变更时间</td>
</tr>
<tr>
<td style="text-align:left">self_define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项1</td>
</tr>
<tr>
<td style="text-align:left">self_define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项2</td>
</tr>
<tr>
<td style="text-align:left">self_define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项3</td>
</tr>
<tr>
<td style="text-align:left">self_define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项4</td>
</tr>
<tr>
<td style="text-align:left">self_define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项5</td>
</tr>
<tr>
<td style="text-align:left">self_define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项6</td>
</tr>
<tr>
<td style="text-align:left">self_define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项7</td>
</tr>
<tr>
<td style="text-align:left">self_define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项8</td>
</tr>
<tr>
<td style="text-align:left">self_define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项9</td>
</tr>
<tr>
<td style="text-align:left">self_define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项10</td>
</tr>
<tr>
<td style="text-align:left">self_define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项11</td>
</tr>
<tr>
<td style="text-align:left">self_define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项12</td>
</tr>
<tr>
<td style="text-align:left">self_define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项13</td>
</tr>
<tr>
<td style="text-align:left">self_define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项14</td>
</tr>
<tr>
<td style="text-align:left">self_define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项15</td>
</tr>
<tr>
<td style="text-align:left">self_define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">自定义项16</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/customerlinker.gif" type="image/gif"/>
    </item>
    <item>
      <title>客户档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/customer.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/customer.html</guid>
      <source url="https://ilyl.life/rss.xml">客户档案</source>
      <description>客户档案客户档案 资源符 customer 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/customer.gif" alt="客户档案" tabindex="0" loading="lazy"><figcaption>客户档案</figcaption></figure>
<h2>资源符</h2>
<p><code>customer</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户名称</td>
</tr>
<tr>
<td style="text-align:left">abbrname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户简称</td>
</tr>
<tr>
<td style="text-align:left">cCusMnemCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">助记码</td>
</tr>
<tr>
<td style="text-align:left">sort_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">所属分类码</td>
</tr>
<tr>
<td style="text-align:left">domain_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">所属地区码</td>
</tr>
<tr>
<td style="text-align:left">industry</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">所属行业</td>
</tr>
<tr>
<td style="text-align:left">address</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">地址</td>
</tr>
<tr>
<td style="text-align:left">postcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">邮政编码</td>
</tr>
<tr>
<td style="text-align:left">tax_reg_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">纳税人登记号</td>
</tr>
<tr>
<td style="text-align:left">bank_open</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">开户银行</td>
</tr>
<tr>
<td style="text-align:left">bank_acc_number</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行账号</td>
</tr>
<tr>
<td style="text-align:left">seed_date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">发展日期</td>
</tr>
<tr>
<td style="text-align:left">legal_man</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">法人</td>
</tr>
<tr>
<td style="text-align:left">email</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">Email地址</td>
</tr>
<tr>
<td style="text-align:left">contact</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">联系人</td>
</tr>
<tr>
<td style="text-align:left">phone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">电话</td>
</tr>
<tr>
<td style="text-align:left">fax</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">传真</td>
</tr>
<tr>
<td style="text-align:left">bp</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">QQ号</td>
</tr>
<tr>
<td style="text-align:left">mobile</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">手机</td>
</tr>
<tr>
<td style="text-align:left">spec_operator</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">专管业务员</td>
</tr>
<tr>
<td style="text-align:left">discount_rate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">扣率</td>
</tr>
<tr>
<td style="text-align:left">credit_rank</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">信用等级</td>
</tr>
<tr>
<td style="text-align:left">credit_amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用额度</td>
</tr>
<tr>
<td style="text-align:left">credit_deadline</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用期限</td>
</tr>
<tr>
<td style="text-align:left">pay_condition</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">付款条件</td>
</tr>
<tr>
<td style="text-align:left">devliver_site</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">发货地址</td>
</tr>
<tr>
<td style="text-align:left">deliver_mode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">发货方式</td>
</tr>
<tr>
<td style="text-align:left">head_corp_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">客户总公司编码</td>
</tr>
<tr>
<td style="text-align:left">deli_warehouse</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">发货仓库</td>
</tr>
<tr>
<td style="text-align:left">super_dept</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">分管部门</td>
</tr>
<tr>
<td style="text-align:left">ar_rest</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">应收余额</td>
</tr>
<tr>
<td style="text-align:left">last_tr_date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最后交易日期</td>
</tr>
<tr>
<td style="text-align:left">last_tr_amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最后交易金额</td>
</tr>
<tr>
<td style="text-align:left">last_rec_date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最后收款日期</td>
</tr>
<tr>
<td style="text-align:left">last_rec_amount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最后收款金额</td>
</tr>
<tr>
<td style="text-align:left">end_date</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">停用日期</td>
</tr>
<tr>
<td style="text-align:left">tr_frequency</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">使用频度</td>
</tr>
<tr>
<td style="text-align:left">self_define1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项1</td>
</tr>
<tr>
<td style="text-align:left">self_define2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项2</td>
</tr>
<tr>
<td style="text-align:left">self_define3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项3</td>
</tr>
<tr>
<td style="text-align:left">pricegrade</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">价格级别</td>
</tr>
<tr>
<td style="text-align:left">CreatePerson</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">建档人</td>
</tr>
<tr>
<td style="text-align:left">ModifyPerson</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">变更人</td>
</tr>
<tr>
<td style="text-align:left">ModifyDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">变更日期</td>
</tr>
<tr>
<td style="text-align:left">auth_class</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">所属权限分类</td>
</tr>
<tr>
<td style="text-align:left">self_define4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项4</td>
</tr>
<tr>
<td style="text-align:left">self_define5</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项5</td>
</tr>
<tr>
<td style="text-align:left">self_define6</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项6</td>
</tr>
<tr>
<td style="text-align:left">self_define7</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项7</td>
</tr>
<tr>
<td style="text-align:left">self_define8</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项8</td>
</tr>
<tr>
<td style="text-align:left">self_define9</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项9</td>
</tr>
<tr>
<td style="text-align:left">self_define10</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项10</td>
</tr>
<tr>
<td style="text-align:left">self_define11</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项11</td>
</tr>
<tr>
<td style="text-align:left">self_define12</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项12</td>
</tr>
<tr>
<td style="text-align:left">self_define13</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项13</td>
</tr>
<tr>
<td style="text-align:left">self_define14</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项14</td>
</tr>
<tr>
<td style="text-align:left">self_define15</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项15</td>
</tr>
<tr>
<td style="text-align:left">self_define16</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义项16</td>
</tr>
<tr>
<td style="text-align:left">InvoiceCompany</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">开票单位</td>
</tr>
<tr>
<td style="text-align:left">Credit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否控制信用额度</td>
</tr>
<tr>
<td style="text-align:left">CreditByHead</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否按总公司控制信用额度</td>
</tr>
<tr>
<td style="text-align:left">CreditDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否控制信用期限</td>
</tr>
<tr>
<td style="text-align:left">LicenceDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">营业执照是否期限管理</td>
</tr>
<tr>
<td style="text-align:left">LicenceSDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">营业执照起始日期</td>
</tr>
<tr>
<td style="text-align:left">LicenceEDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">营业执照到期日期</td>
</tr>
<tr>
<td style="text-align:left">LicenceADays</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">营业执照预警天数</td>
</tr>
<tr>
<td style="text-align:left">LicenceRange</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">营业执照经营范围</td>
</tr>
<tr>
<td style="text-align:left">LicenceNo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">营业执照注册号</td>
</tr>
<tr>
<td style="text-align:left">BusinessDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">经营许可证是否期限管理</td>
</tr>
<tr>
<td style="text-align:left">BusinessSDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">经营许可证起始日期</td>
</tr>
<tr>
<td style="text-align:left">BusinessEDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">经营许可证到期日期</td>
</tr>
<tr>
<td style="text-align:left">BusinessADays</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">经营许可证预警天数</td>
</tr>
<tr>
<td style="text-align:left">CusBusinessRange</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">经营许可证经营范围</td>
</tr>
<tr>
<td style="text-align:left">CusBusinessNo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">经营许可证号</td>
</tr>
<tr>
<td style="text-align:left">CusGSPSDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">GSP认证起始日期</td>
</tr>
<tr>
<td style="text-align:left">CusGSPEDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">GSP认证到期日期</td>
</tr>
<tr>
<td style="text-align:left">CusGSPADays</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">GSP认证预警天数</td>
</tr>
<tr>
<td style="text-align:left">CusGSPAuthRange</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">GSP认证经营范围</td>
</tr>
<tr>
<td style="text-align:left">CusGSPAuthNo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">GSP认证证书号</td>
</tr>
<tr>
<td style="text-align:left">Proxy</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">法人委托书是否期限管理</td>
</tr>
<tr>
<td style="text-align:left">ProxySDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">法人委托书起始日期</td>
</tr>
<tr>
<td style="text-align:left">ProxyEDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">法人委托书到期日期</td>
</tr>
<tr>
<td style="text-align:left">ProxyADays</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">法人委托书预警天数</td>
</tr>
<tr>
<td style="text-align:left">Memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">备注</td>
</tr>
<tr>
<td style="text-align:left">bLimitSale</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否限销</td>
</tr>
<tr>
<td style="text-align:left">cCusCountryCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">国家</td>
</tr>
<tr>
<td style="text-align:left">cCusEnName</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文名称</td>
</tr>
<tr>
<td style="text-align:left">cCusEnAddr1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文地址1</td>
</tr>
<tr>
<td style="text-align:left">cCusEnAddr2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文地址2</td>
</tr>
<tr>
<td style="text-align:left">cCusEnAddr3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文地址3</td>
</tr>
<tr>
<td style="text-align:left">cCusEnAddr4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文地址4</td>
</tr>
<tr>
<td style="text-align:left">cCusPortCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">目的港</td>
</tr>
<tr>
<td style="text-align:left">cPrimaryVen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">主要承运商</td>
</tr>
<tr>
<td style="text-align:left">fCommisionRate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">佣金比率(%)</td>
</tr>
<tr>
<td style="text-align:left">fInsueRate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保险费率(%)</td>
</tr>
<tr>
<td style="text-align:left">bHomeBranch</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否有分支机构</td>
</tr>
<tr>
<td style="text-align:left">cBranchAddr</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">分支机构地址</td>
</tr>
<tr>
<td style="text-align:left">cBranchPhone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">分支机构电话</td>
</tr>
<tr>
<td style="text-align:left">cBranchPerson</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">分支机构联系人</td>
</tr>
<tr>
<td style="text-align:left">cCusTradeCCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">行业编码</td>
</tr>
<tr>
<td style="text-align:left">CustomerKCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户级别</td>
</tr>
<tr>
<td style="text-align:left">bCusState</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户状态</td>
</tr>
<tr>
<td style="text-align:left">ccusbankcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">所属银行</td>
</tr>
<tr>
<td style="text-align:left">cRelVendor</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对应供应商编码</td>
</tr>
<tr>
<td style="text-align:left">ccusexch_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">币种</td>
</tr>
<tr>
<td style="text-align:left">bshop</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否门店</td>
</tr>
<tr>
<td style="text-align:left">bOnGPinStore</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">门店收款</td>
</tr>
<tr>
<td style="text-align:left">bcusdomestic</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">国内</td>
</tr>
<tr>
<td style="text-align:left">bcusoverseas</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">国外</td>
</tr>
<tr>
<td style="text-align:left">bserviceattribute</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">服务</td>
</tr>
<tr>
<td style="text-align:left">ccuscreditcompany</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用单位</td>
</tr>
<tr>
<td style="text-align:left">ccussaprotocol</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售默认收付款协议</td>
</tr>
<tr>
<td style="text-align:left">ccusexprotocol</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">出口默认收付款协议</td>
</tr>
<tr>
<td style="text-align:left">ccusotherprotocol</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">其他应收单收付款协议</td>
</tr>
<tr>
<td style="text-align:left">ccusimagentprotocol</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">代理进口默认收付款协议</td>
</tr>
<tr>
<td style="text-align:left">fcusdiscountrate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">直营专柜结算扣率</td>
</tr>
<tr>
<td style="text-align:left">ccussscode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结算方式</td>
</tr>
<tr>
<td style="text-align:left">ccusmngtypecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户管理类型编码</td>
</tr>
<tr>
<td style="text-align:left">brequestsign</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">签回</td>
</tr>
<tr>
<td style="text-align:left">fExpense</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">fApprovedExpense</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dTouchedTime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dRecentlyInvoiceTime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dRecentlyQuoteTime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dRecentlyActivityTime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dRecentlyChanceTime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dRecentlyContractTime</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cLtcCustomerCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">bTransFlag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cLtcPerson</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dLtcDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cLocationSite</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">iCusTaxRate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cProvince</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cCity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cCounty</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cCreditAddCode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cRegCash</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">dDepBeginDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">iEmployeeNum</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">cURL</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/customer.gif" type="image/gif"/>
    </item>
    <item>
      <title>部门档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/department.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/department.html</guid>
      <source url="https://ilyl.life/rss.xml">部门档案</source>
      <description>部门档案部门档案 资源符 department 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/department.gif" alt="部门档案" tabindex="0" loading="lazy"><figcaption>部门档案</figcaption></figure>
<h2>资源符</h2>
<p><code>department</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">部门编码</td>
</tr>
<tr>
<td style="text-align:left">endflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否末级</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">部门名称</td>
</tr>
<tr>
<td style="text-align:left">cdepnameen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文名称</td>
</tr>
<tr>
<td style="text-align:left">cdepleader</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">分管领导</td>
</tr>
<tr>
<td style="text-align:left">rank</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">编码级次</td>
</tr>
<tr>
<td style="text-align:left">manager</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">负责人</td>
</tr>
<tr>
<td style="text-align:left">prop</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门属性</td>
</tr>
<tr>
<td style="text-align:left">phone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">电话</td>
</tr>
<tr>
<td style="text-align:left">address</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">地址</td>
</tr>
<tr>
<td style="text-align:left">remark</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">备注</td>
</tr>
<tr>
<td style="text-align:left">creditline</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用额度</td>
</tr>
<tr>
<td style="text-align:left">creditgrade</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">信用等级</td>
</tr>
<tr>
<td style="text-align:left">creditdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用天数</td>
</tr>
<tr>
<td style="text-align:left">ddepbegindate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">成立日期</td>
</tr>
<tr>
<td style="text-align:left">ddependdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">撤销日期</td>
</tr>
<tr>
<td style="text-align:left">vauthorizedoc</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">批准文号</td>
</tr>
<tr>
<td style="text-align:left">vauthorizeunit</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">批准单位</td>
</tr>
<tr>
<td style="text-align:left">cdepfax</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">传真</td>
</tr>
<tr>
<td style="text-align:left">cdeppostcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">邮政编码</td>
</tr>
<tr>
<td style="text-align:left">cdepemail</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">电子邮件</td>
</tr>
<tr>
<td style="text-align:left">cdeptype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">部门类型</td>
</tr>
<tr>
<td style="text-align:left">bim</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否启用UTU</td>
</tr>
<tr>
<td style="text-align:left">bretail</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">适用零售</td>
</tr>
<tr>
<td style="text-align:left">cdepnameen</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">英文名称</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/department.gif" type="image/gif"/>
    </item>
    <item>
      <title>常用摘要</title>
      <link>https://ilyl.life/tools/yonyou/archives/digest.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/digest.html</guid>
      <source url="https://ilyl.life/rss.xml">常用摘要</source>
      <description>常用摘要常用摘要 资源符 digest 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/digest.gif" alt="常用摘要" tabindex="0" loading="lazy"><figcaption>常用摘要</figcaption></figure>
<h2>资源符</h2>
<p><code>digest</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自动编号</td>
</tr>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">常用摘要编码</td>
</tr>
<tr>
<td style="text-align:left">text</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">常用摘要正文</td>
</tr>
<tr>
<td style="text-align:left">subjectcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">相关科目编码</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/digest.gif" type="image/gif"/>
    </item>
    <item>
      <title>地区分类</title>
      <link>https://ilyl.life/tools/yonyou/archives/district-class.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/district-class.html</guid>
      <source url="https://ilyl.life/rss.xml">地区分类</source>
      <description>地区分类地区分类 资源符 districtclass 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/districtclass.gif" alt="地区分类" tabindex="0" loading="lazy"><figcaption>地区分类</figcaption></figure>
<h2>资源符</h2>
<p><code>districtclass</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">地区编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">地区名称</td>
</tr>
<tr>
<td style="text-align:left">sort</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">编码级次</td>
</tr>
<tr>
<td style="text-align:left">endflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否末级</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/districtclass.gif" type="image/gif"/>
    </item>
    <item>
      <title>凭证类别</title>
      <link>https://ilyl.life/tools/yonyou/archives/dsign.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/dsign.html</guid>
      <source url="https://ilyl.life/rss.xml">凭证类别</source>
      <description>凭证类别凭证类别 资源符 dsign 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/dsign.gif" alt="凭证类别" tabindex="0" loading="lazy"><figcaption>凭证类别</figcaption></figure>
<h2>资源符</h2>
<p><code>dsign</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">i_id</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">唯一标识</td>
</tr>
<tr>
<td style="text-align:left">type</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">凭证类别字</td>
</tr>
<tr>
<td style="text-align:left">order_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">凭证类别排序号</td>
</tr>
<tr>
<td style="text-align:left">type_name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">凭证类别名称</td>
</tr>
<tr>
<td style="text-align:left">other_use_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">其它系统是否使用</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/dsign.gif" type="image/gif"/>
    </item>
    <item>
      <title>职务级别</title>
      <link>https://ilyl.life/tools/yonyou/archives/duty-level.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/duty-level.html</guid>
      <source url="https://ilyl.life/rss.xml">职务级别</source>
      <description>职务级别职务级别 资源符 dutylevel 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/dutylevel.gif" alt="职务级别" tabindex="0" loading="lazy"><figcaption>职务级别</figcaption></figure>
<h2>资源符</h2>
<p><code>dutylevel</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码名称</td>
</tr>
<tr>
<td style="text-align:left">simplename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">简称</td>
</tr>
<tr>
<td style="text-align:left">simplespell</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">简拼</td>
</tr>
<tr>
<td style="text-align:left">levels</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">代码级别</td>
</tr>
<tr>
<td style="text-align:left">pcodeid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">上级代码</td>
</tr>
<tr>
<td style="text-align:left">sysflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">系统/自定义标志</td>
</tr>
<tr>
<td style="text-align:left">childflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否有下级代码</td>
</tr>
<tr>
<td style="text-align:left">hideflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">显示/隐藏</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">备注</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/dutylevel.gif" type="image/gif"/>
    </item>
    <item>
      <title>职务类别</title>
      <link>https://ilyl.life/tools/yonyou/archives/duty-type.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/duty-type.html</guid>
      <source url="https://ilyl.life/rss.xml">职务类别</source>
      <description>职务类别职务类别 资源符 dutytype 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/dutytype.gif" alt="职务类别" tabindex="0" loading="lazy"><figcaption>职务类别</figcaption></figure>
<h2>资源符</h2>
<p><code>dutytype</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码名称</td>
</tr>
<tr>
<td style="text-align:left">simplename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">简称</td>
</tr>
<tr>
<td style="text-align:left">simplespell</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">简拼</td>
</tr>
<tr>
<td style="text-align:left">levels</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">代码级别</td>
</tr>
<tr>
<td style="text-align:left">pcodeid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">上级代码</td>
</tr>
<tr>
<td style="text-align:left">sysflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">系统/自定义标志</td>
</tr>
<tr>
<td style="text-align:left">childflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否有下级代码</td>
</tr>
<tr>
<td style="text-align:left">hideflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">显示/隐藏</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">备注</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/dutytype.gif" type="image/gif"/>
    </item>
    <item>
      <title>职务类别</title>
      <link>https://ilyl.life/tools/yonyou/archives/duty.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/duty.html</guid>
      <source url="https://ilyl.life/rss.xml">职务类别</source>
      <description>职务类别职务类别 资源符 duty 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/duty.gif" alt="职务类别" tabindex="0" loading="lazy"><figcaption>职务类别</figcaption></figure>
<h2>资源符</h2>
<p><code>duty</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">dutycode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职务编码</td>
</tr>
<tr>
<td style="text-align:left">dutyname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职务名称</td>
</tr>
<tr>
<td style="text-align:left">series</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职务类别</td>
</tr>
<tr>
<td style="text-align:left">dutysumm</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">职务概要</td>
</tr>
<tr>
<td style="text-align:left">dutylev</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">职务级别</td>
</tr>
<tr>
<td style="text-align:left">begindate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">设立日期</td>
</tr>
<tr>
<td style="text-align:left">enddate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">撤销日期</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/duty.gif" type="image/gif"/>
    </item>
    <item>
      <title>费用项目</title>
      <link>https://ilyl.life/tools/yonyou/archives/expense-item.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/expense-item.html</guid>
      <source url="https://ilyl.life/rss.xml">费用项目</source>
      <description>费用项目费用项目 资源符 expenseitem 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/expenseitem.gif" alt="费用项目" tabindex="0" loading="lazy"><figcaption>费用项目</figcaption></figure>
<h2>资源符</h2>
<p><code>expenseitem</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">费用项目编号</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">费用项目名称</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">备注</td>
</tr>
<tr>
<td style="text-align:left">cexpccode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">费用项目分类编码</td>
</tr>
<tr>
<td style="text-align:left">iexptaxrate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">税率(%)</td>
</tr>
<tr>
<td style="text-align:left">iexpprofititem</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">盈亏项目</td>
</tr>
<tr>
<td style="text-align:left">ccode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">科目</td>
</tr>
<tr>
<td style="text-align:left">direction</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">方向</td>
</tr>
<tr>
<td style="text-align:left">budgetitemcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目费用编码</td>
</tr>
<tr>
<td style="text-align:left">budgetitemname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">项目费用</td>
</tr>
<tr>
<td style="text-align:left">operationtypecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">业务类型编码</td>
</tr>
<tr>
<td style="text-align:left">operationtypename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">业务类型名称</td>
</tr>
<tr>
<td style="text-align:left">issubsidy</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否补助</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/expenseitem.gif" type="image/gif"/>
    </item>
    <item>
      <title>费用项目分类</title>
      <link>https://ilyl.life/tools/yonyou/archives/expitem-class.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/expitem-class.html</guid>
      <source url="https://ilyl.life/rss.xml">费用项目分类</source>
      <description>费用项目分类费用项目分类 资源符 expitemclass 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/expitemclass.gif" alt="费用项目分类" tabindex="0" loading="lazy"><figcaption>费用项目分类</figcaption></figure>
<h2>资源符</h2>
<p><code>expitemclass</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">费用项目分类编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">费用项目分类名称</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">备注</td>
</tr>
<tr>
<td style="text-align:left">rank</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">编码级次</td>
</tr>
<tr>
<td style="text-align:left">end_rank_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">末级标志</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/expitemclass.gif" type="image/gif"/>
    </item>
    <item>
      <title>存货分类</title>
      <link>https://ilyl.life/tools/yonyou/archives/inventory-class.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/inventory-class.html</guid>
      <source url="https://ilyl.life/rss.xml">存货分类</source>
      <description>存货分类存货分类 资源符 inventoryclass 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/inventoryclass.gif" alt="存货分类" tabindex="0" loading="lazy"><figcaption>存货分类</figcaption></figure>
<h2>资源符</h2>
<p><code>inventoryclass</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货分类编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货分类名称</td>
</tr>
<tr>
<td style="text-align:left">rank</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货分类编码级次</td>
</tr>
<tr>
<td style="text-align:left">end_rank_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">末级标志</td>
</tr>
<tr>
<td style="text-align:left">econo_sort_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">所属经济分类编码</td>
</tr>
<tr>
<td style="text-align:left">barcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">对应条形码中的编码</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/inventoryclass.gif" type="image/gif"/>
    </item>
    <item>
      <title>存货自由项对照表</title>
      <link>https://ilyl.life/tools/yonyou/archives/inventory-free.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/inventory-free.html</guid>
      <source url="https://ilyl.life/rss.xml">存货自由项对照表</source>
      <description>存货自由项对照表存货自由项对照表 资源符 invandfree 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/invandfree.gif" alt="存货自由项对照表" tabindex="0" loading="lazy"><figcaption>存货自由项对照表</figcaption></figure>
<h2>资源符</h2>
<p><code>invandfree</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cinvcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货编码</td>
</tr>
<tr>
<td style="text-align:left">cudid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项ID</td>
</tr>
<tr>
<td style="text-align:left">cudvalue</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项值</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/invandfree.gif" type="image/gif"/>
    </item>
    <item>
      <title>存货货位对照表</title>
      <link>https://ilyl.life/tools/yonyou/archives/inventory-position.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/inventory-position.html</guid>
      <source url="https://ilyl.life/rss.xml">存货货位对照表</source>
      <description>存货货位对照表存货货位对照表 资源符 invandpos 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/invandpos.gif" alt="存货货位对照表" tabindex="0" loading="lazy"><figcaption>存货货位对照表</figcaption></figure>
<h2>资源符</h2>
<p><code>invandpos</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">cinvcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">存货编码</td>
</tr>
<tr>
<td style="text-align:left">cposcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">货位编码</td>
</tr>
<tr>
<td style="text-align:left">iprior</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优先顺序</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/invandpos.gif" type="image/gif"/>
    </item>
    <item>
      <title>存货档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/inventory.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/inventory.html</guid>
      <source url="https://ilyl.life/rss.xml">存货档案</source>
      <description>存货档案存货档案 资源符 inventory 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/inventory.gif" alt="存货档案" tabindex="0" loading="lazy"><figcaption>存货档案</figcaption></figure>
<h2>资源符</h2>
<p><code>inventory</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">unitgroup_type</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">计量单位组类别</td>
</tr>
<tr>
<td style="text-align:left">unitgroup_code</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">计量单位组编码</td>
</tr>
<tr>
<td style="text-align:left">puunit_code</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购默认计量单位编码</td>
</tr>
<tr>
<td style="text-align:left">saunit_code</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售默认计量单位编码</td>
</tr>
<tr>
<td style="text-align:left">stunit_code</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">库存默认计量单位编码</td>
</tr>
<tr>
<td style="text-align:left">caunit_code</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">成本默认计量单位编码</td>
</tr>
<tr>
<td style="text-align:left">unitgroup_name</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计量单位组名称</td>
</tr>
<tr>
<td style="text-align:left">ccomunitname</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">主计量单位名称</td>
</tr>
<tr>
<td style="text-align:left">puunit_name</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购默认计量单位名称</td>
</tr>
<tr>
<td style="text-align:left">saunit_name</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售默认计量单位名称</td>
</tr>
<tr>
<td style="text-align:left">stunit_name</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">库存默认计量单位名称</td>
</tr>
<tr>
<td style="text-align:left">caunit_name</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">成本默认计量单位名称</td>
</tr>
<tr>
<td style="text-align:left">puunit_ichangrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购默认计量单位换算率</td>
</tr>
<tr>
<td style="text-align:left">saunit_ichangrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售默认计量单位换算率</td>
</tr>
<tr>
<td style="text-align:left">stunit_ichangrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">库存默认计量单位换算率</td>
</tr>
<tr>
<td style="text-align:left">caunit_ichangrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">成本默认计量单位换算率</td>
</tr>
<tr>
<td style="text-align:left">check_frequency</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">盘点周期单位</td>
</tr>
<tr>
<td style="text-align:left">frequency</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">盘点周期</td>
</tr>
<tr>
<td style="text-align:left">check_day</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">盘点日</td>
</tr>
<tr>
<td style="text-align:left">lastcheck_date</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">上次盘点日期</td>
</tr>
<tr>
<td style="text-align:left">wastage</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">合理损耗率</td>
</tr>
<tr>
<td style="text-align:left">solitude</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否单独存放</td>
</tr>
<tr>
<td style="text-align:left">enterprise</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">生产企业</td>
</tr>
<tr>
<td style="text-align:left">address</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">产地</td>
</tr>
<tr>
<td style="text-align:left">file</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">批准文号</td>
</tr>
<tr>
<td style="text-align:left">brand</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">注册商标</td>
</tr>
<tr>
<td style="text-align:left">checkout_no</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">合格证号</td>
</tr>
<tr>
<td style="text-align:left">licence</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">许可证号</td>
</tr>
<tr>
<td style="text-align:left">specialties</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">特殊存货标志</td>
</tr>
<tr>
<td style="text-align:left">defwarehouse</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">默认仓库</td>
</tr>
<tr>
<td style="text-align:left">salerate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售加成率</td>
</tr>
<tr>
<td style="text-align:left">advanceDate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">累计提前期</td>
</tr>
<tr>
<td style="text-align:left">currencyName</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">通用名称</td>
</tr>
<tr>
<td style="text-align:left">ProduceAddress</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">生产地点</td>
</tr>
<tr>
<td style="text-align:left">produceNation</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">生产国别</td>
</tr>
<tr>
<td style="text-align:left">RegisterNo</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">进口药品注册证号</td>
</tr>
<tr>
<td style="text-align:left">EnterNo</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">入关证号</td>
</tr>
<tr>
<td style="text-align:left">PackingType</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">包装规格</td>
</tr>
<tr>
<td style="text-align:left">EnglishName</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文名</td>
</tr>
<tr>
<td style="text-align:left">PropertyCheck</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否质检</td>
</tr>
<tr>
<td style="text-align:left">PreparationType</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">剂型</td>
</tr>
<tr>
<td style="text-align:left">Commodity</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">注册商品批件</td>
</tr>
<tr>
<td style="text-align:left">RecipeBatch</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">处方药</td>
</tr>
<tr>
<td style="text-align:left">NotPatentName</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">国际非专利名</td>
</tr>
<tr>
<td style="text-align:left">cAssComunitCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">辅计量单位编码</td>
</tr>
<tr>
<td style="text-align:left">ROPMethod</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">再订货点确定方法</td>
</tr>
<tr>
<td style="text-align:left">SubscribePoint</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">再订货点</td>
</tr>
<tr>
<td style="text-align:left">BatchRule</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">批量规则</td>
</tr>
<tr>
<td style="text-align:left">AssureProvideDays</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保证供应天数</td>
</tr>
<tr>
<td style="text-align:left">VagQuantity</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">日均耗量</td>
</tr>
<tr>
<td style="text-align:left">TestStyle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验方式</td>
</tr>
<tr>
<td style="text-align:left">DTMethod</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检方案</td>
</tr>
<tr>
<td style="text-align:left">DTRate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检率</td>
</tr>
<tr>
<td style="text-align:left">DTNum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检量</td>
</tr>
<tr>
<td style="text-align:left">DTUnit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验计量单位</td>
</tr>
<tr>
<td style="text-align:left">DTStyle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">抽检方式</td>
</tr>
<tr>
<td style="text-align:left">QTMethod</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">质量检验方案</td>
</tr>
<tr>
<td style="text-align:left">bPlanInv</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否计划品</td>
</tr>
<tr>
<td style="text-align:left">bProxyForeign</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否委外</td>
</tr>
<tr>
<td style="text-align:left">bFeatureMatch</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">特征选配</td>
</tr>
<tr>
<td style="text-align:left">bATOModel</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否ATO模型</td>
</tr>
<tr>
<td style="text-align:left">bCheckItem</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否选项类</td>
</tr>
<tr>
<td style="text-align:left">bPTOModel</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否PTO模型</td>
</tr>
<tr>
<td style="text-align:left">bequipment</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否备件</td>
</tr>
<tr>
<td style="text-align:left">cProductUnit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">生产计量单位</td>
</tr>
<tr>
<td style="text-align:left">fOrderUpLimit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">订货超额上限</td>
</tr>
<tr>
<td style="text-align:left">cMassUnit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保质期单位</td>
</tr>
<tr>
<td style="text-align:left">fRetailPrice</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">零售价格</td>
</tr>
<tr>
<td style="text-align:left">cInvDepCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">生产部门</td>
</tr>
<tr>
<td style="text-align:left">iAlterAdvance</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">变动提前期</td>
</tr>
<tr>
<td style="text-align:left">fAlterBaseNum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">变动基数</td>
</tr>
<tr>
<td style="text-align:left">cPlanMethod</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计划方法</td>
</tr>
<tr>
<td style="text-align:left">bMPS</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否MPS件</td>
</tr>
<tr>
<td style="text-align:left">bROP</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否ROP件</td>
</tr>
<tr>
<td style="text-align:left">bRePlan</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否重复计划</td>
</tr>
<tr>
<td style="text-align:left">cSRPolicy</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供需政策</td>
</tr>
<tr>
<td style="text-align:left">bBillUnite</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否令单合并</td>
</tr>
<tr>
<td style="text-align:left">iSupplyDay</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应期间</td>
</tr>
<tr>
<td style="text-align:left">fSupplyMulti</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应倍数</td>
</tr>
<tr>
<td style="text-align:left">fMinSupply</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最低供应量</td>
</tr>
<tr>
<td style="text-align:left">bCutMantissa</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否切除尾数</td>
</tr>
<tr>
<td style="text-align:left">cInvPersonCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计划员</td>
</tr>
<tr>
<td style="text-align:left">iInvTfId</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">时栅代号</td>
</tr>
<tr>
<td style="text-align:left">cEngineerFigNo</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">工程图号</td>
</tr>
<tr>
<td style="text-align:left">bInTotalCost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">成本累计否</td>
</tr>
<tr>
<td style="text-align:left">iSupplyType</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应类型</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项1</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项2</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项3</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项4</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项5</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项6</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项7</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项8</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项9</td>
</tr>
<tr>
<td style="text-align:left">bConfigFree10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">结构性自由项10</td>
</tr>
<tr>
<td style="text-align:left">iDTLevel</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验水平</td>
</tr>
<tr>
<td style="text-align:left">cDTAQL</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">AQL</td>
</tr>
<tr>
<td style="text-align:left">bOutInvDT</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否发货检验</td>
</tr>
<tr>
<td style="text-align:left">bPeriodDT</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否周期检验</td>
</tr>
<tr>
<td style="text-align:left">cDTPeriod</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验周期</td>
</tr>
<tr>
<td style="text-align:left">bBackInvDT</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否退货检验</td>
</tr>
<tr>
<td style="text-align:left">iEndDTStyle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">产品抽检方式</td>
</tr>
<tr>
<td style="text-align:left">bDTWarnInv</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保质期存货是否检验</td>
</tr>
<tr>
<td style="text-align:left">fBackTaxRate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">退税率</td>
</tr>
<tr>
<td style="text-align:left">cCIQCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">海关代码</td>
</tr>
<tr>
<td style="text-align:left">cWGroupCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">重量计量组</td>
</tr>
<tr>
<td style="text-align:left">cWUnit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">重量单位</td>
</tr>
<tr>
<td style="text-align:left">fGrossW</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">毛重</td>
</tr>
<tr>
<td style="text-align:left">cVGroupCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">体积计量组</td>
</tr>
<tr>
<td style="text-align:left">cVUnit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">体积单位</td>
</tr>
<tr>
<td style="text-align:left">fLength</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">长（CM）</td>
</tr>
<tr>
<td style="text-align:left">fWidth</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">宽（CM）</td>
</tr>
<tr>
<td style="text-align:left">fHeight</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">高（CM）</td>
</tr>
<tr>
<td style="text-align:left">cpurpersoncode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购员</td>
</tr>
<tr>
<td style="text-align:left">iBigMonth</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">不大于月</td>
</tr>
<tr>
<td style="text-align:left">iBigDay</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">不大于天</td>
</tr>
<tr>
<td style="text-align:left">iSmallMonth</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">不小于月</td>
</tr>
<tr>
<td style="text-align:left">iSmallDay</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">不小于天</td>
</tr>
<tr>
<td style="text-align:left">cshopunit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">零售计量单位</td>
</tr>
<tr>
<td style="text-align:left">bimportmedicine</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否进口药品</td>
</tr>
<tr>
<td style="text-align:left">bfirstbusimedicine</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否首营药品</td>
</tr>
<tr>
<td style="text-align:left">bforeexpland</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">预测展开</td>
</tr>
<tr>
<td style="text-align:left">cinvplancode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计划品</td>
</tr>
<tr>
<td style="text-align:left">fconvertrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">转换因子</td>
</tr>
<tr>
<td style="text-align:left">dreplacedate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">替换日期</td>
</tr>
<tr>
<td style="text-align:left">binvmodel</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">模型</td>
</tr>
<tr>
<td style="text-align:left">iimptaxrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">进项税率</td>
</tr>
<tr>
<td style="text-align:left">iexptaxrate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">出口税率</td>
</tr>
<tr>
<td style="text-align:left">bexpsale</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">外销</td>
</tr>
<tr>
<td style="text-align:left">idrawbatch</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">领料批量</td>
</tr>
<tr>
<td style="text-align:left">bcheckbsatp</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检查售前ATP</td>
</tr>
<tr>
<td style="text-align:left">cinvprojectcode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">售前ATP方案</td>
</tr>
<tr>
<td style="text-align:left">itestrule</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检验规则</td>
</tr>
<tr>
<td style="text-align:left">crulecode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">自定义抽检规则</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项1</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项2</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项3</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项4</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项5</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项6</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项7</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项8</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项9</td>
</tr>
<tr>
<td style="text-align:left">bcheckfree10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">核算自由项10</td>
</tr>
<tr>
<td style="text-align:left">bbommain</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">允许BOM母件</td>
</tr>
<tr>
<td style="text-align:left">bbomsub</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">允许BOM子件</td>
</tr>
<tr>
<td style="text-align:left">bproductbill</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">允许生产订单</td>
</tr>
<tr>
<td style="text-align:left">icheckatp</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">检查ATP</td>
</tr>
<tr>
<td style="text-align:left">iinvatpid</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">ATP规则</td>
</tr>
<tr>
<td style="text-align:left">iplantfday</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计划时栅天数</td>
</tr>
<tr>
<td style="text-align:left">ioverlapday</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">重叠天数</td>
</tr>
<tr>
<td style="text-align:left">fmaxsupply</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最高供应量</td>
</tr>
<tr>
<td style="text-align:left">bpiece</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计件</td>
</tr>
<tr>
<td style="text-align:left">bsrvitem</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">服务项目</td>
</tr>
<tr>
<td style="text-align:left">bsrvfittings</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">服务配件</td>
</tr>
<tr>
<td style="text-align:left">fminsplit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最小分割量</td>
</tr>
<tr>
<td style="text-align:left">bspecialorder</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">客户订单专用</td>
</tr>
<tr>
<td style="text-align:left">btracksalebill</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售跟单</td>
</tr>
<tr>
<td style="text-align:left">fbuyexcess</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">请购超额上限</td>
</tr>
<tr>
<td style="text-align:left">isurenesstype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">安全库存方法</td>
</tr>
<tr>
<td style="text-align:left">idatetype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期间类型</td>
</tr>
<tr>
<td style="text-align:left">idatesum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">期间数</td>
</tr>
<tr>
<td style="text-align:left">idynamicsurenesstype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">动态安全库存方法</td>
</tr>
<tr>
<td style="text-align:left">ibestrowsum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">覆盖天数</td>
</tr>
<tr>
<td style="text-align:left">ipercentumsum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">百分比</td>
</tr>
<tr>
<td style="text-align:left">binbyprocheck</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否依据产品检验结果入库</td>
</tr>
<tr>
<td style="text-align:left">irequiretrackstyle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">需求跟踪方式</td>
</tr>
<tr>
<td style="text-align:left">ibomexpandunittype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">BOM展开单位</td>
</tr>
<tr>
<td style="text-align:left">iexpiratdatecalcu</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">有效期推算方式</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项1</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项2</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项3</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项4</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项5</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项6</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项7</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项8</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项9</td>
</tr>
<tr>
<td style="text-align:left">bpurpricefree10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购定价自由项10</td>
</tr>
<tr>
<td style="text-align:left">bompricefree1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项1</td>
</tr>
<tr>
<td style="text-align:left">bompricefree2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项2</td>
</tr>
<tr>
<td style="text-align:left">bompricefree3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项3</td>
</tr>
<tr>
<td style="text-align:left">bompricefree4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项4</td>
</tr>
<tr>
<td style="text-align:left">bompricefree5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项5</td>
</tr>
<tr>
<td style="text-align:left">bompricefree6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项6</td>
</tr>
<tr>
<td style="text-align:left">bompricefree7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项7</td>
</tr>
<tr>
<td style="text-align:left">bompricefree8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项8</td>
</tr>
<tr>
<td style="text-align:left">bompricefree9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项9</td>
</tr>
<tr>
<td style="text-align:left">bompricefree10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">委外定价自由项10</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项1</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项2</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项3</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项4</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项5</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项6</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项7</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项8</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项9</td>
</tr>
<tr>
<td style="text-align:left">bsalepricefree10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">销售定价自由项10</td>
</tr>
<tr>
<td style="text-align:left">finvoutuplimit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">发货允超上限</td>
</tr>
<tr>
<td style="text-align:left">bbondedinv</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否保税品</td>
</tr>
<tr>
<td style="text-align:left">bbatchcreate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否建立批次档案</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性1</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性2</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性3</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性4</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性5</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性6</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性7</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性8</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性9</td>
</tr>
<tr>
<td style="text-align:left">bbatchproperty10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否启用批次属性10</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围1</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围2</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围3</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围4</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围5</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围6</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围7</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围8</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围9</td>
</tr>
<tr>
<td style="text-align:left">bcontrolfreerange10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是控制自由项取值范围10</td>
</tr>
<tr>
<td style="text-align:left">finvciqexch</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">海关单位换算率</td>
</tr>
<tr>
<td style="text-align:left">iwarrantyperiod</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保修期限</td>
</tr>
<tr>
<td style="text-align:left">iwarrantyunit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保修期单位</td>
</tr>
<tr>
<td style="text-align:left">bmaintenance</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保养管理</td>
</tr>
<tr>
<td style="text-align:left">imaintenancecycle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保养周期</td>
</tr>
<tr>
<td style="text-align:left">imaintenancecycleunit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">保养周期单位</td>
</tr>
<tr>
<td style="text-align:left">binvkeypart</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否关键物料</td>
</tr>
<tr>
<td style="text-align:left">iacceptearlydays</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">允许提前天数</td>
</tr>
<tr>
<td style="text-align:left">fcurllaborcost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本阶标准人工费用</td>
</tr>
<tr>
<td style="text-align:left">fcurlvarmanucost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本阶标准变动制造费用</td>
</tr>
<tr>
<td style="text-align:left">fcurlfixmanucost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本阶标准固定制造费用</td>
</tr>
<tr>
<td style="text-align:left">fcurlomcost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">本阶标准委外加工费</td>
</tr>
<tr>
<td style="text-align:left">fnextllaborcost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">前阶标准人工费用</td>
</tr>
<tr>
<td style="text-align:left">fnextlvarmanucost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">前阶标准变动制造费用</td>
</tr>
<tr>
<td style="text-align:left">fnextlfixmanucost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">前阶标准固定制造费用</td>
</tr>
<tr>
<td style="text-align:left">fnextlomcost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">前阶标准委外加工费</td>
</tr>
<tr>
<td style="text-align:left">dinvcreatedatetime</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">建档日期</td>
</tr>
<tr>
<td style="text-align:left">bpuquota</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">参与配额</td>
</tr>
<tr>
<td style="text-align:left">binvrohs</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">ROHS物料</td>
</tr>
<tr>
<td style="text-align:left">fprjmatlimit</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">采购数量上限</td>
</tr>
<tr>
<td style="text-align:left">bprjmat</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否工程物料</td>
</tr>
<tr>
<td style="text-align:left">binvasset</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">资产仓</td>
</tr>
<tr>
<td style="text-align:left">bsrvproduct</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">服务产品</td>
</tr>
<tr>
<td style="text-align:left">iacceptdelaydays</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">允许延后天数</td>
</tr>
<tr>
<td style="text-align:left">cInvMnemCode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">助记码</td>
</tr>
<tr>
<td style="text-align:left">iPlanCheckDay</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计划检验天数</td>
</tr>
<tr>
<td style="text-align:left">iMaterialsCycle</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">用料周期</td>
</tr>
<tr>
<td style="text-align:left">idrawtype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">申请领料标识</td>
</tr>
<tr>
<td style="text-align:left">bSCkeyProjections</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">投产推算关键子件</td>
</tr>
<tr>
<td style="text-align:left">iSupplyPeriodType</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应期间类型</td>
</tr>
<tr>
<td style="text-align:left">iTimeBucketId</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">时格id</td>
</tr>
<tr>
<td style="text-align:left">iAvailabilityDate</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">可用日期</td>
</tr>
<tr>
<td style="text-align:left">fmaterialcost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">标准材料费用</td>
</tr>
<tr>
<td style="text-align:left">inearrejectdays</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">失效期临近拒收天数</td>
</tr>
<tr>
<td style="text-align:left">bimport</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否进口</td>
</tr>
<tr>
<td style="text-align:left">bsuitretail</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否适用零售</td>
</tr>
<tr>
<td style="text-align:left">bcoupon</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">礼券</td>
</tr>
<tr>
<td style="text-align:left">bstorecard</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">储值卡</td>
</tr>
<tr>
<td style="text-align:left">bprocessproduct</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">店内加工产品</td>
</tr>
<tr>
<td style="text-align:left">bprocessmaterial</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">店内加工材料</td>
</tr>
<tr>
<td style="text-align:left">froundfactor</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">舍入因子</td>
</tr>
<tr>
<td style="text-align:left">bchecksubitemcost</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否核算分项成本</td>
</tr>
<tr>
<td style="text-align:left">bconsiderfreestock</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否考虑自由库存</td>
</tr>
<tr>
<td style="text-align:left">breceiptbydt</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否依据来料检验结果入库</td>
</tr>
<tr>
<td style="text-align:left">bkccutmantissa</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">领料是否切除尾数</td>
</tr>
<tr>
<td style="text-align:left">iPlanDefault</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">计划默认属性</td>
</tr>
<tr>
<td style="text-align:left">iPFBatchQty</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">流转卡批量</td>
</tr>
<tr>
<td style="text-align:left">iAllocatePrintDgt</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">子件用料打印精度</td>
</tr>
<tr>
<td style="text-align:left">bCheckBatch</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">批次核算</td>
</tr>
<tr>
<td style="text-align:left">bMngOldpart</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">管理旧件</td>
</tr>
<tr>
<td style="text-align:left">iOldpartMngRule</td>
<td style="text-align:left">bool</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">旧件管理规则</td>
</tr>
<tr>
<td style="text-align:left">partid</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自增量</td>
</tr>
<tr>
<td style="text-align:left">invcode</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">存货编码</td>
</tr>
<tr>
<td style="text-align:left">free1</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项1</td>
</tr>
<tr>
<td style="text-align:left">free2</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项2</td>
</tr>
<tr>
<td style="text-align:left">free3</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项3</td>
</tr>
<tr>
<td style="text-align:left">free4</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项4</td>
</tr>
<tr>
<td style="text-align:left">free5</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项5</td>
</tr>
<tr>
<td style="text-align:left">free6</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项6</td>
</tr>
<tr>
<td style="text-align:left">free7</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项7</td>
</tr>
<tr>
<td style="text-align:left">free8</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项8</td>
</tr>
<tr>
<td style="text-align:left">free9</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项9</td>
</tr>
<tr>
<td style="text-align:left">free10</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">自由项10</td>
</tr>
<tr>
<td style="text-align:left">safeqty</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">安全库存</td>
</tr>
<tr>
<td style="text-align:left">minqty</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">最低供应量</td>
</tr>
<tr>
<td style="text-align:left">mulqty</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">供应倍数</td>
</tr>
<tr>
<td style="text-align:left">fixqty</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">固定供应量</td>
</tr>
<tr>
<td style="text-align:left">cbasengineerfigno</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">工程图号</td>
</tr>
<tr>
<td style="text-align:left">fbasmaxsupply</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">最高供应量</td>
</tr>
<tr>
<td style="text-align:left">isurenesstype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">安全库存方法</td>
</tr>
<tr>
<td style="text-align:left">idatetype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">期间类型</td>
</tr>
<tr>
<td style="text-align:left">idatesum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">期间数</td>
</tr>
<tr>
<td style="text-align:left">idynamicsurenesstype</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">动态安全库存方法</td>
</tr>
<tr>
<td style="text-align:left">ibestrowsum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">覆盖天数</td>
</tr>
<tr>
<td style="text-align:left">ipercentumsum</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">百分比</td>
</tr>
<tr>
<td style="text-align:left">bfreestop</td>
<td style="text-align:left">bool</td>
<td style="text-align:left">entry</td>
<td style="text-align:left">否</td>
<td style="text-align:left">停用</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/inventory.gif" type="image/gif"/>
    </item>
    <item>
      <title>职等设置</title>
      <link>https://ilyl.life/tools/yonyou/archives/job-grade-set.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/job-grade-set.html</guid>
      <source url="https://ilyl.life/rss.xml">职等设置</source>
      <description>职等设置职等设置 资源符 jobgradeset 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/jobgradeset.gif" alt="职等设置" tabindex="0" loading="lazy"><figcaption>职等设置</figcaption></figure>
<h2>资源符</h2>
<p><code>jobgradeset</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">jobgradecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职等编码</td>
</tr>
<tr>
<td style="text-align:left">jobgradename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职等名称</td>
</tr>
<tr>
<td style="text-align:left">maxpaypoint</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">薪点上限</td>
</tr>
<tr>
<td style="text-align:left">minpaypoint</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">薪点下限</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/jobgradeset.gif" type="image/gif"/>
    </item>
    <item>
      <title>职位序列</title>
      <link>https://ilyl.life/tools/yonyou/archives/job-type.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/job-type.html</guid>
      <source url="https://ilyl.life/rss.xml">职位序列</source>
      <description>职位序列职位序列 资源符 jobtype 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/jobtype.gif" alt="职位序列" tabindex="0" loading="lazy"><figcaption>职位序列</figcaption></figure>
<h2>资源符</h2>
<p><code>jobtype</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码名称</td>
</tr>
<tr>
<td style="text-align:left">simplename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">简称</td>
</tr>
<tr>
<td style="text-align:left">simplespell</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">简拼</td>
</tr>
<tr>
<td style="text-align:left">levels</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">代码级别</td>
</tr>
<tr>
<td style="text-align:left">pcodeid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">上级代码</td>
</tr>
<tr>
<td style="text-align:left">sysflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">系统/自定义标志</td>
</tr>
<tr>
<td style="text-align:left">childflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否有下级代码</td>
</tr>
<tr>
<td style="text-align:left">hideflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">显示/隐藏</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">备注</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/jobtype.gif" type="image/gif"/>
    </item>
    <item>
      <title>职位档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/job.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/job.html</guid>
      <source url="https://ilyl.life/rss.xml">职位档案</source>
      <description>职位档案职位档案 资源符 job 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/job.gif" alt="职位档案" tabindex="0" loading="lazy"><figcaption>职位档案</figcaption></figure>
<h2>资源符</h2>
<p><code>job</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">jobcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职位编码</td>
</tr>
<tr>
<td style="text-align:left">jobname</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职位名称</td>
</tr>
<tr>
<td style="text-align:left">depcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">所属部门</td>
</tr>
<tr>
<td style="text-align:left">suporior</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">直接上级</td>
</tr>
<tr>
<td style="text-align:left">builddate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">成立日期</td>
</tr>
<tr>
<td style="text-align:left">abortdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">撤销日期</td>
</tr>
<tr>
<td style="text-align:left">jobseries</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职位序列</td>
</tr>
<tr>
<td style="text-align:left">jobrank</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职位等级</td>
</tr>
<tr>
<td style="text-align:left">worksumm</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">工作概要</td>
</tr>
<tr>
<td style="text-align:left">jobrankclasscode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职级分类</td>
</tr>
<tr>
<td style="text-align:left">jobrankbegin</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职级范围起</td>
</tr>
<tr>
<td style="text-align:left">jobrankend</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职级范围止</td>
</tr>
<tr>
<td style="text-align:left">jobgradebegin</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职等范围起</td>
</tr>
<tr>
<td style="text-align:left">jobgradeend</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">职等范围止</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/job.gif" type="image/gif"/>
    </item>
    <item>
      <title>付款条件</title>
      <link>https://ilyl.life/tools/yonyou/archives/pay-condition.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/pay-condition.html</guid>
      <source url="https://ilyl.life/rss.xml">付款条件</source>
      <description>付款条件付款条件 资源符 paycondition 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/paycondition.gif" alt="付款条件" tabindex="0" loading="lazy"><figcaption>付款条件</figcaption></figure>
<h2>资源符</h2>
<p><code>paycondition</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">付款条件编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">付款条件名称</td>
</tr>
<tr>
<td style="text-align:left">creditdays</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">信用天数</td>
</tr>
<tr>
<td style="text-align:left">discountdays1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠天数1</td>
</tr>
<tr>
<td style="text-align:left">discountrate1</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠率1</td>
</tr>
<tr>
<td style="text-align:left">discountdays2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠天数2</td>
</tr>
<tr>
<td style="text-align:left">discountrate2</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠率2</td>
</tr>
<tr>
<td style="text-align:left">discountdays3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠天数3</td>
</tr>
<tr>
<td style="text-align:left">discountrate3</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠率3</td>
</tr>
<tr>
<td style="text-align:left">discountdays4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠天数4</td>
</tr>
<tr>
<td style="text-align:left">discountrate4</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">优惠率4</td>
</tr>
<tr>
<td style="text-align:left">maxdiscountdays</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最多优惠天数</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/paycondition.gif" type="image/gif"/>
    </item>
    <item>
      <title>人员类别</title>
      <link>https://ilyl.life/tools/yonyou/archives/person-type.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/person-type.html</guid>
      <source url="https://ilyl.life/rss.xml">人员类别</source>
      <description>人员类别人员类别 资源符 persontype 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/persontype.gif" alt="人员类别" tabindex="0" loading="lazy"><figcaption>人员类别</figcaption></figure>
<h2>资源符</h2>
<p><code>persontype</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">代码名称</td>
</tr>
<tr>
<td style="text-align:left">simplename</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">简称</td>
</tr>
<tr>
<td style="text-align:left">simplespell</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">简拼</td>
</tr>
<tr>
<td style="text-align:left">levels</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">代码级别</td>
</tr>
<tr>
<td style="text-align:left">pcodeid</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">上级代码</td>
</tr>
<tr>
<td style="text-align:left">sysflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">系统/自定义标志</td>
</tr>
<tr>
<td style="text-align:left">childflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">是否有下级代码</td>
</tr>
<tr>
<td style="text-align:left">hideflag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">显示/隐藏</td>
</tr>
<tr>
<td style="text-align:left">memo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">备注</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/persontype.gif" type="image/gif"/>
    </item>
    <item>
      <title>人员档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/person.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/person.html</guid>
      <source url="https://ilyl.life/rss.xml">人员档案</source>
      <description>人员档案人员档案 资源符 person 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/person.gif" alt="人员档案" tabindex="0" loading="lazy"><figcaption>人员档案</figcaption></figure>
<h2>资源符</h2>
<p><code>person</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">人员编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">人员名称</td>
</tr>
<tr>
<td style="text-align:left">cPsn_NameEN</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">英文名</td>
</tr>
<tr>
<td style="text-align:left">JobNumber</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">工号</td>
</tr>
<tr>
<td style="text-align:left">cpsnproperty</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">人员属性</td>
</tr>
<tr>
<td style="text-align:left">rsex</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">性别</td>
</tr>
<tr>
<td style="text-align:left">rEmployState</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">雇佣状态</td>
</tr>
<tr>
<td style="text-align:left">rpersontype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">人员类别</td>
</tr>
<tr>
<td style="text-align:left">EmploymentForm</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">用工形式</td>
</tr>
<tr>
<td style="text-align:left">cdutyclass</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">班组</td>
</tr>
<tr>
<td style="text-align:left">cjobcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">职位</td>
</tr>
<tr>
<td style="text-align:left">cjobgradecode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">职等</td>
</tr>
<tr>
<td style="text-align:left">cjobrankcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">职级</td>
</tr>
<tr>
<td style="text-align:left">rIDType</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">证件类型</td>
</tr>
<tr>
<td style="text-align:left">vIDNo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">证件号码</td>
</tr>
<tr>
<td style="text-align:left">bpsnperson</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否业务员</td>
</tr>
<tr>
<td style="text-align:left">cdept_num</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">行政部门</td>
</tr>
<tr>
<td style="text-align:left">cpsnbankcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">银行</td>
</tr>
<tr>
<td style="text-align:left">cpsnaccount</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">账号</td>
</tr>
<tr>
<td style="text-align:left">dbirthdate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">出生日期</td>
</tr>
<tr>
<td style="text-align:left">cpsnmobilephone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">手机号</td>
</tr>
<tr>
<td style="text-align:left">cpsnfphone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">家庭电话</td>
</tr>
<tr>
<td style="text-align:left">cpsnophone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">办公电话</td>
</tr>
<tr>
<td style="text-align:left">cpsninphone</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">内线电话</td>
</tr>
<tr>
<td style="text-align:left">cpsnemail</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">Email地址</td>
</tr>
<tr>
<td style="text-align:left">cpsnfaddr</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">家庭住址</td>
</tr>
<tr>
<td style="text-align:left">cpsnpostcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">邮政编码</td>
</tr>
<tr>
<td style="text-align:left">cpsnpostaddr</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">通讯地址</td>
</tr>
<tr>
<td style="text-align:left">cpsnqqcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">QQ号</td>
</tr>
<tr>
<td style="text-align:left">cpsnurl</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">个人网址</td>
</tr>
<tr>
<td style="text-align:left">cpsnoseat</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">工位</td>
</tr>
<tr>
<td style="text-align:left">cdepcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">业务或费用部门</td>
</tr>
<tr>
<td style="text-align:left">fcreditquantity</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用额度</td>
</tr>
<tr>
<td style="text-align:left">icredate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用天数</td>
</tr>
<tr>
<td style="text-align:left">ccregrade</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">信用等级</td>
</tr>
<tr>
<td style="text-align:left">dpvaliddate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">生效日期</td>
</tr>
<tr>
<td style="text-align:left">dpinvaliddate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">失效日期</td>
</tr>
<tr>
<td style="text-align:left">rNativePlace</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">籍贯</td>
</tr>
<tr>
<td style="text-align:left">rNational</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">民族</td>
</tr>
<tr>
<td style="text-align:left">rhealthStatus</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">健康状况</td>
</tr>
<tr>
<td style="text-align:left">rMarriStatus</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">婚姻状况</td>
</tr>
<tr>
<td style="text-align:left">MPicture</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">照片</td>
</tr>
<tr>
<td style="text-align:left">rPerResidence</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">户籍</td>
</tr>
<tr>
<td style="text-align:left">vAliaName</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">曾用名</td>
</tr>
<tr>
<td style="text-align:left">dJoinworkDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">参加工作时间</td>
</tr>
<tr>
<td style="text-align:left">dEnterDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">进入本行业时间</td>
</tr>
<tr>
<td style="text-align:left">dRegularDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">转正定级时间</td>
</tr>
<tr>
<td style="text-align:left">vSSNo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">社会保障号</td>
</tr>
<tr>
<td style="text-align:left">dEnterUnitDate</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">进入本单位时间</td>
</tr>
<tr>
<td style="text-align:left">bProbation</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否试用人员</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/person.gif" type="image/gif"/>
    </item>
    <item>
      <title>货位档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/position.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/position.html</guid>
      <source url="https://ilyl.life/rss.xml">货位档案</source>
      <description>货位档案货位档案 资源符 position 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/position.gif" alt="货位档案" tabindex="0" loading="lazy"><figcaption>货位档案</figcaption></figure>
<h2>资源符</h2>
<p><code>position</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">货位编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">货位名称</td>
</tr>
<tr>
<td style="text-align:left">grade</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">编码级次</td>
</tr>
<tr>
<td style="text-align:left">end_flag</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否末级</td>
</tr>
<tr>
<td style="text-align:left">warehouse_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">仓库编码</td>
</tr>
<tr>
<td style="text-align:left">maxcubage</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最大体积</td>
</tr>
<tr>
<td style="text-align:left">maxweight</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">最大重量</td>
</tr>
<tr>
<td style="text-align:left">remark</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">备注</td>
</tr>
<tr>
<td style="text-align:left">barcode</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">对应条形码中的编码</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/position.gif" type="image/gif"/>
    </item>
    <item>
      <title>采购类型</title>
      <link>https://ilyl.life/tools/yonyou/archives/purchase-type.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/purchase-type.html</guid>
      <source url="https://ilyl.life/rss.xml">采购类型</source>
      <description>采购类型采购类型 资源符 purchasetype 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/purchasetype.gif" alt="采购类型" tabindex="0" loading="lazy"><figcaption>采购类型</figcaption></figure>
<h2>资源符</h2>
<p><code>purchasetype</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">采购类型编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">采购类型名称</td>
</tr>
<tr>
<td style="text-align:left">rstype_code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">是</td>
<td style="text-align:left">入库类别编码</td>
</tr>
<tr>
<td style="text-align:left">bdefau</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否默认值</td>
</tr>
<tr>
<td style="text-align:left">bpfdefault</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否委外默认值</td>
</tr>
<tr>
<td style="text-align:left">bptmps_mrp</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">是否列入MPS/MRP计划</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/purchasetype.gif" type="image/gif"/>
    </item>
    <item>
      <title>原因码档案</title>
      <link>https://ilyl.life/tools/yonyou/archives/reason.html</link>
      <guid>https://ilyl.life/tools/yonyou/archives/reason.html</guid>
      <source url="https://ilyl.life/rss.xml">原因码档案</source>
      <description>原因码档案原因码档案 资源符 reason 操作符 create 参数说明 示例 </description>
      <category>用友</category>
      <pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://nas.ilyl.life:8092/yonyou/reason.gif" alt="原因码档案" tabindex="0" loading="lazy"><figcaption>原因码档案</figcaption></figure>
<h2>资源符</h2>
<p><code>reason</code></p>
<h2>操作符</h2>
<p><code>create</code></p>
<h2>参数说明</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">参数路径</th>
<th style="text-align:left">是否必填</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">code</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">编码</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">名称</td>
</tr>
<tr>
<td style="text-align:left">Reasontype</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">所属类型</td>
</tr>
<tr>
<td style="text-align:left">ReasonMemo</td>
<td style="text-align:left">string</td>
<td style="text-align:left"></td>
<td style="text-align:left">否</td>
<td style="text-align:left">说明</td>
</tr>
</tbody>
</table>
<h2>示例</h2>

]]></content:encoded>
      <enclosure url="https://nas.ilyl.life:8092/yonyou/reason.gif" type="image/gif"/>
    </item>
  </channel>
</rss>